{"version":3,"file":"static/js/760.033b0ae0.chunk.js","mappings":"yJAGA,MAAMA,E,QAA4BC,EAAYC,EAAAA,gBAAkBC,EAAAA,S,sECGhE,MAAMC,EAAYC,GAAMC,KAAKC,MAAU,IAAJF,GAAc,IAC3CG,EAAa,uBACbC,EAAa,8FACbC,EAAmB,+FACzB,SAASC,EAASN,GACd,MAAoB,kBAANA,CAClB,C,+CCVA,MAAMO,EACFC,WAAAA,GACIC,KAAKC,cAAgB,EACzB,CACAC,GAAAA,CAAIC,GAEA,OADAC,EAAAA,EAAAA,IAAcJ,KAAKC,cAAeE,GAC3B,KAAME,EAAAA,EAAAA,IAAWL,KAAKC,cAAeE,EAChD,CACAG,MAAAA,CAAOC,EAAGC,EAAGC,GACT,MAAMC,EAAmBV,KAAKC,cAAcU,OAC5C,GAAKD,EAEL,GAAyB,IAArBA,EAIAV,KAAKC,cAAc,GAAGM,EAAGC,EAAGC,QAG5B,IAAK,IAAIG,EAAI,EAAGA,EAAIF,EAAkBE,IAAK,CAKvC,MAAMT,EAAUH,KAAKC,cAAcW,GACnCT,GAAWA,EAAQI,EAAGC,EAAGC,EAC7B,CAER,CACAI,OAAAA,GACI,OAAOb,KAAKC,cAAcU,MAC9B,CACAG,KAAAA,GACId,KAAKC,cAAcU,OAAS,CAChC,E,iCC7BJ,MAAMI,EAAmBA,CAACR,EAAGC,IAAOjB,GAAMiB,EAAED,EAAEhB,IACxCyB,EAAO,mBAAAC,EAAAC,UAAAP,OAAIQ,EAAY,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAZF,EAAYE,GAAAH,UAAAG,GAAA,OAAKF,EAAaG,OAAOP,EAAiB,C,kCCHvE,MAAMQ,GAAsBC,E,QAAAA,eAAc,CACtCC,mBAAqBC,GAAMA,EAC3BC,UAAU,EACVC,cAAe,S,kCCRnB,MAAMC,EAAQC,GAAQA,C,+FCctB,MAAMC,EAAkB,CACpBC,MAAOC,EAAAA,GACPC,SAAU,OACVC,MAAO,OACPC,MAAOP,EAAAA,GAELQ,EAAiB,CACnBL,MAAOrC,EAAAA,GACPuC,SAAU,SACVC,MAAO,OACPC,MAAOE,EAAAA,EAAMF,OAEXG,EAAkB,CACpBP,MAAOtC,EAAAA,GACPwC,SAAU,UACVC,MAAO,OACPC,MAAOI,EAAAA,GAAOJ,OAElB,SAASK,EAASC,EAAIC,GAAqC,IAAnC,MAAEX,EAAK,SAAEE,EAAQ,MAAEC,EAAK,MAAEC,GAAOO,EACrD,MAAMC,EAAUF,EAAKG,UAAUC,MAAMd,GAChCY,IAELF,EAAK,MAAQR,GAAYU,EAAQjC,OACjC+B,EAAKG,UAAYH,EAAKG,UAAUE,QAAQf,EAAOG,GAC/CO,EAAKM,OAAOC,QAAQL,EAAQM,IAAId,IACpC,CACA,SAASe,EAAoBC,GACzB,MAAMC,EAAgBD,EAAME,WACtBZ,EAAO,CACTU,MAAOC,EACPR,UAAWQ,EACXL,OAAQ,GACRO,QAAS,EACTC,UAAW,EACXC,WAAY,GAMhB,OAJIf,EAAKU,MAAMM,SAAS,WACpBjB,EAASC,EAAMX,GACnBU,EAASC,EAAML,GACfI,EAASC,EAAMH,GACRG,CACX,CACA,SAASiB,EAAkBpE,GACvB,OAAO4D,EAAoB5D,GAAGyD,MAClC,CACA,SAASY,EAAkBC,GACvB,MAAM,OAAEb,EAAM,UAAEQ,EAAS,QAAED,EAAO,UAAEV,GAAcM,EAAoBU,GAChEC,EAAYd,EAAOrC,OACzB,OAAQpB,IACJ,IAAIwE,EAASlB,EACb,IAAK,IAAIjC,EAAI,EAAGA,EAAIkD,EAAWlD,IAEvBmD,EADAnD,EAAI2C,EACKQ,EAAOhB,QAAQhB,EAAgBI,MAAO5C,EAAEqB,IAE5CA,EAAI2C,EAAUC,EACVO,EAAOhB,QAAQV,EAAeF,MAAOG,EAAAA,EAAM0B,UAAUzE,EAAEqB,KAGvDmD,EAAOhB,QAAQR,EAAgBJ,OAAO7C,EAAAA,EAAAA,IAASC,EAAEqB,KAGlE,OAAOmD,EAEf,CACA,MAAME,EAAwB1E,GAAmB,kBAANA,EAAiB,EAAIA,EAMhE,MAAM2E,EAAU,CACZC,KA/EJ,SAAc5E,GACV,IAAI6E,EAAIC,EACR,OAAQC,MAAM/E,KACVM,EAAAA,EAAAA,IAASN,MACwB,QAA9B6E,EAAK7E,EAAEuD,MAAMpD,EAAAA,WAAgC,IAAP0E,OAAgB,EAASA,EAAGzD,SAAW,KAC3C,QAA9B0D,EAAK9E,EAAEuD,MAAMnD,EAAAA,WAAgC,IAAP0E,OAAgB,EAASA,EAAG1D,SAAW,GAChF,CACZ,EAyEIyB,MAAOuB,EACPC,oBACAW,kBATJ,SAA2BhF,GACvB,MAAMiF,EAASb,EAAkBpE,GAEjC,OADoBqE,EAAkBrE,EAC/BkF,CAAYD,EAAOtB,IAAIe,GAClC,E,kCCjFA,MAAMS,GAAqBlD,E,QAAAA,eAAc,CAAC,E,kCCF1C,MAAMmD,EAAiBvB,GAAUwB,QAAQxB,GAASA,EAAMyB,Y,6ECKxD,MAAMC,EAAO,CACTX,MAAMY,EAAAA,EAAAA,GAAc,MAAO,OAC3B3C,OAAO4C,EAAAA,EAAAA,GAAW,MAAO,aAAc,aACvChB,UAAWrB,IAAwD,IAAvD,IAAEsC,EAAG,WAAEC,EAAU,UAAEC,EAAWC,MAAOC,EAAU,GAAG1C,EAC1D,MAAQ,QACJnD,KAAKC,MAAMwF,GACX,KACAK,EAAAA,GAAQtB,WAAU1E,EAAAA,EAAAA,IAAS4F,IAC3B,KACAI,EAAAA,GAAQtB,WAAU1E,EAAAA,EAAAA,IAAS6F,IAC3B,MACA7F,EAAAA,EAAAA,IAAS8F,EAAAA,GAAMpB,UAAUqB,IACzB,K,uGCfZ,MAAME,EAAkBC,IAAI,CACxBrB,KAAO5E,IAAMM,EAAAA,EAAAA,IAASN,IAAMA,EAAEkG,SAASD,IAAiC,IAAxBjG,EAAEmG,MAAM,KAAK/E,OAC7DyB,MAAOuD,WACP3B,UAAYzE,GAAC,GAAAqG,OAAQrG,GAACqG,OAAGJ,KAEvBK,EAAUN,EAAe,OACzBD,EAAUC,EAAe,KACzBO,EAAKP,EAAe,MACpBQ,EAAKR,EAAe,MACpBS,EAAKT,EAAe,MACpBU,GAAkBC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACjBZ,GAAO,IACVlD,MAAQ7C,GAAM+F,EAAQlD,MAAM7C,GAAK,IACjCyE,UAAYzE,GAAM+F,EAAQtB,UAAc,IAAJzE,I,qECbxC,MAAM4G,GAAgB3E,EAAAA,EAAAA,eAAc,CAAC,G,uBCArC,MAAM4E,GAAc5E,EAAAA,EAAAA,eAAc,CAAE6E,QAAQ,ICCtCC,EAAeC,GAAQA,EAAIxD,QAAQ,kBAAmB,SAASyD,cCA/DC,EAA+B,QAAUH,EADjB,kBCF9B,SAASI,EAAYC,GACjB,OAAQA,GACW,kBAARA,GACPC,OAAOC,UAAUC,eAAeC,KAAKJ,EAAK,UAClD,CCDA,SAASK,EAAezH,GACpB,MAAoB,kBAANA,GAAkB6B,MAAM6F,QAAQ1H,EAClD,CCLA,SAAS2H,EAAoB3H,GACzB,OAAc,OAANA,GACS,kBAANA,GACY,oBAAZA,EAAE4H,KACjB,CCJA,MAAMC,EAAuB,CACzB,UACA,cACA,aACA,aACA,WACA,YACA,QAEEC,EAAe,CAAC,aAAcD,GCLpC,SAASE,EAAsBC,GAC3B,OAAQL,EAAoBK,EAAMC,UAC9BH,EAAaI,KAAMC,GAASV,EAAeO,EAAMG,IACzD,CACA,SAASC,EAAcJ,GACnB,OAAO3C,QAAQ0C,EAAsBC,IAAUA,EAAMK,SACzD,CCNA,SAASC,EAAuBN,GAC5B,MAAM,QAAEO,EAAO,QAAEN,GCFrB,SAAgCD,EAAOQ,GACnC,GAAIT,EAAsBC,GAAQ,CAC9B,MAAM,QAAEO,EAAO,QAAEN,GAAYD,EAC7B,MAAO,CACHO,SAAqB,IAAZA,GAAqBd,EAAec,GACvCA,OACAE,EACNR,QAASR,EAAeQ,GAAWA,OAAUQ,EAErD,CACA,OAAyB,IAAlBT,EAAMU,QAAoBF,EAAU,CAAC,CAChD,CDTiCG,CAAuBX,GAAOY,EAAAA,EAAAA,YAAWhC,IACtE,OAAOiC,EAAAA,EAAAA,SAAQ,KAAM,CAAGN,UAASN,YAAY,CAACa,EAA0BP,GAAUO,EAA0Bb,IAChH,CACA,SAASa,EAA0BC,GAC/B,OAAOlH,MAAM6F,QAAQqB,GAAQA,EAAKC,KAAK,KAAOD,CAClD,CEVA,MAAME,EAAe,CACjBC,UAAW,CACP,UACA,WACA,aACA,WACA,OACA,cACA,aACA,aAEJC,KAAM,CAAC,QACPC,KAAM,CAAC,OAAQ,gBACfC,MAAO,CAAC,cACRC,MAAO,CAAC,aAAc,eAAgB,cACtCC,IAAK,CAAC,WAAY,QAAS,aAAc,eACzCC,IAAK,CAAC,QAAS,aAAc,oBAAqB,YAClDC,OAAQ,CAAC,cAAe,kBAAmB,mBAC3CC,OAAQ,CAAC,SAAU,aAEjBC,EAAqB,CAAC,EAC5B,IAAK,MAAMC,MAAOX,EACdU,EAAmBC,IAAO,CACtBC,UAAY7B,GAAUiB,EAAaW,IAAK1B,KAAMC,KAAWH,EAAMG,K,wBClBvE,MAAM2B,GAA2B7H,EAAAA,EAAAA,eAAc,CAAC,GCL1C8H,EAAwBC,OAAOC,IAAI,yBCuBzC,SAASC,EAAqB9G,GAAoF,IAAnF,kBAAE+G,EAAiB,oBAAEC,EAAmB,UAAEC,EAAS,eAAEC,EAAc,UAAEC,GAAYnH,EAC5G+G,GCtBJ,SAAsBK,GAClB,IAAK,MAAMZ,KAAOY,EACdb,EAAmBC,IAAIjD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChBgD,EAAmBC,IACnBY,EAASZ,GAGxB,CDeyBa,CAAaN,GA2ClC,MAAMO,GAAsBC,EAAAA,EAAAA,YA1C5B,SAAyB3C,EAAO4C,GAK5B,IAAIC,EACJ,MAAMC,GAAcnE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,IACbiC,EAAAA,EAAAA,YAAW5G,EAAAA,IACXgG,GAAK,IACR+C,SAAUC,EAAYhD,MAEpB,SAAE5F,GAAa0I,EACftC,EAAUF,EAAuBN,GACjCiD,EAAcX,EAAetC,EAAO5F,GAC1C,IAAKA,GAAYxC,EAAAA,EAAW,CAOxB4I,EAAQ0C,cEtCpB,SAA0BX,EAAWU,EAAajD,EAAOoC,GACrD,MAAQc,cAAeC,IAAWvC,EAAAA,EAAAA,YAAWhC,GACvCwE,GAAcxC,EAAAA,EAAAA,YAAW/B,GACzBwE,GAAkBzC,EAAAA,EAAAA,YAAW0C,EAAAA,GAC7BC,GAAsB3C,EAAAA,EAAAA,YAAW5G,EAAAA,GAAqBK,cACtDmJ,GAAmBC,EAAAA,EAAAA,UAIzBrB,EAAsBA,GAAuBgB,EAAYM,UACpDF,EAAiBG,SAAWvB,IAC7BoB,EAAiBG,QAAUvB,EAAoBG,EAAW,CACtDU,cACAE,SACAnD,QACAqD,kBACAO,wBAAuBP,IACW,IAA5BA,EAAgB9C,QAEtBgD,yBAGR,MAAML,EAAgBM,EAAiBG,SACvCE,EAAAA,EAAAA,oBAAmB,KACfX,GAAiBA,EAAcY,OAAO9D,EAAOqD,KAMjD,MAAMU,GAAeN,EAAAA,EAAAA,QAAOpG,QAAQ2C,EAAMd,KAAkC8E,OAAOC,kBAgCnF,OA/BAtM,EAAAA,EAAAA,GAA0B,KACjBuL,IAELA,EAAcgB,SAWVH,EAAaJ,SAAWT,EAAciB,gBACtCjB,EAAciB,eAAeC,qBAGrCtM,EAAAA,EAAAA,WAAU,KACDoL,IAELA,EAAcmB,kBACTN,EAAaJ,SAAWT,EAAciB,gBACvCjB,EAAciB,eAAeC,iBAE7BL,EAAaJ,UACbI,EAAaJ,SAAU,EAEvBK,OAAOC,iBAAkB,MAG1Bf,CACX,CFzBoCoB,CAAiB/B,EAAWU,EAAaH,EAAgBV,GAKjF,MAAMmC,GAA2B3D,EAAAA,EAAAA,YAAWkB,GACtC0C,GAAW5D,EAAAA,EAAAA,YAAW/B,GAAaC,OACrC0B,EAAQ0C,gBACRL,EAAgBrC,EAAQ0C,cAAcT,aAEtCK,EAAgB0B,EAAUrC,EAAmBoC,GAErD,CAKA,OAAQE,EAAAA,cAAoB7F,EAAc8F,SAAU,CAAE7I,MAAO2E,GACzDqC,GAAiBrC,EAAQ0C,cAAiBuB,EAAAA,cAAoB5B,GAAalE,EAAAA,EAAAA,GAAA,CAAIuE,cAAe1C,EAAQ0C,eAAkBJ,IAAqB,KAC7IT,EAAUE,EAAWvC,EG1DjC,SAAsBiD,EAAaC,EAAeN,GAC9C,OAAO+B,EAAAA,EAAAA,aAAaC,IAChBA,GAAY3B,EAAY4B,OAAS5B,EAAY4B,MAAMD,GAC/C1B,IACA0B,EACM1B,EAAc2B,MAAMD,GACpB1B,EAAc4B,WAEpBlC,IAC2B,oBAAhBA,EACPA,EAAYgC,GAEPzF,EAAYyD,KACjBA,EAAYe,QAAUiB,KASlC,CAAC1B,GACL,CHmCwC6B,CAAa9B,EAAazC,EAAQ0C,cAAeN,GAAcK,EAAa7I,EAAUoG,EAAQ0C,eAClI,GAGA,OADAR,EAAoBX,GAAyBQ,EACtCG,CACX,CACA,SAASM,EAAWgC,GAAe,IAAd,SAAEjC,GAAUiC,EAC7B,MAAMC,GAAgBrE,EAAAA,EAAAA,YAAWzD,EAAAA,GAAoB+H,GACrD,OAAOD,QAA8BxE,IAAbsC,EAClBkC,EAAgB,IAAMlC,EACtBA,CACV,CI5DA,SAASoC,EAAkBC,GACvB,SAASC,EAAO9C,GACZ,OAAOL,EAAsBkD,EAAa7C,EADQ5I,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,GAAAA,UAAA,GAAG,CAAC,GAE1D,CACA,GAAqB,qBAAV2L,MACP,OAAOD,EAMX,MAAME,EAAiB,IAAIC,IAC3B,OAAO,IAAIF,MAAMD,EAAQ,CAMrBI,IAAKA,CAACC,EAAS9D,KAIN2D,EAAeI,IAAI/D,IACpB2D,EAAeK,IAAIhE,EAAKyD,EAAOzD,IAE5B2D,EAAeE,IAAI7D,KAGtC,CCxCA,MAAMiE,EAAuB,CACzB,UACA,SACA,OACA,OACA,UACA,IACA,QACA,OACA,SACA,SACA,OACA,WACA,OACA,UACA,UACA,WACA,OACA,OACA,SACA,SACA,MACA,OACA,QACA,MACA,QC3BJ,SAASC,EAAevD,GACpB,MAKqB,kBAAdA,IAIHA,EAAUpG,SAAS,SAOvB0J,EAAqBE,QAAQxD,IAAc,GAIvC,QAAQ3F,KAAK2F,GAIrB,CC3BA,MAAMyD,EAAkB,CAAC,ECGzB,MAAMC,EAAqB,CACvB,uBACA,IACA,IACA,IACA,aACA,aACA,aACA,QACA,SACA,SACA,SACA,UACA,UACA,UACA,OACA,QACA,SAKEC,EAAiB,IAAIC,IAAIF,GCtB/B,SAASG,EAAoBxE,EAAGxG,GAAwB,IAAtB,OAAEsG,EAAM,SAAEqB,GAAU3H,EAClD,OAAQ8K,EAAeP,IAAI/D,IACvBA,EAAIyE,WAAW,YACb3E,QAAuBjB,IAAbsC,OACLiD,EAAgBpE,IAAgB,YAARA,EACvC,C,cCNA,MAAM0E,EAAiB,CACnBC,EAAG,aACHC,EAAG,aACHC,EAAG,aACHC,qBAAsB,eAEpBC,EAAgBV,EAAmB7M,O,cCLzC,MAAMwN,EAAiBA,CAAC/K,EAAOgL,IACpBA,GAAyB,kBAAVhL,EAChBgL,EAAKpK,UAAUZ,GACfA,E,wBCJV,MAAMiL,GAAGnI,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACF1D,EAAAA,IAAM,IACTwB,UAAWxE,KAAKC,QCAd6O,EAAmB,CAErBC,YAAazI,EAAAA,GACb0I,eAAgB1I,EAAAA,GAChB2I,iBAAkB3I,EAAAA,GAClB4I,kBAAmB5I,EAAAA,GACnB6I,gBAAiB7I,EAAAA,GACjB8I,aAAc9I,EAAAA,GACd+I,OAAQ/I,EAAAA,GACRgJ,oBAAqBhJ,EAAAA,GACrBiJ,qBAAsBjJ,EAAAA,GACtBkJ,wBAAyBlJ,EAAAA,GACzBmJ,uBAAwBnJ,EAAAA,GAExBoJ,MAAOpJ,EAAAA,GACPqJ,SAAUrJ,EAAAA,GACVsJ,OAAQtJ,EAAAA,GACRuJ,UAAWvJ,EAAAA,GACXwJ,KAAMxJ,EAAAA,GACNyJ,IAAKzJ,EAAAA,GACL0J,MAAO1J,EAAAA,GACP2J,OAAQ3J,EAAAA,GACR4J,KAAM5J,EAAAA,GAEN6J,QAAS7J,EAAAA,GACT8J,WAAY9J,EAAAA,GACZ+J,aAAc/J,EAAAA,GACdgK,cAAehK,EAAAA,GACfiK,YAAajK,EAAAA,GACbkK,OAAQlK,EAAAA,GACRmK,UAAWnK,EAAAA,GACXoK,YAAapK,EAAAA,GACbqK,aAAcrK,EAAAA,GACdsK,WAAYtK,EAAAA,GAEZuK,OAAQxK,EAAAA,GACRyK,QAASzK,EAAAA,GACT0K,QAAS1K,EAAAA,GACT2K,QAAS3K,EAAAA,GACT4K,MAAK,KACLC,OAAQD,EAAAA,GACRE,OAAQF,EAAAA,GACRG,OAAQH,EAAAA,GACRI,KAAMhL,EAAAA,GACNiL,MAAOjL,EAAAA,GACPkL,MAAOlL,EAAAA,GACPmL,SAAUlL,EAAAA,GACVmL,WAAYnL,EAAAA,GACZoL,WAAYpL,EAAAA,GACZqL,WAAYrL,EAAAA,GACZgI,EAAGhI,EAAAA,GACHiI,EAAGjI,EAAAA,GACHkI,EAAGlI,EAAAA,GACHsL,YAAatL,EAAAA,GACbmI,qBAAsBnI,EAAAA,GACtBuL,QAASjM,EAAAA,GACTkM,QAASrL,EAAAA,GACTsL,QAAStL,EAAAA,GACTuL,QAAS1L,EAAAA,GAET2L,OAAQpD,EAERqD,YAAatM,EAAAA,GACbuM,cAAevM,EAAAA,GACfwM,WAAYvD,GC9DhB,SAASwD,EAAgBC,EAAOC,EAAcC,EAASC,GACnD,MAAM,MAAEC,EAAK,KAAEC,EAAI,UAAEnO,EAAS,gBAAEoO,GAAoBN,EAEpD,IAAIO,GAAe,EACfC,GAAqB,EAErBC,GAAkB,EAOtB,IAAK,MAAMpJ,KAAO4I,EAAc,CAC5B,MAAM3O,EAAQ2O,EAAa5I,GAI3B,IAAIqJ,EAAAA,EAAAA,IAAkBrJ,GAAM,CACxBgJ,EAAKhJ,GAAO/F,EACZ,QACJ,CAEA,MAAMqP,EAAYnE,EAAiBnF,GAC7BuJ,EAAcvE,EAAe/K,EAAOqP,GAC1C,GAAIhF,EAAeP,IAAI/D,GAAM,CAKzB,GAHAkJ,GAAe,EACfrO,EAAUmF,GAAOuJ,GAEZH,EACD,SAEAnP,KAAWqP,EAAUE,SAAW,KAChCJ,GAAkB,EAC1B,MACSpJ,EAAIyE,WAAW,WAEpB0E,GAAqB,EACrBF,EAAgBjJ,GAAOuJ,GAGvBR,EAAM/I,GAAOuJ,CAErB,CAiBA,GAhBKX,EAAa/N,YACVqO,GAAgBJ,EAChBC,EAAMlO,UJtClB,SAAwBA,EAASrB,EAAqEiQ,EAAoBX,GAAmB,IAA1G,2BAAEY,GAA6B,EAAI,mBAAEC,GAAqB,GAAOnQ,EAE5FoQ,EAAkB,GAKtB,IAAK,IAAInS,EAAI,EAAGA,EAAIsN,EAAetN,IAAK,CACpC,MAAMuI,EAAMqE,EAAmB5M,QACRoH,IAAnBhE,EAAUmF,KAEV4J,GAAmB,GAAJnN,OADOiI,EAAe1E,IAAQA,EACV,KAAAvD,OAAI5B,EAAUmF,GAAI,MAE7D,CAaA,OAZI0J,IAA+B7O,EAAUgK,IACzC+E,GAAmB,iBAEvBA,EAAkBA,EAAgBC,OAG9Bf,EACAc,EAAkBd,EAAkBjO,EAAW4O,EAAqB,GAAKG,GAEpED,GAAsBF,IAC3BG,EAAkB,QAEfA,CACX,CIW8BE,CAAenB,EAAM9N,UAAWgO,EAASO,EAAiBN,GAEvEC,EAAMlO,YAKXkO,EAAMlO,UAAY,SAOtBsO,EAAoB,CACpB,MAAM,QAAEhB,EAAU,MAAK,QAAEC,EAAU,MAAK,QAAEC,EAAU,GAAOY,EAC3DF,EAAME,gBAAkB,GAAHxM,OAAM0L,EAAO,KAAA1L,OAAI2L,EAAO,KAAA3L,OAAI4L,EACrD,CACJ,CCvEA,MAAM0B,EAAwBA,KAAA,CAC1BhB,MAAO,CAAC,EACRlO,UAAW,CAAC,EACZoO,gBAAiB,CAAC,EAClBD,KAAM,CAAC,ICEX,SAASgB,EAAkBC,EAAQvP,EAAQ0D,GACvC,IAAK,MAAM4B,KAAOtF,GACTc,EAAAA,EAAAA,GAAcd,EAAOsF,KAAUwE,EAAoBxE,EAAK5B,KACzD6L,EAAOjK,GAAOtF,EAAOsF,GAGjC,CAQA,SAASkK,EAAS9L,EAAOiD,EAAa7I,GAClC,MACMuQ,EAAQ,CAAC,EAMf,OAFAiB,EAAkBjB,EALA3K,EAAM2K,OAAS,CAAC,EAKE3K,GACpCX,OAAO0M,OAAOpB,EAdlB,SAA+BvP,EAAwB6H,EAAa7I,GAAU,IAA9C,kBAAEsQ,GAAmBtP,EACjD,OAAOyF,EAAAA,EAAAA,SAAQ,KACX,MAAM0J,EDfgB,CAC1BI,MAAO,CAAC,EACRlO,UAAW,CAAC,EACZoO,gBAAiB,CAAC,EAClBD,KAAM,CAAC,GCaH,OADAN,EAAgBC,EAAOtH,EAAa,CAAEqI,4BAA6BlR,GAAYsQ,GACxErL,OAAO0M,OAAO,CAAC,EAAGxB,EAAMK,KAAML,EAAMI,QAC5C,CAAC1H,GACR,CAQyB+I,CAAuBhM,EAAOiD,EAAa7I,IACzD4F,EAAMiM,gBAAkBjM,EAAMiM,gBAAgBtB,GAASA,CAClE,CACA,SAASuB,EAAalM,EAAOiD,EAAa7I,GAEtC,MAAM+R,EAAY,CAAC,EACbxB,EAAQmB,EAAS9L,EAAOiD,EAAa7I,GAoB3C,OAnBI4F,EAAMoB,OAA+B,IAAvBpB,EAAMoM,eAEpBD,EAAUE,WAAY,EAEtB1B,EAAM2B,WACF3B,EAAM4B,iBACF5B,EAAM6B,mBACF,OAEZ7B,EAAM8B,aACa,IAAfzM,EAAMoB,KACA,OAAM,OAAA/C,OACgB,MAAf2B,EAAMoB,KAAe,IAAM,WAEzBX,IAAnBT,EAAM0M,WACL1M,EAAM2M,OAAS3M,EAAM4M,YAAc5M,EAAM6M,YAC1CV,EAAUO,SAAW,GAEzBP,EAAUxB,MAAQA,EACXwB,CACX,CChDA,MAAMW,EAAmB,IAAI3G,IAAI,CAC7B,UACA,OACA,WACA,UACA,QACA,SACA,WACA,aACA,oBACA,kBACA,SACA,UACA,wBACA,mBACA,sBACA,WACA,cACA,SACA,YACA,2BACA,kBACA,sBACA,SACA,SACA,eACA,aACA,kBACA,kBACA,kBACA,eACA,aAUJ,SAAS4G,EAAkBnL,GACvB,OAAQA,EAAIyE,WAAW,UAClBzE,EAAIyE,WAAW,SAAmB,cAARzE,GAC3BA,EAAIyE,WAAW,WACfzE,EAAIyE,WAAW,UACfzE,EAAIyE,WAAW,UACfzE,EAAIyE,WAAW,aACfyG,EAAiBnH,IAAI/D,EAC7B,CCrDA,IAAIoL,EAAiBpL,IAASmL,EAAkBnL,GAoBhD,KAnBiCqL,EAyBLC,QAAQ,0BAA0B9B,WArB1D4B,EAAiBpL,GAAQA,EAAIyE,WAAW,OAAS0G,EAAkBnL,GAAOqL,EAAYrL,GAsB1F,CACA,MAAO/E,IACH,CA5BJ,IAAiCoQ,E,eCDjC,SAASE,GAAWC,EAAQC,EAAQtF,GAChC,MAAyB,kBAAXqF,EACRA,EACA7O,EAAAA,GAAG9B,UAAU4Q,EAAStF,EAAOqF,EACvC,CCJA,MAAME,GAAW,CACbD,OAAQ,oBACRE,MAAO,oBAELC,GAAY,CACdH,OAAQ,mBACRE,MAAO,mB,mGCDX,SAASE,GAAclD,EAAKnP,EAEfqP,EAASiD,EAAUhD,GAAmB,IAFrB,MAAEiD,EAAK,MAAEC,EAAK,UAAEC,EAAS,QAAE9D,EAAO,QAAEC,EAAO,WAAE8D,EAAU,YAAEC,EAAc,EAAC,WAAEC,EAAa,GAE1G5S,EAMP,GALAkP,EAAgBC,GADX0D,EAAAA,GAAAA,GAAA7S,EAAA8S,IAC0BzD,EAASC,GAKpCgD,EAIA,YAHInD,EAAMI,MAAMwD,UACZ5D,EAAM6D,MAAMD,QAAU5D,EAAMI,MAAMwD,UAI1C5D,EAAM6D,MAAQ7D,EAAMI,MACpBJ,EAAMI,MAAQ,CAAC,EACf,MAAM,MAAEyD,EAAK,MAAEzD,EAAK,WAAE0D,GAAe9D,EAKjC6D,EAAM3R,YACF4R,IACA1D,EAAMlO,UAAY2R,EAAM3R,kBACrB2R,EAAM3R,WAGb4R,SACa5N,IAAZsJ,QAAqCtJ,IAAZuJ,GAAyBW,EAAMlO,aACzDkO,EAAME,gBFzBd,SAAgCwD,EAAYtE,EAASC,GACjD,MAAMsE,EAAYnB,GAAWpD,EAASsE,EAAW9H,EAAG8H,EAAW1G,OACzD4G,EAAYpB,GAAWnD,EAASqE,EAAW7H,EAAG6H,EAAWxG,QAC/D,MAAO,GAAPxJ,OAAUiQ,EAAS,KAAAjQ,OAAIkQ,EAC3B,CEqBgCC,CAAuBH,OAAwB5N,IAAZsJ,EAAwBA,EAAU,QAAiBtJ,IAAZuJ,EAAwBA,EAAU,UAG1HvJ,IAAVkN,IACAS,EAAM7H,EAAIoH,QACAlN,IAAVmN,IACAQ,EAAM5H,EAAIoH,QACInN,IAAdoN,IACAO,EAAMlF,MAAQ2E,QAECpN,IAAfqN,GD7BR,SAAsBM,EAAOhV,GAAqD,IAA7CqV,EAAO9U,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,GAAAA,UAAA,GAAG,EAAG0T,EAAM1T,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,GAAAA,UAAA,GAAG,EAAG+U,IAAW/U,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,KAAAA,UAAA,GAErEyU,EAAMN,WAAa,EAGnB,MAAMa,EAAOD,EAAcpB,GAAWE,GAEtCY,EAAMO,EAAKtB,QAAU9O,EAAAA,GAAG9B,WAAW4Q,GAEnC,MAAMS,EAAavP,EAAAA,GAAG9B,UAAUrD,GAC1B2U,EAAcxP,EAAAA,GAAG9B,UAAUgS,GACjCL,EAAMO,EAAKpB,OAAS,GAAHlP,OAAMyP,EAAU,KAAAzP,OAAI0P,EACzC,CCkBQa,CAAaR,EAAON,EAAYC,EAAaC,GAAY,EAEjE,CC/CA,MAAMa,GAAuBA,KAAAlQ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAD,EPFC,CAC1BgM,MAAO,CAAC,EACRlO,UAAW,CAAC,EACZoO,gBAAiB,CAAC,EAClBD,KAAM,CAAC,IODmB,IAC1BwD,MAAO,CAAC,ICJNV,GAAYoB,GAAuB,kBAARA,GAA0C,QAAtBA,EAAI7P,cCMzD,SAAS8P,GAAY/O,EAAOiD,EAAa+L,EAAWzM,GAChD,MAAM0M,GAAcpO,EAAAA,EAAAA,SAAQ,KACxB,MAAM0J,EAAQsE,KAEd,OADApB,GAAclD,EAAOtH,EAAa,CAAEqI,4BAA4B,GAASoC,GAASnL,GAAYvC,EAAM0K,oBACpG/L,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACO4L,EAAM6D,OAAK,IACdzD,OAAKhM,EAAAA,EAAAA,GAAA,GAAO4L,EAAMI,UAEvB,CAAC1H,IACJ,GAAIjD,EAAM2K,MAAO,CACb,MAAMuE,EAAY,CAAC,EACnBtD,EAAkBsD,EAAWlP,EAAM2K,MAAO3K,GAC1CiP,EAAYtE,OAAKhM,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQuQ,GAAcD,EAAYtE,MACvD,CACA,OAAOsE,CACX,CCdA,SAASE,KAA4C,IAA5BC,EAAkBzV,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,IAAAA,UAAA,GAwBvC,MAvBkB0I,CAACE,EAAWvC,EAAOZ,EAAGhE,EAAoBhB,KAAa,IAA/B,aAAEoQ,GAAcpP,EACtD,MAGM6T,GAHiBnJ,EAAevD,GAChCwM,GACA7C,GAC6BlM,EAAOwK,EAAcpQ,EAAUmI,GAC5D8M,EPoBd,SAAqBrP,EAAOsP,EAAOF,GAC/B,MAAMC,EAAgB,CAAC,EACvB,IAAK,MAAMzN,KAAO5B,EAQF,WAAR4B,GAA4C,kBAAjB5B,EAAMvE,SAEjCuR,EAAcpL,KACU,IAAvBwN,GAA+BrC,EAAkBnL,KAChD0N,IAAUvC,EAAkBnL,IAE7B5B,EAAiB,WAAK4B,EAAIyE,WAAW,aACtCgJ,EAAczN,GAAO5B,EAAM4B,IAGnC,OAAOyN,CACX,COzC8BE,CAAYvP,EAA4B,kBAAduC,EAAwB6M,GAClEI,GAAY7Q,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACX0Q,GACAJ,GAAW,IACd7P,SAOE,SAAEqQ,GAAazP,EACf0P,GAAmB7O,EAAAA,EAAAA,SAAQ,KAAOzD,EAAAA,EAAAA,GAAcqS,GAAYA,EAAShK,MAAQgK,EAAW,CAACA,IAC/F,OAAOE,EAAAA,EAAAA,eAAcpN,GAAS5D,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACvB6Q,GAAY,IACfC,SAAUC,KAItB,CChCA,SAASE,GAAWC,EAAOzU,EAAmB0U,EAAWC,GAAY,IAAxC,MAAEpF,EAAK,KAAEC,GAAMxP,EACxCiE,OAAO0M,OAAO8D,EAAQlF,MAAOA,EAAOoF,GAAcA,EAAWC,oBAAoBF,IAEjF,IAAK,MAAMlO,KAAOgJ,EACdiF,EAAQlF,MAAMsF,YAAYrO,EAAKgJ,EAAKhJ,GAE5C,CCHA,MAAMsO,GAAsB,IAAI/J,IAAI,CAChC,gBACA,kBACA,eACA,mBACA,aACA,WACA,oBACA,eACA,cACA,aACA,UACA,UACA,eACA,mBACA,mBACA,eACA,cACA,UACA,oBACA,aACA,cACA,aACA,iBCtBJ,SAASgK,GAAUN,EAASO,EAAaC,EAAYN,GACjDH,GAAWC,EAASO,OAAa3P,EAAWsP,GAC5C,IAAK,MAAMnO,KAAOwO,EAAYhC,MAC1ByB,EAAQS,aAAcJ,GAAoBvK,IAAI/D,GAA0BA,EAAnB7C,EAAY6C,GAAYwO,EAAYhC,MAAMxM,GAEvG,CCNA,SAAS2O,GAA4BvQ,EAAOwQ,GACxC,MAAM,MAAE7F,GAAU3K,EACZyQ,EAAY,CAAC,EACnB,IAAK,MAAM7O,KAAO+I,IACVvN,EAAAA,EAAAA,GAAcuN,EAAM/I,KACnB4O,EAAU7F,QAASvN,EAAAA,EAAAA,GAAcoT,EAAU7F,MAAM/I,KAClDwE,EAAoBxE,EAAK5B,MACzByQ,EAAU7O,GAAO+I,EAAM/I,IAG/B,OAAO6O,CACX,CCVA,SAASF,GAA4BvQ,EAAOwQ,GACxC,MAAMC,EAAYC,GAA8B1Q,EAAOwQ,GACvD,IAAK,MAAM5O,KAAO5B,EACd,IAAI5C,EAAAA,EAAAA,GAAc4C,EAAM4B,MAASxE,EAAAA,EAAAA,GAAcoT,EAAU5O,IAAO,CAI5D6O,GAHuD,IAArCxK,EAAmBF,QAAQnE,GACvC,OAASA,EAAI+O,OAAO,GAAGC,cAAgBhP,EAAIiP,UAAU,GACrDjP,GACiB5B,EAAM4B,EACjC,CAEJ,OAAO6O,CACX,CCfA,SAASK,GAAwB9Q,EAAO+Q,EAAY1L,GAAkD,IAA1C2L,EAAarX,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGsX,EAAetX,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,GAAAA,UAAA,GAAG,CAAC,EAsB/F,MAlB0B,oBAAfoX,IACPA,EAAaA,OAAsBtQ,IAAX4E,EAAuBA,EAASrF,EAAMqF,OAAQ2L,EAAeC,IAM/D,kBAAfF,IACPA,EAAa/Q,EAAMK,UAAYL,EAAMK,SAAS0Q,IAOxB,oBAAfA,IACPA,EAAaA,OAAsBtQ,IAAX4E,EAAuBA,EAASrF,EAAMqF,OAAQ2L,EAAeC,IAElFF,CACX,C,eCvBA,MAAMG,GAAqBlZ,GAChB6B,MAAM6F,QAAQ1H,GCInBmZ,GAAgCnZ,GAE3BkZ,GAAkBlZ,GAAKA,EAAEA,EAAEoB,OAAS,IAAM,EAAIpB,ECCzD,SAASoZ,GAAmBvV,GACxB,MAAMwV,GAAiBjU,EAAAA,EAAAA,GAAcvB,GAASA,EAAM4J,MAAQ5J,EAC5D,ODRmB7D,ECQEqZ,EDPdhU,QAAQrF,GAAkB,kBAANA,GAAkBA,EAAEsZ,KAAOtZ,EAAEuZ,SCQlDF,EAAeE,UACfF,EDVarZ,KCWvB,C,wCCMA,MAAMwZ,GAAsBC,GAAW,CAACzR,EAAO5F,KAC3C,MAAMoG,GAAUI,EAAAA,EAAAA,YAAWhC,GACrByE,GAAkBzC,EAAAA,EAAAA,YAAW0C,EAAAA,GAC7BoO,EAAOA,IAbjB,SAAkBtW,EAA+D4E,EAAOQ,EAAS6C,GAAiB,IAA/F,4BAAEkN,EAA2B,kBAAEoB,EAAiB,QAAEC,GAAUxW,EAC3E,MAAMmP,EAAQ,CACVC,aAAcqH,GAAiB7R,EAAOQ,EAAS6C,EAAiBkN,GAChEH,YAAauB,KAKjB,OAHIC,IACArH,EAAM1F,MAASD,GAAagN,EAAQ5R,EAAO4E,EAAU2F,IAElDA,CACX,CAIuBuH,CAAUL,EAAQzR,EAAOQ,EAAS6C,GACrD,OAAOjJ,EAAWsX,KAASK,EAAAA,GAAAA,GAAYL,IAE3C,SAASG,GAAiB7R,EAAOQ,EAAS6C,EAAiB2O,GACvD,MAAMvW,EAAS,CAAC,EACVwW,EAAeD,EAAmBhS,EAAO,CAAC,GAChD,IAAK,MAAM4B,KAAOqQ,EACdxW,EAAOmG,GAAOwP,GAAmBa,EAAarQ,IAElD,IAAI,QAAErB,EAAO,QAAEN,GAAYD,EAC3B,MAAMkS,EAA0BnS,EAAsBC,GAChDmS,EAAkB/R,EAAcJ,GAClCQ,GACA2R,IACCD,IACiB,IAAlBlS,EAAMU,eACUD,IAAZF,IACAA,EAAUC,EAAQD,cACNE,IAAZR,IACAA,EAAUO,EAAQP,UAE1B,IAAImS,IAA4B/O,IACE,IAA5BA,EAAgB9C,QAEtB6R,EAA4BA,IAAyC,IAAZ7R,EACzD,MAAM8R,EAAeD,EAA4BnS,EAAUM,EAC3D,GAAI8R,GACwB,mBAAjBA,IACN1S,EAAoB0S,GAAe,EACvBxY,MAAM6F,QAAQ2S,GAAgBA,EAAe,CAACA,IACtDC,QAASvB,IACV,MAAMwB,EAAWzB,GAAwB9Q,EAAO+Q,GAChD,IAAKwB,EACD,OACJ,MAAM,cAAEC,EAAa,WAAEC,GAA0BF,EAAX1G,GAAMoC,EAAAA,GAAAA,GAAKsE,EAAQrE,IACzD,IAAK,MAAMtM,KAAOiK,EAAQ,CACtB,IAAI6G,EAAc7G,EAAOjK,GACzB,GAAI/H,MAAM6F,QAAQgT,GAAc,CAQ5BA,EAAcA,EAHAN,EACRM,EAAYtZ,OAAS,EACrB,EAEV,CACoB,OAAhBsZ,IACAjX,EAAOmG,GAAO8Q,EAEtB,CACA,IAAK,MAAM9Q,KAAO4Q,EACd/W,EAAOmG,GAAO4Q,EAAc5Q,IAExC,CACA,OAAOnG,CACX,C,eCtEA,MAAMkX,GAAkB,CACpBrQ,eAAgBkP,GAAmB,CAC/BjB,4BAA6BA,GAC7BoB,kBAAmB9C,GACnB+C,QAASA,CAAC5R,EAAO4E,EAAQxJ,KAAoC,IAAlC,YAAEgV,EAAW,aAAE5F,GAAcpP,EACpDwX,GAAAA,GAAMC,KAAK,KACP,IACIzC,EAAY/B,WAEJ,oBADGzJ,EAASkO,QAEVlO,EAASkO,UACTlO,EAASmO,uBACvB,CACA,MAAOC,GAEH5C,EAAY/B,WAAa,CACrB9H,EAAG,EACHC,EAAG,EACHmB,MAAO,EACPE,OAAQ,EAEhB,IAEJ+K,GAAAA,GAAM1O,OAAO,KACTuJ,GAAc2C,EAAa5F,EAAc,CAAEc,4BAA4B,GAASoC,GAAS9I,EAASqO,SAAUjT,EAAM0K,mBAClHyF,GAAUvL,EAAUwL,SC7B9B8C,GAAmB,CACrB5Q,eAAgBkP,GAAmB,CAC/BjB,4BAA2B,GAC3BoB,kBAAmBhG,KCP3B,SAASwH,GAAYtH,EAAQuH,EAAWxa,GAAsC,IAA7B6R,EAAO9Q,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,GAAAA,UAAA,GAAG,CAAE0Z,SAAS,GAElE,OADAxH,EAAOyH,iBAAiBF,EAAWxa,EAAS6R,GACrC,IAAMoB,EAAO0H,oBAAoBH,EAAWxa,EACvD,CCHA,MAAM4a,GAAoBC,GACI,UAAtBA,EAAMC,YACyB,kBAAjBD,EAAME,QAAuBF,EAAME,QAAU,GAWhC,IAApBF,EAAMG,UCXrB,SAASC,GAAiBJ,GAA2B,IAApBK,EAASna,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,GAAAA,UAAA,GAAG,OACzC,MAAO,CACHoa,MAAO,CACHxN,EAAGkN,EAAMK,EAAY,KACrBtN,EAAGiN,EAAMK,EAAY,MAGjC,CCNA,SAASE,GAAgBnI,EAAQuH,EAAWxa,EAAS6R,GACjD,OAAO0I,GAAYtH,EAAQuH,EDMPxa,IACZ6a,GAAUD,GAAiBC,IAAU7a,EAAQ6a,EAAOI,GAAiBJ,ICPvCQ,CAAerb,GAAU6R,EACnE,C,cCLA,SAASyJ,GAAW/T,GAChB,IAAIgU,EAAO,KACX,MAAO,KACH,MAAMC,EAAWA,KACbD,EAAO,MAEX,OAAa,OAATA,IACAA,EAAOhU,EACAiU,GAInB,CACA,MAAMC,GAAuBH,GAAW,kBAClCI,GAAqBJ,GAAW,gBACtC,SAASK,GAAcnT,GACnB,IAAI+S,GAAO,EACX,GAAa,MAAT/S,EACA+S,EAAOG,UAEN,GAAa,MAATlT,EACL+S,EAAOE,SAEN,CACD,MAAMG,EAAiBH,KACjBI,EAAeH,KACjBE,GAAkBC,EAClBN,EAAOA,KACHK,IACAC,MAKAD,GACAA,IACAC,GACAA,IAEZ,CACA,OAAON,CACX,CACA,SAASO,KAGL,MAAMC,EAAkBJ,IAAc,GACtC,OAAKI,IAELA,KACO,EACX,CClDA,MAAMC,GACFpc,WAAAA,CAAYqc,GACRpc,KAAKqc,WAAY,EACjBrc,KAAKoc,KAAOA,CAChB,CACA/Q,MAAAA,GAAW,ECCf,SAASiR,GAAcF,EAAMG,GACzB,MAAM5B,EAAY,WAAa4B,EAAW,QAAU,SAC9CC,EAAe,WAAaD,EAAW,QAAU,OAYvD,OAAOhB,GAAgBa,EAAKlR,QAASyP,EAXjB8B,CAACzB,EAAOtY,KACxB,GAA0B,UAAtBsY,EAAMC,aAA2BgB,KACjC,OACJ,MAAM1U,EAAQ6U,EAAKM,WACfN,EAAK1Q,gBAAkBnE,EAAMoV,YAC7BP,EAAK1Q,eAAekR,UAAU,aAAcL,GAE5ChV,EAAMiV,IACNrC,GAAAA,GAAM9O,OAAO,IAAM9D,EAAMiV,GAAcxB,EAAOtY,KAGO,CACzDkY,SAAUwB,EAAKM,WAAWF,IAElC,CChBA,MAAMK,GAAgBA,CAACnS,EAAQoS,MACtBA,IAGIpS,IAAWoS,GAITD,GAAcnS,EAAQoS,EAAMC,gB,eCL3C,SAASC,GAA0BtV,EAAMvH,GACrC,IAAKA,EACD,OACJ,MAAM8c,EAAwB,IAAIC,aAAa,UAAYxV,GAC3DvH,EAAQ8c,EAAuB7B,GAAiB6B,GACpD,C,kBCVME,GAAoB,IAAIC,QAMxBC,GAAY,IAAID,QAChBE,GAAwBC,IAC1B,MAAMC,EAAWL,GAAkBnQ,IAAIuQ,EAAMnK,QAC7CoK,GAAYA,EAASD,IAEnBE,GAA4BC,IAC9BA,EAAQ7D,QAAQyD,KAqBpB,SAASK,GAAoBvG,EAASpF,EAASwL,GAC3C,MAAMI,EApBV,SAAiCjb,GAAuB,IAAtB,KAAEkb,GAAkBlb,EAATqP,GAAOwD,EAAAA,GAAAA,GAAA7S,EAAA8S,IAChD,MAAMqI,EAAaD,GAAQE,SAItBV,GAAUnQ,IAAI4Q,IACfT,GAAUlQ,IAAI2Q,EAAY,CAAC,GAE/B,MAAME,EAAgBX,GAAUrQ,IAAI8Q,GAC9B3U,EAAM8U,KAAKC,UAAUlM,GAQ3B,OAHKgM,EAAc7U,KACf6U,EAAc7U,GAAO,IAAIgV,qBAAqBV,IAAwBvX,EAAAA,EAAAA,GAAA,CAAI2X,QAAS7L,KAEhFgM,EAAc7U,EACzB,CAEsCiV,CAAyBpM,GAG3D,OAFAmL,GAAkBhQ,IAAIiK,EAASoG,GAC/BI,EAA0BS,QAAQjH,GAC3B,KACH+F,GAAkBmB,OAAOlH,GACzBwG,EAA0BW,UAAUnH,GAE5C,CC3CA,MAAMoH,GAAiB,CACnB/W,KAAM,EACNgX,IAAK,GCAT,MAAMC,GAAoB,CACtB1V,OAAQ,CACJmT,QDAR,cAA4BA,GACxBpc,WAAAA,GACI4e,SAASzd,WACTlB,KAAK4e,gBAAiB,EACtB5e,KAAK6e,UAAW,CACpB,CACAC,aAAAA,GACI9e,KAAKqM,UACL,MAAM,SAAE0S,EAAW,CAAC,GAAM/e,KAAKoc,KAAKM,YAC9B,KAAEmB,EAAM7N,OAAQgP,EAAU,OAAEC,EAAS,OAAM,KAAEC,GAASH,EACtD/M,EAAU,CACZ6L,KAAMA,EAAOA,EAAK3S,aAAUlD,EAC5BgX,aACAG,UAA6B,kBAAXF,EAAsBA,EAAST,GAAeS,IA+BpE,OAAOtB,GAAoB3d,KAAKoc,KAAKlR,QAAS8G,EA7BhBuL,IAC1B,MAAM,eAAE6B,GAAmB7B,EAI3B,GAAIvd,KAAK6e,WAAaO,EAClB,OAMJ,GALApf,KAAK6e,SAAWO,EAKZF,IAASE,GAAkBpf,KAAK4e,eAChC,OAEKQ,IACLpf,KAAK4e,gBAAiB,GAEtB5e,KAAKoc,KAAK1Q,gBACV1L,KAAKoc,KAAK1Q,eAAekR,UAAU,cAAewC,GAMtD,MAAM,gBAAEC,EAAe,gBAAEC,GAAoBtf,KAAKoc,KAAKM,WACjDc,EAAW4B,EAAiBC,EAAkBC,EACpD9B,GAAYA,EAASD,IAG7B,CACAnR,KAAAA,GACIpM,KAAK8e,eACT,CACAzT,MAAAA,GACI,GAAoC,qBAAzB8S,qBACP,OACJ,MAAM,MAAE5W,EAAK,UAAEwQ,GAAc/X,KAAKoc,KAC5BmD,EAAoB,CAAC,SAAU,SAAU,QAAQ9X,KAO/D,SAAiC9E,GAA0D,IAAzD,SAAEoc,EAAW,CAAC,GAAGpc,GAAIoc,SAAUS,EAAe,CAAC,GAAGte,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,GAAAA,UAAA,GAAG,CAAC,EACpF,OAAQwG,GAASqX,EAASrX,KAAU8X,EAAa9X,EACrD,CAToE+X,CAAyBlY,EAAOwQ,IACxFwH,GACAvf,KAAK8e,eAEb,CACAzS,OAAAA,GAAY,ICxDZvD,IAAK,CACDqT,QHMR,cAA2BA,GACvBpc,WAAAA,GACI4e,SAASzd,WACTlB,KAAK0f,qBAAuB7d,GAAAA,EAC5B7B,KAAK2f,mBAAqB9d,GAAAA,EAC1B7B,KAAK4f,0BAA4B/d,GAAAA,EACjC7B,KAAK6f,kBAAoB,CAACC,EAAYC,KAClC,GAAI/f,KAAKggB,WACL,OACJhgB,KAAK2f,qBACL,MAAMpY,EAAQvH,KAAKoc,KAAKM,WAgBlBuD,EAA0B1E,GAAgBhQ,OAAQ,YAfhC2U,CAACC,EAAUC,KAC/B,IAAKpgB,KAAKqgB,gBACN,OACJ,MAAM,MAAEnM,EAAK,YAAEoM,EAAW,gBAAEC,GAAoBvgB,KAAKoc,KAAKM,WAC1DvC,GAAAA,GAAM9O,OAAO,KAKRkV,GACI1D,GAAc7c,KAAKoc,KAAKlR,QAASiV,EAAS/M,QAEzCc,GAASA,EAAMiM,EAAUC,GADzBE,GAAeA,EAAYH,EAAUC,MAImC,CAAExF,UAAWrT,EAAM2M,OAAS3M,EAAmB,eAC/HiZ,EAA8BjF,GAAgBhQ,OAAQ,gBAAiB,CAACkV,EAAaC,IAAe1gB,KAAK2gB,YAAYF,EAAaC,GAAa,CAAE9F,UAAWrT,EAAM+Y,aAAe/Y,EAAuB,mBAC9MvH,KAAK2f,oBAAqB3e,EAAAA,GAAAA,GAAKif,EAAyBO,GACxDxgB,KAAK4gB,WAAWd,EAAYC,IAEhC/f,KAAK6gB,qBAAuB,KACxB,MAmBMC,EAAwBpG,GAAY1a,KAAKoc,KAAKlR,QAAS,UAnBtC6V,IACnB,GAAyB,UAArBA,EAAa5X,KAAmBnJ,KAAKggB,WACrC,OAWJhgB,KAAK2f,qBACL3f,KAAK2f,mBAAqBjF,GAAY1a,KAAKoc,KAAKlR,QAAS,QAXpC8V,IACM,UAAnBA,EAAW7X,KAAoBnJ,KAAKqgB,iBAExCrD,GAA0B,KAAM,CAAChC,EAAOtY,KACpC,MAAM,MAAEwR,GAAUlU,KAAKoc,KAAKM,WACxBxI,GACAiG,GAAAA,GAAM9O,OAAO,IAAM6I,EAAM8G,EAAOtY,QAM5Csa,GAA0B,OAAQ,CAAChC,EAAOtY,KACtC1C,KAAK4gB,WAAW5F,EAAOtY,OASzBue,EAAqBvG,GAAY1a,KAAKoc,KAAKlR,QAAS,OALvCgW,KACVlhB,KAAKggB,YAEVhD,GAA0B,SAAU,CAACyD,EAAaC,IAAe1gB,KAAK2gB,YAAYF,EAAaC,MAGnG1gB,KAAK4f,2BAA4B5e,EAAAA,GAAAA,GAAK8f,EAAuBG,GAErE,CACAL,UAAAA,CAAW5F,EAAOtY,GACd1C,KAAKggB,YAAa,EAClB,MAAM,WAAE7L,EAAU,SAAEC,GAAapU,KAAKoc,KAAKM,WAIvCtI,GAAYpU,KAAKoc,KAAK1Q,gBACtB1L,KAAKoc,KAAK1Q,eAAekR,UAAU,YAAY,GAE/CzI,GACAgG,GAAAA,GAAM9O,OAAO,IAAM8I,EAAW6G,EAAOtY,GAE7C,CACA2d,aAAAA,GACIrgB,KAAK2f,qBACL3f,KAAKggB,YAAa,EAKlB,OAJchgB,KAAKoc,KAAKM,WACdtI,UAAYpU,KAAKoc,KAAK1Q,gBAC5B1L,KAAKoc,KAAK1Q,eAAekR,UAAU,YAAY,IAE3CX,IACZ,CACA0E,WAAAA,CAAY3F,EAAOtY,GACf,IAAK1C,KAAKqgB,gBACN,OACJ,MAAM,YAAEC,GAAgBtgB,KAAKoc,KAAKM,WAC9B4D,GACAnG,GAAAA,GAAM9O,OAAO,IAAMiV,EAAYtF,EAAOtY,GAE9C,CACA0J,KAAAA,GACI,MAAM7E,EAAQvH,KAAKoc,KAAKM,WAClByE,EAAwB5F,GAAgBhU,EAAMgZ,gBAAkBhV,OAASvL,KAAKoc,KAAKlR,QAAS,cAAelL,KAAK6f,kBAAmB,CAAEjF,UAAWrT,EAAM4M,YAAc5M,EAAsB,kBAC1L6Z,EAAsB1G,GAAY1a,KAAKoc,KAAKlR,QAAS,QAASlL,KAAK6gB,sBACzE7gB,KAAK0f,sBAAuB1e,EAAAA,GAAAA,GAAKmgB,EAAuBC,EAC5D,CACA/U,OAAAA,GACIrM,KAAK0f,uBACL1f,KAAK2f,qBACL3f,KAAK4f,2BACT,IGzGAhX,MAAO,CACHuT,QCTR,cAA2BA,GACvBpc,WAAAA,GACI4e,SAASzd,WACTlB,KAAKuc,UAAW,CACpB,CACA8E,OAAAA,GACI,IAAIC,GAAiB,EAOrB,IACIA,EAAiBthB,KAAKoc,KAAKlR,QAAQtI,QAAQ,iBAC/C,CACA,MAAO2X,GACH+G,GAAiB,CACrB,CACKA,GAAmBthB,KAAKoc,KAAK1Q,iBAElC1L,KAAKoc,KAAK1Q,eAAekR,UAAU,cAAc,GACjD5c,KAAKuc,UAAW,EACpB,CACAgF,MAAAA,GACSvhB,KAAKuc,UAAavc,KAAKoc,KAAK1Q,iBAEjC1L,KAAKoc,KAAK1Q,eAAekR,UAAU,cAAc,GACjD5c,KAAKuc,UAAW,EACpB,CACAnQ,KAAAA,GACIpM,KAAKqM,SAAUrL,EAAAA,GAAAA,GAAK0Z,GAAY1a,KAAKoc,KAAKlR,QAAS,QAAS,IAAMlL,KAAKqhB,WAAY3G,GAAY1a,KAAKoc,KAAKlR,QAAS,OAAQ,IAAMlL,KAAKuhB,UACzI,CACAlV,OAAAA,GAAY,IDtBZxD,MAAO,CACHsT,QLQR,cAA2BA,GACvB/P,KAAAA,GACIpM,KAAKqM,SAAUrL,EAAAA,GAAAA,GAAKsb,GAActc,KAAKoc,MAAM,GAAOE,GAActc,KAAKoc,MAAM,GACjF,CACA/P,OAAAA,GAAY,KO5BhB,SAASmV,GAAeC,EAAMC,GAC1B,IAAKtgB,MAAM6F,QAAQya,GACf,OAAO,EACX,MAAMC,EAAaD,EAAK/gB,OACxB,GAAIghB,IAAeF,EAAK9gB,OACpB,OAAO,EACX,IAAK,IAAIC,EAAI,EAAGA,EAAI+gB,EAAY/gB,IAC5B,GAAI8gB,EAAK9gB,KAAO6gB,EAAK7gB,GACjB,OAAO,EAEf,OAAO,CACX,CCOA,SAASghB,GAAenX,EAAe6N,EAAY1L,GAC/C,MAAMrF,EAAQkD,EAAciS,WAC5B,OAAOrE,GAAwB9Q,EAAO+Q,OAAuBtQ,IAAX4E,EAAuBA,EAASrF,EAAMqF,OAf5F,SAAoBnC,GAChB,MAAMS,EAAU,CAAC,EAEjB,OADAT,EAAczH,OAAO6W,QAAQ,CAACzW,EAAO+F,IAAS+B,EAAQ/B,GAAO/F,EAAM4J,OAC5D9B,CACX,CAWoG2W,CAAWpX,GAP/G,SAAqBA,GACjB,MAAMqX,EAAW,CAAC,EAElB,OADArX,EAAczH,OAAO6W,QAAQ,CAACzW,EAAO+F,IAAS2Y,EAAS3Y,GAAO/F,EAAMyB,eAC7Did,CACX,CAG+Hjd,CAAY4F,GAC3I,C,0BCrBA,MAAMsX,IACO,ECDPC,GAAsBC,GAAW7gB,MAAM6F,QAAQgb,IAAgC,kBAAdA,EAAO,GCE9E,SAASC,GAAuBD,GAC5B,OAAOrd,SAASqd,GACO,kBAAXA,GAAuBE,GAAqBF,IACpDD,GAAmBC,IAClB7gB,MAAM6F,QAAQgb,IAAWA,EAAOG,MAAMF,IAC/C,CACA,MAAMG,GAAsB1f,IAAA,IAAEpC,EAAGC,EAAGC,EAAG6hB,GAAE3f,EAAA,sBAAAiD,OAAqBrF,EAAC,MAAAqF,OAAKpF,EAAC,MAAAoF,OAAKnF,EAAC,MAAAmF,OAAK0c,EAAC,MAC3EH,GAAuB,CACzBI,OAAQ,SACRC,KAAM,OACNC,OAAQ,UACRC,QAAS,WACTC,UAAW,cACXC,OAAQP,GAAoB,CAAC,EAAG,IAAM,IAAM,IAC5CQ,QAASR,GAAoB,CAAC,IAAM,EAAG,EAAG,MAC1CS,OAAQT,GAAoB,CAAC,IAAM,IAAM,KAAO,MAChDU,QAASV,GAAoB,CAAC,IAAM,KAAM,IAAM,OAEpD,SAASW,GAAwBf,GAC7B,GAAKA,EAEL,OAAOD,GAAmBC,GACpBI,GAAoBJ,GACpB7gB,MAAM6F,QAAQgb,GACVA,EAAO/e,IAAI8f,IACXb,GAAqBF,EACnC,C,kDCnBMgB,GCTN,SAAczF,GACV,IAAI0F,EACJ,MAAO,UACYlb,IAAXkb,IACAA,EAAS1F,KACN0F,EAEf,CDEsBC,CAAK,IAAMvc,OAAOE,eAAeC,KAAKqc,QAAQvc,UAAW,YAIzEwc,GAAoB,IAAI3V,IAAI,CAC9B,UACA,WACA,SACA,YACA,oBAgBJ,SAAS4V,GAA2BlgB,EAAOmgB,EAAS5gB,GAAwC,IAAtC,SAAE6gB,EAAQ,WAAEC,GAAwB9gB,EAATqP,GAAOwD,EAAAA,GAAAA,GAAA7S,EAAA8S,IAOpF,KAN+BwN,MAC3BI,GAAkBnW,IAAIqW,KACrBvR,EAAQ0R,aACc,WAAvB1R,EAAQ2R,YACY,IAApB3R,EAAQ4R,SACS,YAAjB5R,EAAQ5D,MAER,OAAO,EAIX,IACIyV,EACAC,EAFAC,GAAa,EAQbC,GAAgB,EAKpB,MAAMC,EAAwBA,KAC1BH,EAAyB,IAAII,QAASC,IAClCN,EAAyBM,KAIjCF,IACA,IAAI,UAAEG,EAAS,SAAEC,EAAW,IAAG,KAAE7B,EAAI,MAAE8B,GAAUtS,EAIjD,GAvCkCuS,EAAChB,EAAWvR,IAA6B,WAAjBA,EAAQ5D,MACpD,oBAAdmV,IACCrB,GAAuBlQ,EAAQwQ,MAqC5B+B,CAA8BhB,EAAWvR,GAAU,CACnD,MAAMwS,GAAkBC,EAAAA,GAAAA,IAAYve,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAC/B8L,GAAO,IACV0S,OAAQ,EACRC,MAAO,KAEX,IAAI7S,EAAQ,CAAE8S,MAAM,EAAOxhB,MAAOghB,EAAU,IAC5C,MAAMS,EAAwB,GAK9B,IAAIC,EAAI,EACR,MAAQhT,EAAM8S,MAAQE,EArDV,KAsDRhT,EAAQ0S,EAAgBO,OAAOD,GAC/BD,EAAsB5hB,KAAK6O,EAAM1O,OACjC0hB,GA7DQ,GA+DZR,OAAQtc,EACRoc,EAAYS,EACZR,EAAWS,EAjEC,GAkEZtC,EAAO,QACX,CACA,MAAM/Z,EE3FV,SAAsB2O,EAASmM,EAAWa,GAAwF,IAA7E,MAAEO,EAAQ,EAAC,SAAEN,EAAQ,OAAEK,EAAS,EAAC,WAAEf,EAAa,OAAM,KAAEnB,EAAI,MAAE8B,GAAQpjB,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC3H,MAAM8jB,EAAkB,CAAE,CAACzB,GAAYa,GACnCE,IACAU,EAAgBpQ,OAAS0P,GAC7B,MAAMrC,EAASe,GAAwBR,GAMvC,OAFIphB,MAAM6F,QAAQgb,KACd+C,EAAgB/C,OAASA,GACtB7K,EAAQ5P,QAAQwd,EAAiB,CACpCL,QACAN,WACApC,OAAS7gB,MAAM6F,QAAQgb,GAAmB,SAATA,EACjCgD,KAAM,OACNC,WAAYR,EAAS,EACrBS,UAA0B,YAAfxB,EAA2B,YAAc,UAE5D,CFyEsByB,CAAahiB,EAAMiiB,MAAMna,QAASqY,EAAWa,GAASle,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACjE8L,GAAO,IACVqS,WASA7B,KAAMA,EACN8B,WAEEgB,EAAkBA,KACpBtB,GAAgB,EAChBvb,EAAU8c,UAERC,EAAaA,KACfxB,GAAgB,EAChB7J,GAAAA,GAAM9O,OAAOia,GACbzB,IACAI,KAUJxb,EAAUgd,SAAW,KACbzB,IAEJ5gB,EAAM+J,IGhId,SAA0BiX,EAASzhB,GAAmC,IAAjC,OAAE+hB,EAAM,WAAEf,EAAa,QAAQhhB,EAIhE,OAAOyhB,EAHOM,GAAyB,SAAff,GAAyBe,EAAS,IAAM,EAC1D,EACAN,EAAUzjB,OAAS,EAE7B,CH2HkB+kB,CAAiBtB,EAAWpS,IACtCyR,GAAcA,IACd+B,MAoEJ,MA/DiB,CACbG,KAAIA,CAACxB,EAASyB,IACH9B,EAAuB6B,KAAKxB,EAASyB,GAEhDC,eAAeC,IACXrd,EAAUqd,SAAWA,EACrBrd,EAAUgd,SAAW,KACd5jB,GAAAA,GAEX,QAAIkkB,GACA,OAAOC,EAAAA,GAAAA,GAAsBvd,EAAUwd,aAAe,EAC1D,EACA,QAAIF,CAAKG,GACLzd,EAAUwd,aAAcE,EAAAA,GAAAA,GAAsBD,EAClD,EACA,SAAIE,GACA,OAAO3d,EAAU4d,YACrB,EACA,SAAID,CAAME,GACN7d,EAAU4d,aAAeC,CAC7B,EACA,YAAIjC,GACA,OAAO2B,EAAAA,GAAAA,GAAsB3B,EACjC,EACAkC,KAAMA,KACExC,IAEJtb,EAAU8d,QAIVC,EAAAA,GAAAA,IAAYlB,KAEhBmB,MAAOA,IAAMhe,EAAUge,QACvBC,KAAMA,KAEF,GADA3C,GAAa,EACe,SAAxBtb,EAAUke,UACV,OASJ,MAAM,YAAEV,GAAgBxd,EACxB,GAAIwd,EAAa,CACb,MAAMzB,GAAkBC,EAAAA,GAAAA,IAAYve,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAC/B8L,GAAO,IACV4U,UAAU,KAEdxjB,EAAMyjB,gBAAgBrC,EAAgBO,OAAOkB,EAlKzC,IAkKoE7iB,MAAOohB,EAAgBO,OAAOkB,GAAa7iB,MAlK/G,GAmKR,CACAoiB,KAEJsB,SAAUA,KACF9C,GAEJvb,EAAUse,UAEdxB,OAAQC,EAGhB,CIrMA,MAAMwB,GAAoB,CACtB5Y,KAAM,SACN6Y,UAAW,IACXrD,QAAS,GACTsD,UAAW,IAQTC,GAAsB,CACxB/Y,KAAM,YACNiW,SAAU,IAMR7B,GAAO,CACTpU,KAAM,YACNoU,KAAM,CAAC,IAAM,GAAK,IAAM,GACxB6B,SAAU,IAER+C,GAAuBA,CAACC,EAAQ1kB,KAAoB,IAAlB,UAAEyhB,GAAWzhB,EACjD,OAAIyhB,EAAUzjB,OAAS,EACZwmB,GAEF1Z,EAAeP,IAAIma,GACjBA,EAASzZ,WAAW,SAxBG,CAClCQ,KAAM,SACN6Y,UAAW,IACXrD,QAAoB,IAsBaQ,EAAU,GAtBnB,EAAI5kB,KAAK8nB,KAAK,KAAO,GAC7CJ,UAAW,IAsBDF,GAEHxE,I,eCzBX,MAAM+E,GAAeA,CAACpe,EAAK/F,IAEX,WAAR+F,MAKiB,kBAAV/F,IAAsBhC,MAAM6F,QAAQ7D,OAE1B,kBAAVA,IACNc,GAAAA,EAAQC,KAAKf,IAAoB,MAAVA,GACvBA,EAAMwK,WAAW,U,cChB1B,MAAM4Z,GAAc,IAAI9Z,IAAI,CAAC,aAAc,WAAY,WAAY,YACnE,SAAS+Z,GAAmBloB,GACxB,MAAOmI,EAAMtE,GAAS7D,EAAEmoB,MAAM,GAAI,GAAGhiB,MAAM,KAC3C,GAAa,gBAATgC,EACA,OAAOnI,EACX,MAAOiD,GAAUY,EAAMN,MAAMpD,GAAAA,KAAe,GAC5C,IAAK8C,EACD,OAAOjD,EACX,MAAMiG,EAAOpC,EAAML,QAAQP,EAAQ,IACnC,IAAImlB,EAAeH,GAAYta,IAAIxF,GAAQ,EAAI,EAG/C,OAFIlF,IAAWY,IACXukB,GAAgB,KACbjgB,EAAO,IAAMigB,EAAeniB,EAAO,GAC9C,CACA,MAAMoiB,GAAgB,oBAChBC,IAAM3hB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACLhC,GAAAA,GAAO,IACVK,kBAAoBhF,IAChB,MAAMuoB,EAAYvoB,EAAEuD,MAAM8kB,IAC1B,OAAOE,EAAYA,EAAU5kB,IAAIukB,IAAoBlf,KAAK,KAAOhJ,K,eClBzE,MAAMwoB,IAAiB7hB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChBoI,GAAgB,IAEnBhM,MAAK,KACL0lB,gBAAiB1lB,GAAAA,EACjB2lB,aAAc3lB,GAAAA,EACd2iB,KAAM3iB,GAAAA,EACN4lB,OAAQ5lB,GAAAA,EAER6lB,YAAa7lB,GAAAA,EACb8lB,eAAgB9lB,GAAAA,EAChB+lB,iBAAkB/lB,GAAAA,EAClBgmB,kBAAmBhmB,GAAAA,EACnBimB,gBAAiBjmB,GAAAA,EACjBulB,OAAM,GACNW,aAAcX,KAKZY,GAAuBtf,GAAQ4e,GAAkB5e,GCvBvD,SAAS5E,GAAkB4E,EAAK/F,GAC5B,IAAIslB,EAAmBD,GAAoBtf,GAI3C,OAHIuf,IAAqBb,KACrBa,EAAmBxkB,GAAAA,GAEhBwkB,EAAiBnkB,kBAClBmkB,EAAiBnkB,kBAAkBnB,QACnC4E,CACV,CCTA,MAAM2gB,GAAqBppB,GAAM,aAAa4E,KAAK5E,GCDnD,SAASqpB,GAAOxlB,GACZ,MAAqB,kBAAVA,EACU,IAAVA,EAEQ,OAAVA,EACY,SAAVA,GAA8B,MAAVA,GAAiBulB,GAAkBvlB,QAD7D,CAGT,C,oICDA,SAASylB,GAAmB7O,EAAY7Q,GACpC,OAAO6Q,EAAW7Q,IAAQ6Q,EAAoB,SAAKA,CACvD,CCVA,MAAM8O,IACc,ECWdC,GAAqB,SAACxF,EAAWngB,EAAOgQ,GAA4B,IAApB4G,EAAU9Y,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,GAAAA,UAAA,GAAG,CAAC,EAChE,OAAQuiB,IACJ,MAAMuF,EAAkBH,GAAmB7O,EAAYuJ,IAAc,CAAC,EAMhEoB,EAAQqE,EAAgBrE,OAAS3K,EAAW2K,OAAS,EAK3D,IAAI,QAAEsE,EAAU,GAAMjP,EACtBiP,IAAoB9C,EAAAA,GAAAA,GAAsBxB,GAC1C,MAAMP,ECvBd,SAAsBhhB,EAAOmgB,EAAWnQ,EAAQ4G,GAC5C,MAAMkP,EAAqB3B,GAAahE,EAAWnQ,GACnD,IAAIgR,EAEAA,EADAhjB,MAAM6F,QAAQmM,GACF,IAAIA,GAGJ,CAAC,KAAMA,GAEvB,MAAM+V,OAAoCnhB,IAApBgS,EAAWoP,KAAqBpP,EAAWoP,KAAOhmB,EAAM4J,MAC9E,IAAIqc,EACJ,MAAMC,EAAsB,GAC5B,IAAK,IAAI1oB,EAAI,EAAGA,EAAIwjB,EAAUzjB,OAAQC,IAIb,OAAjBwjB,EAAUxjB,KACVwjB,EAAUxjB,GAAW,IAANA,EAAUuoB,EAAgB/E,EAAUxjB,EAAI,IAEvDgoB,GAAOxE,EAAUxjB,KACjB0oB,EAAoBrmB,KAAKrC,GAGD,kBAAjBwjB,EAAUxjB,IACA,SAAjBwjB,EAAUxjB,IACO,MAAjBwjB,EAAUxjB,KACVyoB,EAA0BjF,EAAUxjB,IAG5C,GAAIsoB,GACAI,EAAoB3oB,QACpB0oB,EACA,IAAK,IAAIzoB,EAAI,EAAGA,EAAI0oB,EAAoB3oB,OAAQC,IAE5CwjB,EADckF,EAAoB1oB,IACf2D,GAAkBgf,EAAW8F,GAGxD,OAAOjF,CACX,CDf0BmF,CAAanmB,EAAOmgB,EAAWnQ,EAAQ4V,GAMnDQ,EAAiBpF,EAAU,GAC3BqF,EAAiBrF,EAAUA,EAAUzjB,OAAS,GAC9C+oB,EAAqBnC,GAAahE,EAAWiG,GAC7CN,EAAqB3B,GAAahE,EAAWkG,IACnDE,EAAAA,GAAAA,GAAQD,IAAuBR,EAAoB,6BAAFtjB,OAA+B2d,EAAS,WAAA3d,OAAU4jB,EAAc,UAAA5jB,OAAS6jB,EAAc,OAAA7jB,OAAM4jB,EAAc,+DAAA5jB,OAA8D4jB,EAAc,8BAAA5jB,OAA6B6jB,EAAc,+BACnR,IAAIzX,GAAO9L,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACPke,YACAtC,SAAU1e,EAAMyB,cAChB2d,KAAM,WACHwG,GAAe,IAClBrE,OAAQsE,EACRzF,SAAWjkB,IACP6D,EAAM+J,IAAI5N,GACVypB,EAAgBxF,UAAYwF,EAAgBxF,SAASjkB,IAEzDkkB,WAAYA,KACRA,IACAuF,EAAgBvF,YAAcuF,EAAgBvF,gBAwBtD,GFrER,SAA4B9gB,GAA2I,IAA1I,KAAEinB,EAAMjF,MAAOkF,EAAM,cAAEC,EAAa,gBAAEC,EAAe,iBAAEC,EAAgB,OAAEtF,EAAM,WAAEf,EAAU,YAAED,EAAW,KAAE0F,EAAI,QAAEH,GAAwBtmB,EAAZqX,GAAUxE,EAAAA,GAAAA,GAAA7S,EAAA8S,IAC/J,QAAS7O,OAAOsP,KAAK8D,GAAYrZ,MACrC,CEkDaspB,CAAoBjB,KACrBhX,GAAO9L,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACA8L,GACAoV,GAAqB7D,EAAWvR,KAQvCA,EAAQqS,WACRrS,EAAQqS,UAAW8B,EAAAA,GAAAA,GAAsBnU,EAAQqS,WAEjDrS,EAAQ0R,cACR1R,EAAQ0R,aAAcyC,EAAAA,GAAAA,GAAsBnU,EAAQ0R,eAEnDgG,IACAR,GACDnH,KACyB,IAAzBiH,EAAgB5a,MAChB0a,GAKA,OEhFZ,SAA+BnmB,GAA8C,IAA7C,UAAEyhB,EAAS,MAAEO,EAAK,SAAEnB,EAAQ,WAAEC,GAAa9gB,EACvE,MAAMunB,EAAWA,KACb1G,GAAYA,EAASY,EAAUA,EAAUzjB,OAAS,IAClD8iB,GAAcA,IAQP,CACHsC,KAAM,EACNK,MAAO,EACP/B,SAAU,EACVkC,KAAO1kB,GAAAA,EACP4kB,MAAQ5kB,GAAAA,EACR6kB,KAAO7kB,GAAAA,EACP8jB,KAAOxB,IACHA,IACOD,QAAQC,WAEnBoB,OAAS1jB,GAAAA,EACTilB,SAAWjlB,GAAAA,IAGnB,OAAO8iB,GACDF,EAAAA,GAAAA,GAAa,CACXL,UAAW,CAAC,EAAG,GACfC,SAAU,EACVM,QACAlB,WAAYyG,IAEdA,GACV,CF8CmBC,CAAuBpI,IAA6B7b,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChD8L,GAAO,IAAE2S,MAAO,IACrB3S,GAKV,IAMCgI,EAAWoQ,WACRhnB,EAAMiiB,OACNjiB,EAAMiiB,MAAMna,mBAAmBmf,cAK9BjnB,EAAMiiB,MAAM3I,WAAW8G,SAAU,CAClC,MAAM8G,EAAuBhH,GAA2BlgB,EAAOmgB,EAAWvR,GAC1E,GAAIsY,EACA,OAAOA,CACf,CAIA,OAAO7F,EAAAA,GAAAA,GAAazS,GAE5B,EG/GA,SAASuY,GAAwBnnB,GAC7B,OAAOwB,SAAQD,EAAAA,EAAAA,GAAcvB,IAAUA,EAAMlD,IACjD,CCDA,MAAMsqB,GAAqBjrB,GAAM,iBAAiB4E,KAAK5E,G,eCAvD,MAAMkrB,GAAiBlrB,GAAO6O,GAASA,EAAKjK,KAAK5E,GCK3CmrB,GAAsB,CAACloB,EAAAA,GAAQsD,EAAAA,GAAIR,EAAAA,GAASO,EAAAA,GAASG,EAAAA,GAAID,EAAAA,GCLlD,CACT5B,KAAO5E,GAAY,SAANA,EACb6C,MAAQ7C,GAAMA,IDOZorB,GAA0BprB,GAAMmrB,GAAoBE,KAAKH,GAAclrB,IEJvEsrB,GAAa,IAAIH,GAAqBpoB,GAAAA,EAAO4B,GAAAA,GAI7C4mB,GAAiBvrB,GAAMsrB,GAAWD,KAAKH,GAAclrB,I,kCCC3D,SAASwrB,GAAetgB,EAAetB,EAAK/F,GACpCqH,EAAcugB,SAAS7hB,GACvBsB,EAAcwgB,SAAS9hB,GAAKgE,IAAI/J,GAGhCqH,EAAcygB,SAAS/hB,GAAKgiB,EAAAA,GAAAA,IAAY/nB,GAEhD,CACA,SAASgoB,GAAU3gB,EAAe6N,GAC9B,MAAMwB,EAAW8H,GAAenX,EAAe6N,GAC/C,IAAA3V,EAAyDmX,EAAWrP,EAAc4gB,qBAAqBvR,GAAU,GAAS,CAAC,GAAvH,cAAEC,EAAgB,CAAC,EAAC,WAAEC,EAAa,CAAC,GAAcrX,EAARyQ,GAAMoC,EAAAA,GAAAA,GAAA7S,EAAA8S,IACpDrC,GAAMlN,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQkN,GAAW2G,GACzB,IAAK,MAAM5Q,KAAOiK,EAAQ,CAEtB2X,GAAetgB,EAAetB,EADhBuP,GAA6BtF,EAAOjK,IAEtD,CACJ,CAuEA,SAASmiB,GAAwBniB,EAAK6Q,GAClC,IAAKA,EACD,OAEJ,OADwBA,EAAW7Q,IAAQ6Q,EAAoB,SAAKA,GAC7CoP,IAC3B,C,wCC3FA,SAASmC,GAAoB5oB,EAAoCwG,GAAK,IAAxC,cAAEqiB,EAAa,eAAEC,GAAgB9oB,EAC3D,MAAM+oB,EAAcF,EAAc1kB,eAAeqC,KAAgC,IAAxBsiB,EAAetiB,GAExE,OADAsiB,EAAetiB,IAAO,EACfuiB,CACX,CACA,SAASC,GAAoBvoB,EAAOgQ,GAChC,MAAMlI,EAAU9H,EAAM4J,MACtB,IAAI5L,MAAM6F,QAAQmM,GAOd,OAAOlI,IAAYkI,EANnB,IAAK,IAAIxS,EAAI,EAAGA,EAAIwS,EAAOzS,OAAQC,IAC/B,GAAIwS,EAAOxS,KAAOsK,EACd,OAAO,CAMvB,CACA,SAAS0gB,GAAcnhB,EAAe6N,GAA0D,IAA9C,MAAEqM,EAAQ,EAAC,mBAAEkH,EAAkB,KAAEzd,GAAMlN,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,GAAAA,UAAA,GAAG,CAAC,EACzF4qB,EAAsFrhB,EAAc4gB,qBAAqB/S,IAArH,WAAE0B,EAAavP,EAAc2c,uBAAsB,cAAErN,GAA0B+R,EAAR1Y,GAAMoC,EAAAA,GAAAA,GAAAsW,EAAArW,IACjF,MAAMsW,EAAathB,EAAcwgB,SAAS,cACtCY,IACA7R,EAAa6R,GACjB,MAAMG,EAAa,GACbC,EAAqB7d,GACvB3D,EAAciB,gBACdjB,EAAciB,eAAewgB,WAAW9d,GAC5C,IAAK,MAAMjF,KAAOiK,EAAQ,CACtB,MAAMhQ,EAAQqH,EAAcwgB,SAAS9hB,GAC/B8Q,EAAc7G,EAAOjK,GAC3B,IAAK/F,QACe4E,IAAhBiS,GACCgS,GACGV,GAAqBU,EAAoB9iB,GAC7C,SAEJ,MAAM6f,GAAe9iB,EAAAA,EAAAA,GAAA,CACjBye,QACAsE,QAAS,GACNJ,GAAmB7O,GAAc,CAAC,EAAG7Q,IAM5C,GAAIoC,OAAO4gB,wBAAyB,CAChC,MAAMC,EAAW3hB,EAAciS,WAAWjW,GAC1C,GAAI2lB,EAAU,CACV,MAAMnD,EAAU1d,OAAO4gB,wBAAwBC,EAAUjjB,EAAK/F,EAAO+W,GAAAA,IACrD,OAAZ8O,IACAD,EAAgBC,QAAUA,EAC1BD,EAAgBoB,WAAY,EAEpC,CACJ,CACA,IAAIiC,GAAWrD,EAAgBoB,YAC1BuB,GAAoBvoB,EAAO6W,GAahC,GAZ6B,WAAzB+O,EAAgB5a,OACfhL,EAAMyB,eAAiBmkB,EAAgBlH,YACxCuK,GAAU,GAOVjpB,EAAMqF,YACN4jB,GAAU,GAEVA,EACA,SACJjpB,EAAM+D,MAAM4hB,GAAmB5f,EAAK/F,EAAO6W,EAAaxP,EAAc6hB,oBAAsB7e,EAAeP,IAAI/D,GACzG,CAAEiF,MAAM,GACR4a,IACN,MAAMvgB,EAAYrF,EAAMqF,UACpB8hB,GAAwBwB,KACxBA,EAAW7rB,IAAIiJ,GACfV,EAAUkd,KAAK,IAAMoG,EAAWQ,OAAOpjB,KAE3C6iB,EAAW/oB,KAAKwF,EACpB,CAMA,OALIsR,GACAmK,QAAQzF,IAAIuN,GAAYrG,KAAK,KACzB5L,GAAiBqR,GAAU3gB,EAAesP,KAG3CiS,CACX,CCjGA,SAASQ,GAAe/hB,EAAegiB,GAAuB,IAAdza,EAAO9Q,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,GAAAA,UAAA,GAAG,CAAC,EACvD,MAAM4Y,EAAW8H,GAAenX,EAAegiB,EAASza,EAAQpF,QAChE,IAAI,WAAEoN,EAAavP,EAAc2c,wBAA0B,CAAC,GAAMtN,GAAY,CAAC,EAC3E9H,EAAQ6Z,qBACR7R,EAAahI,EAAQ6Z,oBAMzB,MAAMa,EAAe5S,EACf,IAAMoK,QAAQzF,IAAImN,GAAcnhB,EAAeqP,EAAU9H,IACzD,IAAMkS,QAAQC,UAKdwI,EAAqBliB,EAAcmiB,iBAAmBniB,EAAcmiB,gBAAgBtd,KACpF,WAAsB,IAArBud,EAAY3rB,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,GAAAA,UAAA,GAAG,EACd,MAAM,cAAE4oB,EAAgB,EAAC,gBAAEC,EAAe,iBAAEC,GAAsBhQ,EAClE,OAkBZ,SAAyBvP,EAAegiB,GAAgF,IAAvE3C,EAAa5oB,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,GAAAA,UAAA,GAAG,EAAG6oB,EAAe7oB,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,GAAAA,UAAA,GAAG,EAAG8oB,EAAgB9oB,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,GAAAA,UAAA,GAAG,EAAG8Q,EAAO9Q,UAAAP,OAAA,EAAAO,UAAA,QAAA8G,EAClH,MAAMgkB,EAAa,GACbc,GAAsBriB,EAAcmiB,gBAAgBtd,KAAO,GAAKya,EAChEgD,EAA+C,IAArB/C,EAC1B,WAAM,OAAJ9oB,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,GAAAA,UAAA,GAAG,GAAU6oB,CAAe,EAC9B,WAAM,OAAK+C,GAAT5rB,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,GAAAA,UAAA,GAAG,GAA+B6oB,CAAe,EAUzD,OATA3oB,MAAMgoB,KAAK3e,EAAcmiB,iBACpBI,KAAKC,IACLpT,QAAQ,CAACiD,EAAOlc,KACjBkc,EAAMxc,OAAO,iBAAkBmsB,GAC/BT,EAAW/oB,KAAKupB,GAAe1P,EAAO2P,GAAOvmB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACtC8L,GAAO,IACV2S,MAAOmF,EAAgBiD,EAAwBnsB,MAChD+kB,KAAK,IAAM7I,EAAMxc,OAAO,oBAAqBmsB,OAE7CvI,QAAQzF,IAAIuN,EACvB,CAlCmBkB,CAAgBziB,EAAegiB,EAAS3C,EAAgB+C,EAAc9C,EAAiBC,EAAkBhY,EACpH,EACE,IAAMkS,QAAQC,WAKd,KAAEyF,GAAS5P,EACjB,GAAI4P,EAAM,CACN,MAAOuD,EAAOC,GAAiB,mBAATxD,EAChB,CAAC8C,EAAcC,GACf,CAACA,EAAoBD,GAC3B,OAAOS,IAAQxH,KAAK,IAAMyH,IAC9B,CAEI,OAAOlJ,QAAQzF,IAAI,CAACiO,IAAgBC,EAAmB3a,EAAQ2S,QAEvE,CAkBA,SAASsI,GAAgB1sB,EAAGC,GACxB,OAAOD,EAAE8sB,iBAAiB7sB,EAC9B,C,wCCpDM8sB,GAAuB,IAAIlmB,GAAsBmmB,UACjDC,GAAoBpmB,EAAqBzG,OAC/C,SAAS8sB,GAAYhjB,GACjB,OAAQuhB,GAAe9H,QAAQzF,IAAIuN,EAAW9oB,IAAIP,IAAA,IAAC,UAAE8F,EAAS,QAAEuJ,GAASrP,EAAA,OCP7E,SAA8B8H,EAAe6N,GAA0B,IAE/D7P,EAFiDuJ,EAAO9Q,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,GAAAA,UAAA,GAAG,CAAC,EAGhE,GAFAuJ,EAAcnK,OAAO,iBAAkBgY,GAEnClX,MAAM6F,QAAQqR,GAAa,CAC3B,MAAM0T,EAAa1T,EAAWpV,IAAKupB,GAAYD,GAAe/hB,EAAegiB,EAASza,IACtFvJ,EAAYyb,QAAQzF,IAAIuN,EAC5B,MACK,GAA0B,kBAAf1T,EACZ7P,EAAY+jB,GAAe/hB,EAAe6N,EAAYtG,OAErD,CACD,MAAM0b,EAA2C,oBAAfpV,EAC5BsJ,GAAenX,EAAe6N,EAAYtG,EAAQpF,QAClD0L,EACN7P,EAAYyb,QAAQzF,IAAImN,GAAcnhB,EAAeijB,EAAoB1b,GAC7E,CACA,OAAOvJ,EAAUkd,KAAK,IAAMlb,EAAcnK,OAAO,oBAAqBgY,GAC1E,CDVkFqV,CAAqBljB,EAAehC,EAAWuJ,KACjI,CACA,SAAS4b,GAAqBnjB,GAC1B,IAAIjD,EAAUimB,GAAYhjB,GAC1B,MAAMqH,EA6RC,CACHtK,QAASqmB,IAAgB,GACzBC,YAAaD,KACblR,WAAYkR,KACZzZ,SAAUyZ,KACVE,UAAWF,KACXG,WAAYH,KACZnlB,KAAMmlB,MAnSV,IAAII,GAAkB,EAKtB,MAAMC,EAA0BA,CAACC,EAAK7V,KAClC,MAAMwB,EAAW8H,GAAenX,EAAe6N,GAC/C,GAAIwB,EAAU,CACV,MAAM,WAAEE,EAAU,cAAED,GAA6BD,EAAX1G,GAAMoC,EAAAA,GAAAA,GAAKsE,EAAQrE,IACzD0Y,GAAGjoB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQioB,GAAQ/a,GAAW2G,EAClC,CACA,OAAOoU,GAmBX,SAASxiB,EAAeqG,EAASoc,GAC7B,MAAM7mB,EAAQkD,EAAciS,WACtB3U,EAAU0C,EAAc4jB,mBAAkB,IAAS,CAAC,EAKpDrC,EAAa,GAKbsC,EAAc,IAAI5gB,IAMxB,IAAI6gB,EAAkB,CAAC,EAKnBC,EAAsBC,IAO1B,IAAK,IAAI7tB,EAAI,EAAGA,EAAI4sB,GAAmB5sB,IAAK,CACxC,MAAMwN,EAAOkf,GAAqB1sB,GAC5B8tB,EAAY5c,EAAM1D,GAClB9F,OAAuBN,IAAhBT,EAAM6G,GAAsB7G,EAAM6G,GAAQrG,EAAQqG,GACzDugB,EAAgB3nB,EAAesB,GAK/BsmB,EAAcxgB,IAASggB,EAAoBM,EAAUnS,SAAW,MAClD,IAAhBqS,IACAJ,EAAsB5tB,GAO1B,IAAIiuB,EAAcvmB,IAASP,EAAQqG,IAAS9F,IAASf,EAAM6G,IAASugB,EAepE,GAXIE,GACAZ,GACAxjB,EAAcqkB,yBACdD,GAAc,GAMlBH,EAAUlD,eAAatlB,EAAAA,EAAAA,GAAA,GAAQqoB,IAI7BG,EAAUnS,UAA4B,OAAhBqS,IAElBtmB,IAASomB,EAAUK,UAErB7nB,EAAoBoB,IACJ,mBAATA,EACP,SAQJ,IAAI0mB,EADqBC,GAAuBP,EAAUK,SAAUzmB,IAG/D8F,IAASggB,GACNM,EAAUnS,WACTsS,GACDF,GAEH/tB,EAAI4tB,GAAuBG,EAC5BO,GAAuB,EAK3B,MAAMC,EAAiB/tB,MAAM6F,QAAQqB,GAAQA,EAAO,CAACA,GAKrD,IAAI8mB,EAAiBD,EAAe7tB,OAAO4sB,EAAyB,CAAC,IACjD,IAAhBU,IACAQ,EAAiB,CAAC,GAUtB,MAAM,mBAAEC,EAAqB,CAAC,GAAMX,EAC9BY,GAAOppB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACNmpB,GACAD,GAEDG,EAAiBpmB,IACnB6lB,GAAoB,EAChBV,EAAYphB,IAAI/D,KAChB+lB,GAAuB,EACvBZ,EAAYhQ,OAAOnV,IAEvBulB,EAAUjD,eAAetiB,IAAO,GAEpC,IAAK,MAAMA,KAAOmmB,EAAS,CACvB,MAAM7N,EAAO2N,EAAejmB,GACtBuY,EAAO2N,EAAmBlmB,GAEhC,GAAIolB,EAAgBznB,eAAeqC,GAC/B,SAIJ,IAAIqmB,GAAkB,EAElBA,EADA/W,GAAkBgJ,IAAShJ,GAAkBiJ,IAC1BF,GAAeC,EAAMC,GAGtBD,IAASC,EAE3B8N,OACaxnB,IAATyZ,EAEA8N,EAAcpmB,GAIdmlB,EAAYpuB,IAAIiJ,QAGNnB,IAATyZ,GAAsB6M,EAAYphB,IAAI/D,GAK3ComB,EAAcpmB,GAOdulB,EAAUlD,cAAcriB,IAAO,CAEvC,CAKAulB,EAAUK,SAAWzmB,EACrBomB,EAAUW,mBAAqBD,EAI3BV,EAAUnS,WACVgS,GAAeroB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQqoB,GAAoBa,IAE3CnB,GAAmBxjB,EAAcU,wBACjC6jB,GAAoB,IAKpBA,GAAuBH,IAAeK,GACtClD,EAAW/oB,QAAQksB,EAAejsB,IAAKuF,IAAS,CAC5CA,UAAWA,EACXuJ,SAAO9L,EAAAA,EAAAA,GAAA,CAAIkI,QAAS4D,MAGhC,CAMA,GAAIsc,EAAYhf,KAAM,CAClB,MAAMmgB,EAAoB,CAAC,EAC3BnB,EAAYzU,QAAS1Q,IACjB,MAAMumB,EAAiBjlB,EAAcklB,cAAcxmB,QAC5BnB,IAAnB0nB,IACAD,EAAkBtmB,GAAOumB,KAGjC1D,EAAW/oB,KAAK,CAAEwF,UAAWgnB,GACjC,CACA,IAAIG,EAAgBhrB,QAAQonB,EAAWrrB,QAOvC,OANIstB,IACmB,IAAlB1mB,EAAMO,SAAqBP,EAAMO,UAAYP,EAAMC,SACnDiD,EAAcqkB,yBACfc,GAAgB,GAEpB3B,GAAkB,EACX2B,EAAgBpoB,EAAQwkB,GAAc9H,QAAQC,SACzD,CAkBA,MAAO,CACHxY,iBACAiR,UAhBJ,SAAmBxO,EAAMmO,EAAUvK,GAC/B,IAAI5N,EAEJ,GAAI0N,EAAM1D,GAAMmO,WAAaA,EACzB,OAAO2H,QAAQC,UAEsB,QAAxC/f,EAAKqG,EAAcmiB,uBAAoC,IAAPxoB,GAAyBA,EAAGyV,QAASiD,IAAY,IAAI1Y,EAAI,OAAuC,QAA/BA,EAAK0Y,EAAMpR,sBAAmC,IAAPtH,OAAgB,EAASA,EAAGwY,UAAUxO,EAAMmO,KACrMzK,EAAM1D,GAAMmO,SAAWA,EACvB,MAAMyP,EAAargB,EAAeqG,EAAS5D,GAC3C,IAAK,MAAMjF,KAAO2I,EACdA,EAAM3I,GAAKqiB,cAAgB,CAAC,EAEhC,OAAOQ,CACX,EAII6D,mBArPJ,SAA4BC,GACxBtoB,EAAUsoB,EAAarlB,EAC3B,EAoPIyhB,SAAUA,IAAMpa,EAExB,CACA,SAASmd,GAAuBvN,EAAMD,GAClC,MAAoB,kBAATA,EACAA,IAASC,IAEXtgB,MAAM6F,QAAQwa,KACXD,GAAeC,EAAMC,EAGrC,CACA,SAASmM,KACL,MAAO,CACHtR,SAFyBrb,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,IAAAA,UAAA,GAGzBsqB,cAAe,CAAC,EAChBC,eAAgB,CAAC,EACjB4D,mBAAoB,CAAC,EAE7B,CExSA,IAAI5iB,GAAK,ECCT,MAAMuf,GAAa,CACfvjB,UAAW,CACP0T,QCDR,cAA+BA,GAM3Bpc,WAAAA,CAAYqc,GACRuC,MAAMvC,GACNA,EAAK1Q,iBAAmB0Q,EAAK1Q,eAAiBkiB,GAAqBxR,GACvE,CACA2T,mCAAAA,GACI,MAAM,QAAEvoB,GAAYxH,KAAKoc,KAAKM,WAC9B1c,KAAKqM,UACDnF,EAAoBM,KACpBxH,KAAKqM,QAAU7E,EAAQwoB,UAAUhwB,KAAKoc,MAE9C,CAIAhQ,KAAAA,GACIpM,KAAK+vB,qCACT,CACA1kB,MAAAA,GACI,MAAM,QAAE7D,GAAYxH,KAAKoc,KAAKM,YACtBlV,QAASyoB,GAAgBjwB,KAAKoc,KAAKrE,WAAa,CAAC,EACrDvQ,IAAYyoB,GACZjwB,KAAK+vB,qCAEb,CACA1jB,OAAAA,GAAY,ID3BZ3D,KAAM,CACFyT,QDLR,cAAmCA,GAC/Bpc,WAAAA,GACI4e,SAASzd,WACTlB,KAAKyM,GAAKA,IACd,CACApB,MAAAA,GACI,IAAKrL,KAAKoc,KAAKxR,gBACX,OACJ,MAAM,UAAEslB,EAAS,eAAEC,EAAc,OAAEvjB,GAAW5M,KAAKoc,KAAKxR,iBAChDslB,UAAWE,GAAkBpwB,KAAKoc,KAAKiU,qBAAuB,CAAC,EACvE,IAAKrwB,KAAKoc,KAAK1Q,gBAAkBwkB,IAAcE,EAC3C,OAEJ,MAAME,EAAgBtwB,KAAKoc,KAAK1Q,eAAekR,UAAU,QAASsT,EAAW,CAAEtjB,OAAmB,OAAXA,QAA8B,IAAXA,EAAoBA,EAAS5M,KAAKoc,KAAKM,WAAW9P,SACxJujB,IAAmBD,GACnBI,EAAc3K,KAAK,IAAMwK,EAAenwB,KAAKyM,IAErD,CACAL,KAAAA,GACI,MAAM,SAAEmkB,GAAavwB,KAAKoc,KAAKxR,iBAAmB,CAAC,EAC/C2lB,IACAvwB,KAAKqM,QAAUkkB,EAASvwB,KAAKyM,IAErC,CACAJ,OAAAA,GAAY,KG3BV2E,GAAWA,CAACzQ,EAAGC,IAAMhB,KAAKgxB,IAAIjwB,EAAIC,GCWxC,MAAMiwB,GACF1wB,WAAAA,CAAYib,EAAO0V,GAAgF,IAAtE,mBAAEjvB,EAAkB,cAAEkvB,EAAa,iBAAEC,GAAmB,GAAO1vB,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,GAAAA,UAAA,GAAG,CAAC,EAgE5F,GA5DAlB,KAAK8f,WAAa,KAIlB9f,KAAK6wB,cAAgB,KAIrB7wB,KAAK8wB,kBAAoB,KAIzB9wB,KAAK0wB,SAAW,CAAC,EAIjB1wB,KAAK2wB,cAAgBplB,OACrBvL,KAAK+wB,YAAc,KACf,IAAM/wB,KAAK6wB,gBAAiB7wB,KAAK8wB,kBAC7B,OACJ,MAAMpuB,EAAOsuB,GAAWhxB,KAAK8wB,kBAAmB9wB,KAAKixB,SAC/CC,EAAmC,OAApBlxB,KAAK8f,WAIpBqR,EDxClB,SAAoB5wB,EAAGC,GAEnB,MAAM4wB,EAASpgB,GAASzQ,EAAEuN,EAAGtN,EAAEsN,GACzBujB,EAASrgB,GAASzQ,EAAEwN,EAAGvN,EAAEuN,GAC/B,OAAOvO,KAAK8nB,KAAK8J,GAAU,EAAIC,GAAU,EAC7C,CCmC4CC,CAAW5uB,EAAKkS,OAAQ,CAAE9G,EAAG,EAAGC,EAAG,KAAQ,EAC3E,IAAKmjB,IAAiBC,EAClB,OACJ,MAAM,MAAE7V,GAAU5Y,GACZ,UAAE6uB,GAAcC,GAAAA,GACtBxxB,KAAKixB,QAAQhuB,MAAIiD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIoV,GAAK,IAAEiW,eAC9B,MAAM,QAAEE,EAAO,OAAEC,GAAW1xB,KAAK0wB,SAC5BQ,IACDO,GAAWA,EAAQzxB,KAAK6wB,cAAenuB,GACvC1C,KAAK8f,WAAa9f,KAAK6wB,eAE3Ba,GAAUA,EAAO1xB,KAAK6wB,cAAenuB,IAEzC1C,KAAK2xB,kBAAoB,CAAC3W,EAAOtY,KAC7B1C,KAAK6wB,cAAgB7V,EACrBhb,KAAK8wB,kBAAoBc,GAAelvB,EAAM1C,KAAKyB,oBAEnD0Y,GAAAA,GAAM9O,OAAOrL,KAAK+wB,aAAa,IAEnC/wB,KAAK6xB,gBAAkB,CAAC7W,EAAOtY,KAC3B1C,KAAK8xB,MACL,MAAM,MAAEC,EAAK,aAAEC,EAAY,gBAAEC,GAAoBjyB,KAAK0wB,SAGtD,GAFI1wB,KAAK4wB,kBACLqB,GAAmBA,KACjBjyB,KAAK6wB,gBAAiB7wB,KAAK8wB,kBAC7B,OACJ,MAAMoB,EAAUlB,GAA0B,kBAAfhW,EAAM5M,KAC3BpO,KAAK8wB,kBACLc,GAAelvB,EAAM1C,KAAKyB,oBAAqBzB,KAAKixB,SACtDjxB,KAAK8f,YAAciS,GACnBA,EAAM/W,EAAOkX,GAEjBF,GAAgBA,EAAahX,EAAOkX,KAGnCnX,GAAiBC,GAClB,OACJhb,KAAK4wB,iBAAmBA,EACxB5wB,KAAK0wB,SAAWA,EAChB1wB,KAAKyB,mBAAqBA,EAC1BzB,KAAK2wB,cAAgBA,GAAiBplB,OACtC,MACM4mB,EAAcP,GADPxW,GAAiBJ,GACWhb,KAAKyB,qBACxC,MAAE6Z,GAAU6W,GACZ,UAAEZ,GAAcC,GAAAA,GACtBxxB,KAAKixB,QAAU,EAAA/qB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAMoV,GAAK,IAAEiW,eAC5B,MAAM,eAAEa,GAAmB1B,EAC3B0B,GACIA,EAAepX,EAAOgW,GAAWmB,EAAanyB,KAAKixB,UACvDjxB,KAAKqyB,iBAAkBrxB,EAAAA,GAAAA,GAAKua,GAAgBvb,KAAK2wB,cAAe,cAAe3wB,KAAK2xB,mBAAoBpW,GAAgBvb,KAAK2wB,cAAe,YAAa3wB,KAAK6xB,iBAAkBtW,GAAgBvb,KAAK2wB,cAAe,gBAAiB3wB,KAAK6xB,iBAC9O,CACAS,cAAAA,CAAe5B,GACX1wB,KAAK0wB,SAAWA,CACpB,CACAoB,GAAAA,GACI9xB,KAAKqyB,iBAAmBryB,KAAKqyB,mBAC7B7L,EAAAA,GAAAA,IAAYxmB,KAAK+wB,YACrB,EAEJ,SAASa,GAAelvB,EAAMjB,GAC1B,OAAOA,EAAqB,CAAE6Z,MAAO7Z,EAAmBiB,EAAK4Y,QAAW5Y,CAC5E,CACA,SAAS6vB,GAAchyB,EAAGC,GACtB,MAAO,CAAEsN,EAAGvN,EAAEuN,EAAItN,EAAEsN,EAAGC,EAAGxN,EAAEwN,EAAIvN,EAAEuN,EACtC,CACA,SAASijB,GAAUruB,EAAYsuB,GAAS,IAApB,MAAE3V,GAAO3Y,EACzB,MAAO,CACH2Y,QACAkX,MAAOD,GAAcjX,EAAOmX,GAAgBxB,IAC5Crc,OAAQ2d,GAAcjX,EAAOoX,GAAiBzB,IAC9CnP,SAAUjd,GAAYosB,EAAS,IAEvC,CACA,SAASyB,GAAiBzB,GACtB,OAAOA,EAAQ,EACnB,CACA,SAASwB,GAAgBxB,GACrB,OAAOA,EAAQA,EAAQtwB,OAAS,EACpC,CACA,SAASkE,GAAYosB,EAAS0B,GAC1B,GAAI1B,EAAQtwB,OAAS,EACjB,MAAO,CAAEmN,EAAG,EAAGC,EAAG,GAEtB,IAAInN,EAAIqwB,EAAQtwB,OAAS,EACrBiyB,EAAmB,KACvB,MAAMC,EAAYJ,GAAgBxB,GAClC,KAAOrwB,GAAK,IACRgyB,EAAmB3B,EAAQrwB,KACvBiyB,EAAUtB,UAAYqB,EAAiBrB,WACvCpL,EAAAA,GAAAA,GAAsBwM,MAG1B/xB,IAEJ,IAAKgyB,EACD,MAAO,CAAE9kB,EAAG,EAAGC,EAAG,GAEtB,MAAMgY,GAAOC,EAAAA,GAAAA,GAAsB6M,EAAUtB,UAAYqB,EAAiBrB,WAC1E,GAAa,IAATxL,EACA,MAAO,CAAEjY,EAAG,EAAGC,EAAG,GAEtB,MAAMyK,EAAkB,CACpB1K,GAAI+kB,EAAU/kB,EAAI8kB,EAAiB9kB,GAAKiY,EACxChY,GAAI8kB,EAAU9kB,EAAI6kB,EAAiB7kB,GAAKgY,GAQ5C,OANIvN,EAAgB1K,IAAM2gB,MACtBjW,EAAgB1K,EAAI,GAEpB0K,EAAgBzK,IAAM0gB,MACtBjW,EAAgBzK,EAAI,GAEjByK,CACX,C,0BCvJA,SAASsa,GAAWC,GAChB,OAAOA,EAAKC,IAAMD,EAAKE,GAC3B,CACA,SAASC,GAAO9vB,GAAuC,IAAhCgQ,EAAMlS,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,GAAAA,UAAA,GAAG,EAAGiyB,EAAWjyB,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,GAAAA,UAAA,GAAG,IAC7C,OAAO1B,KAAKgxB,IAAIptB,EAAQgQ,IAAW+f,CACvC,CACA,SAASC,GAAcZ,EAAO3uB,EAAQuP,GAAsB,IAAduB,EAAMzT,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,GAAAA,UAAA,GAAG,GACnDsxB,EAAM7d,OAASA,EACf6d,EAAMa,aAAcxa,EAAAA,GAAAA,GAAIhV,EAAOovB,IAAKpvB,EAAOmvB,IAAKR,EAAM7d,QACtD6d,EAAM/hB,MAAQqiB,GAAW1f,GAAU0f,GAAWjvB,IAC1CqvB,GAAOV,EAAM/hB,MAAO,EAAG,OAAWnM,MAAMkuB,EAAM/hB,UAC9C+hB,EAAM/hB,MAAQ,GAClB+hB,EAAMc,WACFza,EAAAA,GAAAA,GAAIzF,EAAO6f,IAAK7f,EAAO4f,IAAKR,EAAM7d,QAAU6d,EAAMa,aAClDH,GAAOV,EAAMc,YAAchvB,MAAMkuB,EAAMc,cACvCd,EAAMc,UAAY,EAC1B,CACA,SAASC,GAAaf,EAAO3uB,EAAQuP,EAAQuB,GACzCye,GAAcZ,EAAM1kB,EAAGjK,EAAOiK,EAAGsF,EAAOtF,EAAG6G,EAASA,EAAOrD,aAAUtJ,GACrEorB,GAAcZ,EAAMzkB,EAAGlK,EAAOkK,EAAGqF,EAAOrF,EAAG4G,EAASA,EAAOpD,aAAUvJ,EACzE,CACA,SAASwrB,GAAiBpgB,EAAQqgB,EAAU/oB,GACxC0I,EAAO6f,IAAMvoB,EAAOuoB,IAAMQ,EAASR,IACnC7f,EAAO4f,IAAM5f,EAAO6f,IAAMH,GAAWW,EACzC,CAKA,SAASC,GAAyBtgB,EAAQnK,EAAQyB,GAC9C0I,EAAO6f,IAAMhqB,EAAOgqB,IAAMvoB,EAAOuoB,IACjC7f,EAAO4f,IAAM5f,EAAO6f,IAAMH,GAAW7pB,EACzC,CACA,SAAS0qB,GAAqBvgB,EAAQnK,EAAQyB,GAC1CgpB,GAAyBtgB,EAAOtF,EAAG7E,EAAO6E,EAAGpD,EAAOoD,GACpD4lB,GAAyBtgB,EAAOrF,EAAG9E,EAAO8E,EAAGrD,EAAOqD,EACxD,C,eCZA,SAAS6lB,GAA4Bb,EAAME,EAAKD,GAC5C,MAAO,CACHC,SAAajrB,IAARirB,EAAoBF,EAAKE,IAAMA,OAAMjrB,EAC1CgrB,SAAahrB,IAARgrB,EACCD,EAAKC,IAAMA,GAAOD,EAAKC,IAAMD,EAAKE,UAClCjrB,EAEd,CAcA,SAAS6rB,GAA4BC,EAAYC,GAC7C,IAAId,EAAMc,EAAgBd,IAAMa,EAAWb,IACvCD,EAAMe,EAAgBf,IAAMc,EAAWd,IAO3C,OAJIe,EAAgBf,IAAMe,EAAgBd,IACtCa,EAAWd,IAAMc,EAAWb,OAC3BA,EAAKD,GAAO,CAACA,EAAKC,IAEhB,CAAEA,MAAKD,MAClB,CAuCA,MAAMgB,GAAiB,IAgBvB,SAASC,GAAmBC,EAAaC,EAAUC,GAC/C,MAAO,CACHnB,IAAKoB,GAAoBH,EAAaC,GACtCnB,IAAKqB,GAAoBH,EAAaE,GAE9C,CACA,SAASC,GAAoBH,EAAaI,GACtC,MAA8B,kBAAhBJ,EACRA,EACAA,EAAYI,IAAU,CAChC,CC1HA,MAWMC,GAAYA,KAAA,CACdzmB,EAFe,CAASmlB,IAAK,EAAGD,IAAK,GAGrCjlB,EAHe,CAASklB,IAAK,EAAGD,IAAK,KCVzC,SAASwB,GAAShX,GACd,MAAO,CAACA,EAAS,KAAMA,EAAS,KACpC,CCGA,SAASiX,GAAuB9xB,GAAgC,IAA/B,IAAE4M,EAAG,KAAEG,EAAI,MAAEF,EAAK,OAAEC,GAAS9M,EAC1D,MAAO,CACHmL,EAAG,CAAEmlB,IAAKvjB,EAAMsjB,IAAKxjB,GACrBzB,EAAG,CAAEklB,IAAK1jB,EAAKyjB,IAAKvjB,GAE5B,CCVA,SAASilB,GAAgBjkB,GACrB,YAAiBzI,IAAVyI,GAAiC,IAAVA,CAClC,CACA,SAASkkB,GAAQhyB,GAA4B,IAA3B,MAAE8N,EAAK,OAAEC,EAAM,OAAEC,GAAQhO,EACvC,OAAS+xB,GAAgBjkB,KACpBikB,GAAgBhkB,KAChBgkB,GAAgB/jB,EACzB,CACA,SAAS0B,GAAarP,GAClB,OAAQ2xB,GAAS3xB,IACb4xB,GAAe5xB,IACfA,EAAOgL,GACPhL,EAAOqN,QACPrN,EAAOsN,SACPtN,EAAOuN,OACf,CACA,SAASqkB,GAAe5xB,GACpB,OAAO6xB,GAAc7xB,EAAO8K,IAAM+mB,GAAc7xB,EAAO+K,EAC3D,CACA,SAAS8mB,GAAczxB,GACnB,OAAOA,GAAmB,OAAVA,CACpB,CCfA,SAAS0xB,GAAWxZ,EAAO7K,EAAO4iB,GAG9B,OAAOA,EADQ5iB,GADY6K,EAAQ+X,EAGvC,CAIA,SAAS0B,GAAgBzZ,EAAOgY,EAAW7iB,EAAO4iB,EAAa2B,GAI3D,YAHiBhtB,IAAbgtB,IACA1Z,EAAQwZ,GAAWxZ,EAAO0Z,EAAU3B,IAEjCyB,GAAWxZ,EAAO7K,EAAO4iB,GAAeC,CACnD,CAIA,SAAS2B,GAAelC,GAAuD,IAAjDO,EAASpyB,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,GAAAA,UAAA,GAAG,EAAGuP,EAAKvP,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,GAAAA,UAAA,GAAG,EAAGmyB,EAAWnyB,UAAAP,OAAA,EAAAO,UAAA,QAAA8G,EAAEgtB,EAAQ9zB,UAAAP,OAAA,EAAAO,UAAA,QAAA8G,EACzE+qB,EAAKE,IAAM8B,GAAgBhC,EAAKE,IAAKK,EAAW7iB,EAAO4iB,EAAa2B,GACpEjC,EAAKC,IAAM+B,GAAgBhC,EAAKC,IAAKM,EAAW7iB,EAAO4iB,EAAa2B,EACxE,CAIA,SAASE,GAAcC,EAAGxyB,GAAY,IAAV,EAAEmL,EAAC,EAAEC,GAAGpL,EAChCsyB,GAAeE,EAAIrnB,EAAGA,EAAEwlB,UAAWxlB,EAAE2C,MAAO3C,EAAEulB,aAC9C4B,GAAeE,EAAIpnB,EAAGA,EAAEulB,UAAWvlB,EAAE0C,MAAO1C,EAAEslB,YAClD,CAuDA,SAAS+B,GAAc3kB,GACnB,OAAI4kB,OAAOC,UAAU7kB,IAEdA,EAAQ,iBAAmBA,EAAQ,cAD/BA,EACwD,CACvE,CACA,SAAS8kB,GAAcxC,EAAM/hB,GACzB+hB,EAAKE,IAAMF,EAAKE,IAAMjiB,EACtB+hB,EAAKC,IAAMD,EAAKC,IAAMhiB,CAC1B,CAMA,SAASwkB,GAAczC,EAAM0C,EAAUlpB,GAA8B,IAA3BpD,EAAKusB,EAAUC,GAAUppB,EAC/D,MAAMqpB,OAAuC5tB,IAA1BytB,EAAWE,GAA2BF,EAAWE,GAAa,GAC3EtC,GAAcxa,EAAAA,GAAAA,GAAIka,EAAKE,IAAKF,EAAKC,IAAK4C,GAE5CX,GAAelC,EAAM0C,EAAWtsB,GAAMssB,EAAWC,GAAWrC,EAAaoC,EAAWhlB,MACxF,CAIA,MAAMolB,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAI9B,SAASC,GAAaZ,EAAKnxB,GACvBwxB,GAAcL,EAAIrnB,EAAG9J,EAAW6xB,IAChCL,GAAcL,EAAIpnB,EAAG/J,EAAW8xB,GACpC,CCpHA,SAASE,GAAmB7pB,EAAUylB,GAClC,OAAO6C,GHeX,SAA4BnZ,EAAOsW,GAC/B,IAAKA,EACD,OAAOtW,EACX,MAAM2a,EAAUrE,EAAe,CAAE9jB,EAAGwN,EAAM5L,KAAM3B,EAAGuN,EAAM/L,MACnD2mB,EAActE,EAAe,CAAE9jB,EAAGwN,EAAM9L,MAAOzB,EAAGuN,EAAM7L,SAC9D,MAAO,CACHF,IAAK0mB,EAAQloB,EACb2B,KAAMumB,EAAQnoB,EACd2B,OAAQymB,EAAYnoB,EACpByB,MAAO0mB,EAAYpoB,EAE3B,CG1BmCqoB,CAAmBhqB,EAASmO,wBAAyBsX,GACxF,CCJA,MAAMwE,GAAmBzzB,IAAiB,IAAhB,QAAEuI,GAASvI,EACjC,OAAOuI,EAAUA,EAAQmrB,cAAcC,YAAc,MCiBnDC,GAAsB,IAAInZ,QAKhC,MAAMoZ,GACFz2B,WAAAA,CAAY0K,GAIRzK,KAAKy2B,eAAiB,KACtBz2B,KAAK02B,YAAa,EAClB12B,KAAK22B,iBAAmB,KACxB32B,KAAKqzB,YAAc,CAAEvlB,EAAG,EAAGC,EAAG,GAI9B/N,KAAK42B,aAAc,EACnB52B,KAAK62B,uBAAwB,EAI7B72B,KAAK82B,QP9BK,CACdhpB,EAFe,CAASmlB,IAAK,EAAGD,IAAK,GAGrCjlB,EAHe,CAASklB,IAAK,EAAGD,IAAK,IOgCjChzB,KAAKyK,cAAgBA,CACzB,CACAtD,KAAAA,CAAM4vB,GAA4C,IAA/B,aAAEC,GAAe,GAAO91B,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,GAAAA,UAAA,GAAG,CAAC,EAI3C,MAAM,gBAAE0J,GAAoB5K,KAAKyK,cACjC,GAAIG,IAAiD,IAA9BA,EAAgBslB,UACnC,OACJ,MA4FM,iBAAEU,GAAqB5wB,KAAK0c,WAClC1c,KAAKi3B,WAAa,IAAIxG,GAAWsG,EAAa,CAC1C3E,eA9FoBpX,IACpB,MAAM,iBAAE4V,GAAqB5wB,KAAK0c,WAGlCkU,EAAmB5wB,KAAKk3B,iBAAmBl3B,KAAKm3B,gBAC5CH,GACAh3B,KAAKg3B,aAAa5b,GAAiBJ,EAAO,QAAQM,QAyFtDmW,QAtFYA,CAACzW,EAAOtY,KAEpB,MAAM,KAAEiG,EAAI,gBAAEyuB,EAAe,YAAEC,GAAgBr3B,KAAK0c,WACpD,GAAI/T,IAASyuB,IACLp3B,KAAKy2B,gBACLz2B,KAAKy2B,iBACTz2B,KAAKy2B,eAAiB3a,GAAcnT,IAE/B3I,KAAKy2B,gBACN,OAERz2B,KAAK02B,YAAa,EAClB12B,KAAK22B,iBAAmB,KACxB32B,KAAKs3B,qBACDt3B,KAAKyK,cAAc6M,aACnBtX,KAAKyK,cAAc6M,WAAWigB,oBAAqB,EACnDv3B,KAAKyK,cAAc6M,WAAWlE,YAASpL,GAK3CwsB,GAAUzB,IACN,IAAI7nB,EAAUlL,KAAKw3B,mBAAmBzE,GAAM/lB,OAAS,EAIrD,GAAI1H,EAAAA,GAAQnB,KAAK+G,GAAU,CACvB,MAAM,WAAEoM,GAAetX,KAAKyK,cAC5B,GAAI6M,GAAcA,EAAWrO,OAAQ,CACjC,MAAMwuB,EAAengB,EAAWrO,OAAOyuB,UAAU3E,GACjD,GAAI0E,EAAc,CAEdvsB,EADe4nB,GAAW2E,IACN9xB,WAAWuF,GAAW,IAC9C,CACJ,CACJ,CACAlL,KAAKqzB,YAAYN,GAAQ7nB,IAGzBmsB,GACAld,GAAAA,GAAM9O,OAAO,IAAMgsB,EAAYrc,EAAOtY,IAAO,GAAO,GAExD,MAAM,eAAEgJ,GAAmB1L,KAAKyK,cAChCiB,GAAkBA,EAAekR,UAAU,aAAa,IA4CxD8U,OA1CWA,CAAC1W,EAAOtY,KAEnB,MAAM,gBAAE00B,EAAe,kBAAEO,EAAiB,gBAAEC,EAAe,OAAEC,GAAY73B,KAAK0c,WAE9E,IAAK0a,IAAoBp3B,KAAKy2B,eAC1B,OACJ,MAAM,OAAE7hB,GAAWlS,EAEnB,GAAIi1B,GAA+C,OAA1B33B,KAAK22B,iBAM1B,OALA32B,KAAK22B,iBAmWrB,SAA6B/hB,GAA4B,IAApBkjB,EAAa52B,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,GAAAA,UAAA,GAAG,GAC7CikB,EAAY,KACZ3lB,KAAKgxB,IAAI5b,EAAO7G,GAAK+pB,EACrB3S,EAAY,IAEP3lB,KAAKgxB,IAAI5b,EAAO9G,GAAKgqB,IAC1B3S,EAAY,KAEhB,OAAOA,CACX,CA5WwC4S,CAAoBnjB,QAEd,OAA1B5U,KAAK22B,kBACLiB,GAAmBA,EAAgB53B,KAAK22B,mBAKhD32B,KAAKg4B,WAAW,IAAKt1B,EAAK4Y,MAAO1G,GACjC5U,KAAKg4B,WAAW,IAAKt1B,EAAK4Y,MAAO1G,GAOjC5U,KAAKyK,cAAcgB,SAKnBosB,GAAUA,EAAO7c,EAAOtY,IAaxBsvB,aAXiBA,CAAChX,EAAOtY,IAAS1C,KAAK0mB,KAAK1L,EAAOtY,GAYnDuvB,gBAXoBA,IAAMuC,GAAUzB,IACpC,IAAI3uB,EACJ,MAAwC,WAAjCpE,KAAKi4B,kBAAkBlF,KAC0B,QAAlD3uB,EAAKpE,KAAKw3B,mBAAmBzE,GAAMtqB,iBAA8B,IAAPrE,OAAgB,EAASA,EAAGmiB,WAS7F,CACC9kB,mBAAoBzB,KAAKyK,cAAcytB,wBACvCtH,mBACAD,cAAeyF,GAAiBp2B,KAAKyK,gBAE7C,CACAic,IAAAA,CAAK1L,EAAOtY,GACR,MAAMg0B,EAAa12B,KAAK02B,WAExB,GADA12B,KAAKulB,UACAmR,EACD,OACJ,MAAM,SAAE5U,GAAapf,EACrB1C,KAAKm4B,eAAerW,GACpB,MAAM,UAAEsW,GAAcp4B,KAAK0c,WACvB0b,GACAje,GAAAA,GAAM9O,OAAO,IAAM+sB,EAAUpd,EAAOtY,GAE5C,CACA6iB,MAAAA,GACIvlB,KAAK02B,YAAa,EAClB,MAAM,WAAEpf,EAAU,eAAE5L,GAAmB1L,KAAKyK,cACxC6M,IACAA,EAAWigB,oBAAqB,GAEpCv3B,KAAKi3B,YAAcj3B,KAAKi3B,WAAWnF,MACnC9xB,KAAKi3B,gBAAajvB,EAClB,MAAM,gBAAEovB,GAAoBp3B,KAAK0c,YAC5B0a,GAAmBp3B,KAAKy2B,iBACzBz2B,KAAKy2B,iBACLz2B,KAAKy2B,eAAiB,MAE1B/qB,GAAkBA,EAAekR,UAAU,aAAa,EAC5D,CACAob,UAAAA,CAAWjF,EAAMsF,EAAQzjB,GACrB,MAAM,KAAEjM,GAAS3I,KAAK0c,WAEtB,IAAK9H,IAAW0jB,GAAWvF,EAAMpqB,EAAM3I,KAAK22B,kBACxC,OACJ,MAAM4B,EAAYv4B,KAAKw3B,mBAAmBzE,GAC1C,IAAItR,EAAOzhB,KAAKqzB,YAAYN,GAAQne,EAAOme,GAEvC/yB,KAAK42B,aAAe52B,KAAK42B,YAAY7D,KACrCtR,ERtLZ,SAA0BnG,EAAK3Y,EAAgBm0B,GAAS,IAAvB,IAAE7D,EAAG,IAAED,GAAKrwB,EASzC,YARYqF,IAARirB,GAAqB3X,EAAQ2X,EAE7B3X,EAAQwb,GAAUje,EAAAA,GAAAA,GAAIoa,EAAK3X,EAAOwb,EAAQ7D,KAAOzzB,KAAKwzB,IAAI1X,EAAO2X,QAEpDjrB,IAARgrB,GAAqB1X,EAAQ0X,IAElC1X,EAAQwb,GAAUje,EAAAA,GAAAA,GAAIma,EAAK1X,EAAOwb,EAAQ9D,KAAOxzB,KAAKyzB,IAAI3X,EAAO0X,IAE9D1X,CACX,CQ4KmBkd,CAAiB/W,EAAMzhB,KAAK42B,YAAY7D,GAAO/yB,KAAK82B,QAAQ/D,KAEvEwF,EAAUprB,IAAIsU,EAClB,CACA6V,kBAAAA,GACI,IAAIlzB,EACJ,MAAM,gBAAEq0B,EAAe,YAAEvE,GAAgBl0B,KAAK0c,WACxCzT,EAASjJ,KAAKyK,cAAc6M,aAC7BtX,KAAKyK,cAAc6M,WAAWrO,OAC7BjJ,KAAKyK,cAAc6M,WAAWohB,SAAQ,GACG,QAAxCt0B,EAAKpE,KAAKyK,cAAc6M,kBAA+B,IAAPlT,OAAgB,EAASA,EAAG6E,OAC7E0vB,EAAkB34B,KAAK42B,YACzB6B,GAAmB/xB,EAAY+xB,GAC1Bz4B,KAAK42B,cACN52B,KAAK42B,YAAc52B,KAAK44B,yBAKxB54B,KAAK42B,eADL6B,IAAmBxvB,IR5KnC,SAAiCyuB,EAASnrB,GAAgC,IAA9B,IAAEgD,EAAG,KAAEG,EAAI,OAAED,EAAM,MAAED,GAAOjD,EACpE,MAAO,CACHuB,EAAG8lB,GAA4B8D,EAAU5pB,EAAG4B,EAAMF,GAClDzB,EAAG6lB,GAA4B8D,EAAU3pB,EAAGwB,EAAKE,GAEzD,CQwKmCopB,CAAwB5vB,EAAOyuB,UAAWe,GAMrEz4B,KAAK82B,QRrHb,WAA0D,IAA9B5C,EAAWhzB,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,GAAAA,UAAA,GAAG8yB,GAOtC,OANoB,IAAhBE,EACAA,EAAc,GAEO,IAAhBA,IACLA,EAAcF,IAEX,CACHlmB,EAAGmmB,GAAmBC,EAAa,OAAQ,SAC3CnmB,EAAGkmB,GAAmBC,EAAa,MAAO,UAElD,CQ0GuB4E,CAAmB5E,GAK9ByE,IAAoB34B,KAAK42B,aACzB3tB,GACAjJ,KAAK42B,cACJ52B,KAAK62B,uBACNrC,GAAUzB,IACF/yB,KAAKw3B,mBAAmBzE,KACxB/yB,KAAK42B,YAAY7D,GR9IrC,SAA+B9pB,EAAQ2tB,GACnC,MAAMmC,EAAsB,CAAC,EAO7B,YANwB/wB,IAApB4uB,EAAY3D,MACZ8F,EAAoB9F,IAAM2D,EAAY3D,IAAMhqB,EAAOgqB,UAE/BjrB,IAApB4uB,EAAY5D,MACZ+F,EAAoB/F,IAAM4D,EAAY5D,IAAM/pB,EAAOgqB,KAEhD8F,CACX,CQqI6CC,CAAsB/vB,EAAOyuB,UAAU3E,GAAO/yB,KAAK42B,YAAY7D,MAIxG,CACA6F,qBAAAA,GACI,MAAQH,gBAAiB7B,EAAW,yBAAEqC,GAA6Bj5B,KAAK0c,WACxE,IAAKka,IAAgBlwB,EAAYkwB,GAC7B,OAAO,EACX,MAAMsC,EAAqBtC,EAAY1rB,SACvCiuB,EAAAA,GAAAA,GAAiC,OAAvBD,EAA6B,0GACvC,MAAM,WAAE5hB,GAAetX,KAAKyK,cAE5B,IAAK6M,IAAeA,EAAWrO,OAC3B,OAAO,EACX,MAAMmwB,EF7Od,SAAwBhiB,EAASiiB,EAAoB53B,GACjD,MAAM63B,EAActD,GAAmB5e,EAAS3V,IAC1C,OAAE83B,GAAWF,EAKnB,OAJIE,IACAhE,GAAc+D,EAAYxrB,EAAGyrB,EAAO3kB,OAAO9G,GAC3CynB,GAAc+D,EAAYvrB,EAAGwrB,EAAO3kB,OAAO7G,IAExCurB,CACX,CEqO+BE,CAAeN,EAAoB5hB,EAAWuG,KAAM7d,KAAKyK,cAAcytB,yBAC9F,IAAIuB,ERvLZ,SAAiC/B,EAAW0B,GACxC,MAAO,CACHtrB,EAAG+lB,GAA4B6D,EAAU5pB,EAAGsrB,EAAetrB,GAC3DC,EAAG8lB,GAA4B6D,EAAU3pB,EAAGqrB,EAAerrB,GAEnE,CQkLkC2rB,CAAwBpiB,EAAWrO,OAAOyuB,UAAW0B,GAK/E,GAAIH,EAA0B,CAC1B,MAAMU,EAAkBV,EL/OpC,SAAgC1sB,GAAW,IAAV,EAAEuB,EAAC,EAAEC,GAAGxB,EACrC,MAAO,CAAEgD,IAAKxB,EAAEklB,IAAKzjB,MAAO1B,EAAEklB,IAAKvjB,OAAQ1B,EAAEilB,IAAKtjB,KAAM5B,EAAEmlB,IAC9D,CK6O6D2G,CAAwBH,IACzEz5B,KAAK62B,wBAA0B8C,EAC3BA,IACAF,EAAsBhF,GAAwBkF,GAEtD,CACA,OAAOF,CACX,CACAtB,cAAAA,CAAerW,GACX,MAAM,KAAEnZ,EAAI,aAAEkxB,EAAY,YAAE3F,EAAW,eAAE4F,EAAc,iBAAElJ,EAAgB,oBAAEmJ,GAAyB/5B,KAAK0c,WACnGka,EAAc52B,KAAK42B,aAAe,CAAC,EACnCoD,EAAqBxF,GAAUzB,IACjC,IAAKuF,GAAWvF,EAAMpqB,EAAM3I,KAAK22B,kBAC7B,OAEJ,IAAI3c,EAAc4c,GAAeA,EAAY7D,IAAU,CAAC,EACpDnC,IACA5W,EAAa,CAAEiZ,IAAK,EAAGD,IAAK,IAOhC,MAAMiH,EAAkB/F,EAAc,IAAM,IACtCgG,EAAgBhG,EAAc,GAAK,IACnCiG,GAAOj0B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACTkI,KAAM,UACN0T,SAAU+X,EAAe/X,EAASiR,GAAQ,EAC1CkH,kBACAC,gBACAE,aAAc,IACdC,UAAW,EACXnT,UAAW,IACR4S,GACA9f,GAKP,OAAOha,KAAKs6B,wBAAwBvH,EAAMoH,KAG9C,OAAOjW,QAAQzF,IAAIub,GAAoBrU,KAAKoU,EAChD,CACAO,uBAAAA,CAAwBvH,EAAM/Y,GAC1B,MAAMue,EAAYv4B,KAAKw3B,mBAAmBzE,GAC1C,OAAOwF,EAAUpxB,MAAM4hB,GAAmBgK,EAAMwF,EAAW,EAAGve,GAClE,CACAmd,aAAAA,GACI3C,GAAUzB,GAAS/yB,KAAKw3B,mBAAmBzE,GAAMrM,OACrD,CACAwQ,cAAAA,GACI1C,GAAUzB,IAAW,IAAI3uB,EAAI,OAA0D,QAAlDA,EAAKpE,KAAKw3B,mBAAmBzE,GAAMtqB,iBAA8B,IAAPrE,OAAgB,EAASA,EAAGqiB,SAC/H,CACAwR,iBAAAA,CAAkBlF,GACd,IAAI3uB,EACJ,OAA0D,QAAlDA,EAAKpE,KAAKw3B,mBAAmBzE,GAAMtqB,iBAA8B,IAAPrE,OAAgB,EAASA,EAAG0N,KAClG,CAOA0lB,kBAAAA,CAAmBzE,GACf,MAAMwH,EAAU,QAAUxH,EAAK5a,cACzB5Q,EAAQvH,KAAKyK,cAAciS,WAC3B8d,EAAsBjzB,EAAMgzB,GAClC,OAAOC,GAEDx6B,KAAKyK,cAAcwgB,SAAS8H,GAAOxrB,EAAMO,QAAUP,EAAMO,QAAQirB,QAAQ/qB,IAAc,EACjG,CACAgvB,YAAAA,CAAa1b,GACTkZ,GAAUzB,IACN,MAAM,KAAEpqB,GAAS3I,KAAK0c,WAEtB,IAAK4b,GAAWvF,EAAMpqB,EAAM3I,KAAK22B,kBAC7B,OACJ,MAAM,WAAErf,GAAetX,KAAKyK,cACtB8tB,EAAYv4B,KAAKw3B,mBAAmBzE,GAC1C,GAAIzb,GAAcA,EAAWrO,OAAQ,CACjC,MAAM,IAAEgqB,EAAG,IAAED,GAAQ1b,EAAWrO,OAAOyuB,UAAU3E,GACjDwF,EAAUprB,IAAImO,EAAMyX,IAAQla,EAAAA,GAAAA,GAAIoa,EAAKD,EAAK,IAC9C,GAER,CAMAyH,8BAAAA,GACI,IAAKz6B,KAAKyK,cAAcS,QACpB,OACJ,MAAM,KAAEvC,EAAI,gBAAE8vB,GAAoBz4B,KAAK0c,YACjC,WAAEpF,GAAetX,KAAKyK,cAC5B,IAAK/D,EAAY+xB,KAAqBnhB,IAAetX,KAAK42B,YACtD,OAKJ52B,KAAKm3B,gBAKL,MAAMuD,EAAc,CAAE5sB,EAAG,EAAGC,EAAG,GAC/BymB,GAAUzB,IACN,MAAMwF,EAAYv4B,KAAKw3B,mBAAmBzE,GAC1C,GAAIwF,EAAW,CACX,MAAMoC,EAASpC,EAAUvrB,MACzB0tB,EAAY3H,GRpS5B,SAAoBlvB,EAAQuP,GACxB,IAAIuB,EAAS,GACb,MAAMimB,EAAe9H,GAAWjvB,GAC1Bg3B,EAAe/H,GAAW1f,GAOhC,OANIynB,EAAeD,EACfjmB,GAASmmB,EAAAA,GAAAA,GAAS1nB,EAAO6f,IAAK7f,EAAO4f,IAAM4H,EAAc/2B,EAAOovB,KAE3D2H,EAAeC,IACpBlmB,GAASmmB,EAAAA,GAAAA,GAASj3B,EAAOovB,IAAKpvB,EAAOmvB,IAAM6H,EAAcznB,EAAO6f,OAE7D8H,EAAAA,GAAAA,GAAM,EAAG,EAAGpmB,EACvB,CQyRoCD,CAAW,CAAEue,IAAK0H,EAAQ3H,IAAK2H,GAAU36B,KAAK42B,YAAY7D,GAClF,IAKJ,MAAM,kBAAE9gB,GAAsBjS,KAAKyK,cAAciS,WACjD1c,KAAKyK,cAAcS,QAAQgH,MAAMlO,UAAYiO,EACvCA,EAAkB,CAAC,EAAG,IACtB,OACNqF,EAAWuG,MAAQvG,EAAWuG,KAAKmd,eACnC1jB,EAAW2jB,eACXj7B,KAAKs3B,qBAKL9C,GAAUzB,IACN,IAAKuF,GAAWvF,EAAMpqB,EAAM,MACxB,OAIJ,MAAM4vB,EAAYv4B,KAAKw3B,mBAAmBzE,IACpC,IAAEE,EAAG,IAAED,GAAQhzB,KAAK42B,YAAY7D,GACtCwF,EAAUprB,KAAI0L,EAAAA,GAAAA,GAAIoa,EAAKD,EAAK0H,EAAY3H,MAEhD,CACAmI,YAAAA,GACI,IAAKl7B,KAAKyK,cAAcS,QACpB,OACJqrB,GAAoBppB,IAAInN,KAAKyK,cAAezK,MAC5C,MAIMm7B,EAAsB5f,GAJZvb,KAAKyK,cAAcS,QAIkB,cAAgB8P,IACjE,MAAM,KAAErS,EAAI,aAAEgL,GAAe,GAAS3T,KAAK0c,WAC3C/T,GAAQgL,GAAgB3T,KAAKmH,MAAM6T,KAEjCogB,EAAyBA,KAC3B,MAAM,gBAAE3C,GAAoBz4B,KAAK0c,WAC7BhW,EAAY+xB,KACZz4B,KAAK42B,YAAc52B,KAAK44B,2BAG1B,WAAEthB,GAAetX,KAAKyK,cACtB4wB,EAA4B/jB,EAAWuD,iBAAiB,UAAWugB,GACrE9jB,IAAeA,EAAWrO,SAC1BqO,EAAWuG,MAAQvG,EAAWuG,KAAKmd,eACnC1jB,EAAW2jB,gBAEfG,IAKA,MAAME,EAAqB5gB,GAAYnP,OAAQ,SAAU,IAAMvL,KAAKy6B,kCAK9Dc,EAA2BjkB,EAAWuD,iBAAiB,YAAclY,IAAiC,IAAhC,MAAE6vB,EAAK,iBAAEgJ,GAAkB74B,EAC/F3C,KAAK02B,YAAc8E,IACnBhH,GAAUzB,IACN,MAAM5H,EAAcnrB,KAAKw3B,mBAAmBzE,GACvC5H,IAELnrB,KAAKqzB,YAAYN,IAASP,EAAMO,GAAMO,UACtCnI,EAAYhe,IAAIge,EAAYne,MAAQwlB,EAAMO,GAAMO,cAEpDtzB,KAAKyK,cAAcgB,YAG3B,MAAO,KACH6vB,IACAH,IACAE,IACAE,GAA4BA,IAEpC,CACA7e,QAAAA,GACI,MAAMnV,EAAQvH,KAAKyK,cAAciS,YAC3B,KAAE/T,GAAO,EAAK,kBAAEgvB,GAAoB,EAAK,gBAAEP,GAAkB,EAAK,gBAAEqB,GAAkB,EAAK,YAAEvE,EAAcF,GAAc,aAAE6F,GAAe,GAAUtyB,EAC1J,OAAArB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACOqB,GAAK,IACRoB,OACAgvB,oBACAP,kBACAqB,kBACAvE,cACA2F,gBAER,EAEJ,SAASvB,GAAWnT,EAAWxc,EAAMguB,GACjC,QAAkB,IAAThuB,GAAiBA,IAASwc,KACT,OAArBwR,GAA6BA,IAAqBxR,EAC3D,CCtcA,MAAMsW,GAAgBt7B,GAAY,CAAC6a,EAAOtY,KAClCvC,GACAga,GAAAA,GAAM9O,OAAO,IAAMlL,EAAQ6a,EAAOtY,KCJ1C,MAAMg5B,GAAwB,CAK1BC,wBAAwB,EAKxBC,gBAAgB,GCbpB,SAASC,GAAgBC,EAAQ/I,GAC7B,OAAIA,EAAKC,MAAQD,EAAKE,IACX,EACH6I,GAAU/I,EAAKC,IAAMD,EAAKE,KAAQ,GAC9C,CAQA,MAAM8I,GAAsB,CACxBC,QAASA,CAACrB,EAAQve,KACd,IAAKA,EAAKhJ,OACN,OAAOunB,EAKX,GAAsB,kBAAXA,EAAqB,CAC5B,IAAI70B,EAAAA,GAAG3B,KAAKw2B,GAIR,OAAOA,EAHPA,EAASh1B,WAAWg1B,EAK5B,CAKA,MAAM7sB,EAAI+tB,GAAgBlB,EAAQve,EAAKhJ,OAAOtF,GACxCC,EAAI8tB,GAAgBlB,EAAQve,EAAKhJ,OAAOrF,GAC9C,MAAO,GAAPnI,OAAUkI,EAAC,MAAAlI,OAAKmI,EAAC,OCjCnBkuB,GAAmB,CACrBD,QAASA,CAACrB,EAAMh4B,KAAqC,IAAnC,UAAEu5B,EAAS,gBAAEC,GAAiBx5B,EAC5C,MAAMy5B,EAAWzB,EACX0B,EAASn4B,GAAAA,EAAQ9B,MAAMu4B,GAE7B,GAAI0B,EAAO17B,OAAS,EAChB,OAAOy7B,EACX,MAAME,EAAWp4B,GAAAA,EAAQN,kBAAkB+2B,GACrC/lB,EAA8B,kBAAdynB,EAAO,GAAkB,EAAI,EAE7CE,EAASJ,EAAgBruB,EAAE2C,MAAQyrB,EAAUpuB,EAC7C0uB,EAASL,EAAgBpuB,EAAE0C,MAAQyrB,EAAUnuB,EACnDsuB,EAAO,EAAIznB,IAAW2nB,EACtBF,EAAO,EAAIznB,IAAW4nB,EAOtB,MAAMC,GAAe5jB,EAAAA,GAAAA,GAAI0jB,EAAQC,EAAQ,IAOzC,MALkC,kBAAvBH,EAAO,EAAIznB,KAClBynB,EAAO,EAAIznB,IAAW6nB,GAEQ,kBAAvBJ,EAAO,EAAIznB,KAClBynB,EAAO,EAAIznB,IAAW6nB,GACnBH,EAASD,KCpBxB,MAAMK,WAAiCC,EAAAA,UAMnCC,iBAAAA,GACI,MAAM,cAAEnyB,EAAa,YAAEoyB,EAAW,kBAAEC,EAAiB,SAAExyB,GAAatK,KAAKuH,OACnE,WAAE+P,GAAe7M,E/FjB/B,IAA2BsyB,I+FkBDC,G/FjBtBp2B,OAAO0M,OAAO/F,EAAiBwvB,G+FkBvBzlB,IACIulB,EAAYI,OACZJ,EAAYI,MAAM/8B,IAAIoX,GACtBwlB,GAAqBA,EAAkBvM,UAAYjmB,GACnDwyB,EAAkBvM,SAASjZ,GAE/BA,EAAWuG,KAAKqf,YAChB5lB,EAAWuD,iBAAiB,oBAAqB,KAC7C7a,KAAKm9B,iBAET7lB,EAAW8lB,YAAUl3B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAChBoR,EAAWtF,SAAO,IACrBme,eAAgBA,IAAMnwB,KAAKm9B,mBAGnCzB,GAAsBE,gBAAiB,CAC3C,CACAyB,uBAAAA,CAAwBtlB,GACpB,MAAM,iBAAEulB,EAAgB,cAAE7yB,EAAa,KAAE9B,EAAI,UAAEunB,GAAclwB,KAAKuH,MAC5D+P,EAAa7M,EAAc6M,WACjC,OAAKA,GASLA,EAAW4Y,UAAYA,EACnBvnB,GACAoP,EAAUulB,mBAAqBA,QACVt1B,IAArBs1B,EACAhmB,EAAWimB,aAGXv9B,KAAKm9B,eAELplB,EAAUmY,YAAcA,IACpBA,EACA5Y,EAAWkmB,UAELlmB,EAAWmmB,YAMjBtjB,GAAAA,GAAMujB,WAAW,KACb,MAAMC,EAAQrmB,EAAWsmB,WACpBD,GAAUA,EAAME,QAAQl9B,QACzBX,KAAKm9B,kBAKd,MAnCI,IAoCf,CACAW,kBAAAA,GACI,MAAM,WAAExmB,GAAetX,KAAKuH,MAAMkD,cAC9B6M,IACAA,EAAWuG,KAAKqf,YAChBa,eAAe,MACNzmB,EAAW0mB,kBAAoB1mB,EAAW2mB,UAC3Cj+B,KAAKm9B,iBAIrB,CACAe,oBAAAA,GACI,MAAM,cAAEzzB,EAAa,YAAEoyB,EAAaC,kBAAmBqB,GAAoBn+B,KAAKuH,OAC1E,WAAE+P,GAAe7M,EACnB6M,IACAA,EAAW8mB,4BACPvB,GAAeA,EAAYI,OAC3BJ,EAAYI,MAAM1Q,OAAOjV,GACzB6mB,GAAkBA,EAAeE,YACjCF,EAAeE,WAAW/mB,GAEtC,CACA6lB,YAAAA,GACI,MAAM,aAAEA,GAAiBn9B,KAAKuH,MAC9B41B,GAAgBA,GACpB,CACA1xB,MAAAA,GACI,OAAO,IACX,EAEJ,SAASrB,GAAc7C,GACnB,MAAO2oB,EAAWiN,GCnFtB,WACI,MAAMp1B,GAAUI,EAAAA,EAAAA,YAAW0C,EAAAA,GAC3B,GAAgB,OAAZ9C,EACA,MAAO,EAAC,EAAM,MAClB,MAAM,UAAEmoB,EAAS,eAAEC,EAAc,SAAEI,GAAaxoB,EAG1C0E,GAAK6xB,EAAAA,EAAAA,SAGX,OAFAj/B,EAAAA,EAAAA,WAAU,IAAMkxB,EAAS9jB,GAAK,KAEtByjB,GAAaC,EAAiB,EAAC,EADlBgN,IAAMhN,GAAkBA,EAAe1jB,IACE,EAAC,EACnE,CDwEsC8xB,GAC5B1B,GAAc10B,EAAAA,EAAAA,YAAWzD,EAAAA,GAC/B,OAAQi4B,EAAAA,cAA6BD,IAAwBx2B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAOqB,GAAK,IAAEs1B,YAAaA,EAAaC,mBAAmB30B,EAAAA,EAAAA,YAAWkB,GAA2B6mB,UAAWA,EAAWiN,aAAcA,IACtM,CACA,MAAMH,GAAyB,CAC3BpuB,cAAY1I,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACL61B,IAAmB,IACtByC,QAAS,CACL,sBACA,uBACA,yBACA,6BAGR1vB,oBAAqBitB,GACrBhtB,qBAAsBgtB,GACtB9sB,uBAAwB8sB,GACxB/sB,wBAAyB+sB,GACzB0C,UAAWxC,I,yBEzHf,MAAMyC,GAAU,CAAC,UAAW,WAAY,aAAc,eAChDC,GAAaD,GAAQ/9B,OACrBi+B,GAAYx7B,GAA2B,kBAAVA,EAAqBuC,WAAWvC,GAASA,EACtEy7B,GAAQz7B,GAA2B,kBAAVA,GAAsB0C,EAAAA,GAAG3B,KAAKf,GA0C7D,SAAS07B,GAAU97B,EAAQ+7B,GACvB,YAA8B/2B,IAAvBhF,EAAO+7B,GACR/7B,EAAO+7B,GACP/7B,EAAO4L,YACjB,CAwBA,MAAMowB,GAAkBC,GAAS,EAAG,GAAKpc,GAAAA,IACnCqc,GAAmBD,GAAS,GAAK,IAAMp9B,GAAAA,GAC7C,SAASo9B,GAAShM,EAAKD,EAAK/Q,GACxB,OAAQvgB,GAEAA,EAAIuxB,EACG,EACPvxB,EAAIsxB,EACG,EACJ/Q,GAAO6Y,EAAAA,GAAAA,GAAS7H,EAAKD,EAAKtxB,GAEzC,CCrFA,SAASy9B,GAAapM,EAAMqM,GACxBrM,EAAKE,IAAMmM,EAAWnM,IACtBF,EAAKC,IAAMoM,EAAWpM,GAC1B,CAMA,SAASqM,GAAYlK,EAAKmK,GACtBH,GAAahK,EAAIrnB,EAAGwxB,EAAUxxB,GAC9BqxB,GAAahK,EAAIpnB,EAAGuxB,EAAUvxB,EAClC,CCVA,SAASwxB,GAAiBjkB,EAAOgY,EAAW7iB,EAAO4iB,EAAa2B,GAM5D,OAJA1Z,EAAQwZ,GADRxZ,GAASgY,EACiB,EAAI7iB,EAAO4iB,QACpBrrB,IAAbgtB,IACA1Z,EAAQwZ,GAAWxZ,EAAO,EAAI0Z,EAAU3B,IAErC/X,CACX,CAsBA,SAASkkB,GAAqBzM,EAAM0C,EAAU9yB,EAA8BgS,EAAQ8qB,GAAY,IAA/Ct2B,EAAKusB,EAAUC,GAAUhzB,GAlB1E,SAAyBowB,GAA8F,IAAxFO,EAASpyB,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,GAAAA,UAAA,GAAG,EAAGuP,EAAKvP,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,GAAAA,UAAA,GAAG,EAAGyT,EAAMzT,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,GAAAA,UAAA,GAAG,GAAK8zB,EAAQ9zB,UAAAP,OAAA,EAAAO,UAAA,QAAA8G,EAAEo3B,EAAUl+B,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,GAAAA,UAAA,GAAG6xB,EAAM0M,EAAUv+B,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,GAAAA,UAAA,GAAG6xB,EACzGztB,EAAAA,GAAQnB,KAAKmvB,KACbA,EAAY3tB,WAAW2tB,GAEvBA,GADyBza,EAAAA,GAAAA,GAAI4mB,EAAWxM,IAAKwM,EAAWzM,IAAKM,EAAY,KAC1CmM,EAAWxM,KAE9C,GAAyB,kBAAdK,EACP,OACJ,IAAID,GAAcxa,EAAAA,GAAAA,GAAIumB,EAAWnM,IAAKmM,EAAWpM,IAAKre,GAClDoe,IAASqM,IACT/L,GAAeC,GACnBP,EAAKE,IAAMsM,GAAiBxM,EAAKE,IAAKK,EAAW7iB,EAAO4iB,EAAa2B,GACrEjC,EAAKC,IAAMuM,GAAiBxM,EAAKC,IAAKM,EAAW7iB,EAAO4iB,EAAa2B,EACzE,CAMI0K,CAAgB3M,EAAM0C,EAAWtsB,GAAMssB,EAAWC,GAAWD,EAAWE,GAAYF,EAAWhlB,MAAOkE,EAAQ8qB,EAClH,CAIA,MAAM5J,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAK9B,SAAS6J,GAAoBxK,EAAKM,EAAY6J,EAAWM,GACrDJ,GAAqBrK,EAAIrnB,EAAG2nB,EAAYI,GAAOyJ,EAAYA,EAAUxxB,OAAI9F,EAAW43B,EAAYA,EAAU9xB,OAAI9F,GAC9Gw3B,GAAqBrK,EAAIpnB,EAAG0nB,EAAYK,GAAOwJ,EAAYA,EAAUvxB,OAAI/F,EAAW43B,EAAYA,EAAU7xB,OAAI/F,EAClH,CCjDA,SAAS63B,GAAgBrN,GACrB,OAA2B,IAApBA,EAAMc,WAAmC,IAAhBd,EAAM/hB,KAC1C,CACA,SAASqvB,GAAYtN,GACjB,OAAOqN,GAAgBrN,EAAM1kB,IAAM+xB,GAAgBrN,EAAMzkB,EAC7D,CAOA,SAASgyB,GAAiBx/B,EAAGC,GACzB,OAAQhB,KAAKC,MAAMc,EAAEuN,EAAEmlB,OAASzzB,KAAKC,MAAMe,EAAEsN,EAAEmlB,MAC3CzzB,KAAKC,MAAMc,EAAEuN,EAAEklB,OAASxzB,KAAKC,MAAMe,EAAEsN,EAAEklB,MACvCxzB,KAAKC,MAAMc,EAAEwN,EAAEklB,OAASzzB,KAAKC,MAAMe,EAAEuN,EAAEklB,MACvCzzB,KAAKC,MAAMc,EAAEwN,EAAEilB,OAASxzB,KAAKC,MAAMe,EAAEuN,EAAEilB,IAC/C,CACA,SAASgN,GAAY7K,GACjB,OAAOrC,GAAWqC,EAAIrnB,GAAKglB,GAAWqC,EAAIpnB,EAC9C,C,eCpBA,MAAMkyB,GACFlgC,WAAAA,GACIC,KAAK69B,QAAU,EACnB,CACA39B,GAAAA,CAAIkc,IACAhc,EAAAA,GAAAA,IAAcJ,KAAK69B,QAASzhB,GAC5BA,EAAK8jB,gBACT,CACA3T,MAAAA,CAAOnQ,GAKH,IAJA/b,EAAAA,GAAAA,IAAWL,KAAK69B,QAASzhB,GACrBA,IAASpc,KAAKmgC,WACdngC,KAAKmgC,cAAWn4B,GAEhBoU,IAASpc,KAAKogC,KAAM,CACpB,MAAMD,EAAWngC,KAAK69B,QAAQ79B,KAAK69B,QAAQl9B,OAAS,GAChDw/B,GACAngC,KAAKw9B,QAAQ2C,EAErB,CACJ,CACA1C,QAAAA,CAASrhB,GACL,MAAMikB,EAAcrgC,KAAK69B,QAAQyC,UAAWC,GAAWnkB,IAASmkB,GAChE,GAAoB,IAAhBF,EACA,OAAO,EAIX,IAAIF,EACJ,IAAK,IAAIv/B,EAAIy/B,EAAaz/B,GAAK,EAAGA,IAAK,CACnC,MAAM2/B,EAASvgC,KAAK69B,QAAQj9B,GAC5B,IAAyB,IAArB2/B,EAAOrQ,UAAqB,CAC5BiQ,EAAWI,EACX,KACJ,CACJ,CACA,QAAIJ,IACAngC,KAAKw9B,QAAQ2C,IACN,EAKf,CACA3C,OAAAA,CAAQphB,EAAMokB,GACV,MAAML,EAAWngC,KAAKogC,KACtB,GAAIhkB,IAAS+jB,IAEbngC,KAAKmgC,SAAWA,EAChBngC,KAAKogC,KAAOhkB,EACZA,EAAKqkB,OACDN,GAAU,CACVA,EAASh0B,UAAYg0B,EAASD,iBAC9B9jB,EAAK8jB,iBACL9jB,EAAKskB,WAAaP,EACdK,IACApkB,EAAKskB,WAAWC,iBAAkB,GAElCR,EAASS,WACTxkB,EAAKwkB,SAAWT,EAASS,SACzBxkB,EAAKwkB,SAAS7uB,aACVouB,EAASU,iBAAmBV,EAASpuB,cAEzCqK,EAAKyB,MAAQzB,EAAKyB,KAAKijB,aACvB1kB,EAAK2kB,eAAgB,GAEzB,MAAM,UAAEC,GAAc5kB,EAAKpK,SACT,IAAdgvB,GACAb,EAASc,MAcjB,CACJ,CACAC,qBAAAA,GACIlhC,KAAK69B,QAAQhkB,QAASuC,IAClB,MAAM,QAAEpK,EAAO,aAAEmvB,GAAiB/kB,EAClCpK,EAAQme,gBAAkBne,EAAQme,iBAC9BgR,GACAA,EAAanvB,QAAQme,gBACjBgR,EAAanvB,QAAQme,kBAGrC,CACA+P,cAAAA,GACIlgC,KAAK69B,QAAQhkB,QAASuC,IAClBA,EAAKjQ,UAAYiQ,EAAK8jB,gBAAe,IAE7C,CAKAkB,kBAAAA,GACQphC,KAAKogC,MAAQpgC,KAAKogC,KAAKQ,WACvB5gC,KAAKogC,KAAKQ,cAAW54B,EAE7B,EC5GJ,SAASq5B,GAAyB7O,EAAO0J,EAAWoF,GAChD,IAAIt9B,EAAY,GAOhB,MAAMu9B,EAAa/O,EAAM1kB,EAAEwlB,UAAY4I,EAAUpuB,EAC3C0zB,EAAahP,EAAMzkB,EAAEulB,UAAY4I,EAAUnuB,EAWjD,IAVIwzB,GAAcC,KACdx9B,EAAY,eAAH4B,OAAkB27B,EAAU,QAAA37B,OAAO47B,EAAU,YAMtC,IAAhBtF,EAAUpuB,GAA2B,IAAhBouB,EAAUnuB,IAC/B/J,GAAa,SAAJ4B,OAAa,EAAIs2B,EAAUpuB,EAAC,MAAAlI,OAAK,EAAIs2B,EAAUnuB,EAAC,OAEzDuzB,EAAiB,CACjB,MAAM,OAAEjxB,EAAM,QAAEC,EAAO,QAAEC,GAAY+wB,EACjCjxB,IACArM,GAAa,UAAJ4B,OAAcyK,EAAM,UAC7BC,IACAtM,GAAa,WAAJ4B,OAAe0K,EAAO,UAC/BC,IACAvM,GAAa,WAAJ4B,OAAe2K,EAAO,SACvC,CAKA,MAAMkxB,EAAgBjP,EAAM1kB,EAAE2C,MAAQyrB,EAAUpuB,EAC1C4zB,EAAgBlP,EAAMzkB,EAAE0C,MAAQyrB,EAAUnuB,EAIhD,OAHsB,IAAlB0zB,GAAyC,IAAlBC,IACvB19B,GAAa,SAAJ4B,OAAa67B,EAAa,MAAA77B,OAAK87B,EAAa,MAElD19B,GAAa,MACxB,CCvCA,MAAM29B,GAAiBA,CAACphC,EAAGC,IAAMD,EAAEqhC,MAAQphC,EAAEohC,MCG7C,MAAMC,GACF9hC,WAAAA,GACIC,KAAKgX,SAAW,GAChBhX,KAAK8hC,SAAU,CACnB,CACA5hC,GAAAA,CAAI4c,IACA1c,EAAAA,GAAAA,IAAcJ,KAAKgX,SAAU8F,GAC7B9c,KAAK8hC,SAAU,CACnB,CACAvV,MAAAA,CAAOzP,IACHzc,EAAAA,GAAAA,IAAWL,KAAKgX,SAAU8F,GAC1B9c,KAAK8hC,SAAU,CACnB,CACAjoB,OAAAA,CAAQ2D,GACJxd,KAAK8hC,SAAW9hC,KAAKgX,SAASgW,KAAK2U,IACnC3hC,KAAK8hC,SAAU,EACf9hC,KAAKgX,SAAS6C,QAAQ2D,EAC1B,ECMJ,MAAMukB,GAAgB,CAAC,GAAI,IAAK,IAAK,KAC/BC,GAAmB,CAAEC,WAAY,UAMvC,IAAIx1B,GAAK,EAKT,MAAMy1B,GAAsB,CACxB9zB,KAAM,kBACN+zB,WAAY,EACZC,qBAAsB,EACtBC,uBAAwB,GAE5B,SAASC,GAAoB3/B,GAA6F,IAA5F,qBAAE4/B,EAAoB,cAAEC,EAAa,cAAEC,EAAa,kBAAEC,EAAiB,eAAEC,GAAiBhgC,EACpH,OAAO,MACH5C,WAAAA,GAAuH,IAA3GgS,EAAY7Q,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGwJ,EAAMxJ,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,GAAAA,UAAA,GAAqB,OAAlBshC,QAA4C,IAAlBA,OAA2B,EAASA,IAIlGxiC,KAAKyM,GAAKA,KAIVzM,KAAK4iC,YAAc,EAOnB5iC,KAAKgX,SAAW,IAAItJ,IAKpB1N,KAAKgS,QAAU,CAAC,EAMhBhS,KAAK6iC,iBAAkB,EACvB7iC,KAAKu3B,oBAAqB,EAO1Bv3B,KAAK+gC,eAAgB,EAKrB/gC,KAAK8iC,mBAAoB,EAKzB9iC,KAAK+iC,yBAA0B,EAK/B/iC,KAAKgjC,kBAAmB,EAIxBhjC,KAAKijC,uBAAwB,EAC7BjjC,KAAKkjC,uBAAwB,EAK7BljC,KAAK8gC,YAAa,EAIlB9gC,KAAKmjC,OAAQ,EAKbnjC,KAAKojC,YAAa,EAIlBpjC,KAAKqjC,sBAAuB,EAS5BrjC,KAAKk8B,UAAY,CAAEpuB,EAAG,EAAGC,EAAG,GAI5B/N,KAAKsjC,cAAgB,IAAIv2B,IACzB/M,KAAKujC,iBAAkB,EAEvBvjC,KAAKwjC,iBAAkB,EACvBxjC,KAAKyjC,2BAA4B,EACjCzjC,KAAK0jC,kBAAoB,KACjB1jC,KAAK8gC,aACL9gC,KAAK8gC,YAAa,EAClB9gC,KAAK2jC,sBAQb3jC,KAAK4jC,iBAAmB,KCnJpC,IAAgBC,EDoJA7jC,KAAKyjC,2BAA4B,EAKjCvB,GAAoBC,WAChBD,GAAoBE,qBAChBF,GAAoBG,uBAChB,EACZriC,KAAK8jC,MAAMjqB,QAAQkqB,IACnB/jC,KAAK8jC,MAAMjqB,QAAQmqB,IACnBhkC,KAAK8jC,MAAMjqB,QAAQoqB,IACnBjkC,KAAK8jC,MAAMjqB,QAAQqqB,IChKnBL,EDiKO3B,GChKf32B,OAAO44B,aACP54B,OAAO44B,YAAYC,OAAOP,IDiKtB7jC,KAAKqkC,cAAe,EACpBrkC,KAAKskC,WAAY,EACjBtkC,KAAKukC,kBAAoB,EAKzBvkC,KAAKwkC,YAAc,IAAIz3B,IACvB/M,KAAK+R,aAAeA,EACpB/R,KAAK6d,KAAOnT,EAASA,EAAOmT,MAAQnT,EAAS1K,KAC7CA,KAAKykC,KAAO/5B,EAAS,IAAIA,EAAO+5B,KAAM/5B,GAAU,GAChD1K,KAAK0K,OAASA,EACd1K,KAAK4hC,MAAQl3B,EAASA,EAAOk3B,MAAQ,EAAI,EACzC,IAAK,IAAIhhC,EAAI,EAAGA,EAAIZ,KAAKykC,KAAK9jC,OAAQC,IAClCZ,KAAKykC,KAAK7jC,GAAGyiC,sBAAuB,EAEpCrjC,KAAK6d,OAAS7d,OACdA,KAAK8jC,MAAQ,IAAIjC,GACzB,CACAhnB,gBAAAA,CAAiBnT,EAAMvH,GAInB,OAHKH,KAAKsjC,cAAcp2B,IAAIxF,IACxB1H,KAAKsjC,cAAcn2B,IAAIzF,EAAM,IAAI5H,GAAAA,GAE9BE,KAAKsjC,cAAct2B,IAAItF,GAAMxH,IAAIC,EAC5C,CACAukC,eAAAA,CAAgBh9B,GACZ,MAAMi9B,EAAsB3kC,KAAKsjC,cAAct2B,IAAItF,GAAM,QAAAzG,EAAAC,UAAAP,OADpCikC,EAAI,IAAAxjC,MAAAH,EAAA,EAAAA,EAAA,KAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAJujC,EAAIvjC,EAAA,GAAAH,UAAAG,GAEzBsjC,GAAuBA,EAAoBrkC,UAAUskC,EACzD,CACAC,YAAAA,CAAan9B,GACT,OAAO1H,KAAKsjC,cAAcp2B,IAAIxF,EAClC,CAIA0E,KAAAA,CAAMD,GAAqD,IAA3C40B,EAAa7/B,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,GAAAA,UAAA,GAAGlB,KAAK6d,KAAK0lB,gBACtC,GAAIvjC,KAAKmM,SACL,OExMhB,IAAsBiL,EFyMVpX,KAAKmjC,OEzMK/rB,EFyMgBjL,aExMR24B,YAAkC,QAApB1tB,EAAQoD,QFyMxCxa,KAAKmM,SAAWA,EAChB,MAAM,SAAE7B,EAAQ,OAAErB,EAAM,cAAEwB,GAAkBzK,KAAKgS,QASjD,GARIvH,IAAkBA,EAAcS,SAChCT,EAAc2B,MAAMD,GAExBnM,KAAK6d,KAAKimB,MAAM5jC,IAAIF,MACpBA,KAAK0K,QAAU1K,KAAK0K,OAAOsM,SAAS9W,IAAIF,MACpC+gC,IAAkB93B,GAAUqB,KAC5BtK,KAAK+gC,eAAgB,GAErBwB,EAAsB,CACtB,IAAIwC,EACJ,MAAMC,EAAsBA,IAAOhlC,KAAK6d,KAAKqlB,uBAAwB,EACrEX,EAAqBp2B,EAAU,KAC3BnM,KAAK6d,KAAKqlB,uBAAwB,EAClC6B,GAAeA,IACfA,EGrNpB,SAAevnB,EAAUynB,GACrB,MAAM99B,EAAQ+9B,YAAYC,MACpBC,EAAeziC,IAAmB,IAAlB,UAAE4uB,GAAW5uB,EAC/B,MAAMsmB,EAAUsI,EAAYpqB,EACxB8hB,GAAWgc,KACXze,EAAAA,GAAAA,IAAY4e,GACZ5nB,EAASyL,EAAUgc,KAI3B,OADA9qB,GAAAA,GAAMC,KAAKgrB,GAAc,GAClB,KAAM5e,EAAAA,GAAAA,IAAY4e,EAC7B,CH0MkCzgB,CAAMqgB,EAAqB,KACrCtJ,GAAsBC,yBACtBD,GAAsBC,wBAAyB,EAC/C37B,KAAK8jC,MAAMjqB,QAAQwrB,MAG/B,CACI/6B,GACAtK,KAAK6d,KAAKynB,mBAAmBh7B,EAAUtK,OAGd,IAAzBA,KAAKgS,QAAQxK,SACbiD,IACCH,GAAYrB,IACbjJ,KAAK6a,iBAAiB,YAAatO,IAA+E,IAA9E,MAAEimB,EAAK,iBAAEgJ,EAAgB,yBAAE+J,EAA0Bt8B,OAAQu8B,GAAYj5B,EACzG,GAAIvM,KAAKylC,yBAGL,OAFAzlC,KAAKoT,YAASpL,OACdhI,KAAK0lC,oBAAiB19B,GAI1B,MAAM29B,EAAmB3lC,KAAKgS,QAAQgI,YAClCvP,EAAc2c,wBACdwe,IACE,uBAAEC,EAAsB,0BAAEC,GAA+Br7B,EAAciS,WAKvEqpB,GAAiB/lC,KAAKgmC,eACvBjG,GAAiB//B,KAAKgmC,aAAcR,IACrCD,EAMEU,GAAgCzK,GAAoB+J,EAC1D,GAAIvlC,KAAKgS,QAAQk0B,YACZlmC,KAAK0gC,YAAc1gC,KAAK0gC,WAAWv0B,UACpC85B,GACCzK,IACIuK,IAAkB/lC,KAAKg+B,kBAAoB,CAC5Ch+B,KAAK0gC,aACL1gC,KAAKmhC,aAAenhC,KAAK0gC,WACzB1gC,KAAKmhC,aAAaA,kBAAen5B,GAErChI,KAAKmmC,mBAAmB3T,EAAOyT,GAC/B,MAAMG,GAAgBlgC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACf2iB,GAAmB8c,EAAkB,WAAS,IACjDU,OAAQR,EACRpiB,WAAYqiB,KAEZr7B,EAAc6hB,oBACdtsB,KAAKgS,QAAQk0B,cACbE,EAAiBzhB,MAAQ,EACzByhB,EAAiBh4B,MAAO,GAE5BpO,KAAKm4B,eAAeiO,EACxB,MAOS5K,GACD6J,GAAgBrlC,MAEhBA,KAAKi+B,UAAYj+B,KAAKgS,QAAQme,gBAC9BnwB,KAAKgS,QAAQme,iBAGrBnwB,KAAKgmC,aAAeR,GAGhC,CACAn5B,OAAAA,GACIrM,KAAKgS,QAAQ1H,UAAYtK,KAAKu9B,aAC9Bv9B,KAAK6d,KAAKimB,MAAMvX,OAAOvsB,MACvB,MAAM29B,EAAQ39B,KAAK49B,WACnBD,GAASA,EAAMpR,OAAOvsB,MACtBA,KAAK0K,QAAU1K,KAAK0K,OAAOsM,SAASsH,OAAOte,MAC3CA,KAAKmM,cAAWnE,GAChBwe,EAAAA,GAAAA,IAAYxmB,KAAK4jC,iBACrB,CAEA0C,WAAAA,GACItmC,KAAKijC,uBAAwB,CACjC,CACAsD,aAAAA,GACIvmC,KAAKijC,uBAAwB,CACjC,CACAuD,eAAAA,GACI,OAAOxmC,KAAKijC,uBAAyBjjC,KAAKkjC,qBAC9C,CACAuC,sBAAAA,GACI,OAAQzlC,KAAKu3B,oBACRv3B,KAAK0K,QAAU1K,KAAK0K,OAAO+6B,2BAC5B,CACR,CAEAgB,WAAAA,GACQzmC,KAAKwmC,oBAETxmC,KAAK8gC,YAAa,EAClB9gC,KAAK8jC,OAAS9jC,KAAK8jC,MAAMjqB,QAAQ6sB,IACjC1mC,KAAK4iC,cACT,CACA+D,oBAAAA,GACI,MAAM,cAAEl8B,GAAkBzK,KAAKgS,QAC/B,OAAOvH,GAAiBA,EAAciS,WAAWzK,iBACrD,CACAsrB,UAAAA,GAAyC,IAA9BqJ,IAAqB1lC,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,KAAAA,UAAA,GAE5B,GADAlB,KAAK6d,KAAK0lB,iBAAkB,EACxBvjC,KAAK6d,KAAK2oB,kBAEV,YADAxmC,KAAKgS,QAAQme,gBAAkBnwB,KAAKgS,QAAQme,kBAIhD,IADCnwB,KAAK6d,KAAKijB,YAAc9gC,KAAK6d,KAAK4oB,cAC/BzmC,KAAK+gC,cACL,OACJ/gC,KAAK+gC,eAAgB,EACrB,IAAK,IAAIngC,EAAI,EAAGA,EAAIZ,KAAKykC,KAAK9jC,OAAQC,IAAK,CACvC,MAAMwb,EAAOpc,KAAKykC,KAAK7jC,GACvBwb,EAAKinB,sBAAuB,EAC5BjnB,EAAK4e,aAAa,YACd5e,EAAKpK,QAAQk0B,YACb9pB,EAAKmhB,YAAW,EAExB,CACA,MAAM,SAAEjzB,EAAQ,OAAErB,GAAWjJ,KAAKgS,QAClC,QAAiBhK,IAAbsC,IAA2BrB,EAC3B,OACJ,MAAMgJ,EAAoBjS,KAAK2mC,uBAC/B3mC,KAAK6mC,2BAA6B50B,EAC5BA,EAAkBjS,KAAK+R,aAAc,SACrC/J,EACNhI,KAAK8mC,iBACLF,GAAyB5mC,KAAK0kC,gBAAgB,aAClD,CACAr5B,MAAAA,GACIrL,KAAKwjC,iBAAkB,EAKvB,GAJyBxjC,KAAKwmC,kBAQ1B,OAHAxmC,KAAKumC,gBACLvmC,KAAK2jC,yBACL3jC,KAAK8jC,MAAMjqB,QAAQktB,IAGlB/mC,KAAK8gC,YACN9gC,KAAK8jC,MAAMjqB,QAAQmtB,IAEvBhnC,KAAK8gC,YAAa,EAIlB9gC,KAAK8jC,MAAMjqB,QAAQotB,IAKnBjnC,KAAK8jC,MAAMjqB,QAAQohB,IAKnBj7B,KAAK8jC,MAAMjqB,QAAQqtB,IACnBlnC,KAAK2jC,oBAML,MAAMwB,EAAMD,YAAYC,MACxB3T,GAAAA,GAAUgB,OAAQuI,EAAAA,GAAAA,GAAM,EAAG,IAAO,GAAIoK,EAAM3T,GAAAA,GAAUD,WACtDC,GAAAA,GAAUD,UAAY4T,EACtB3T,GAAAA,GAAU2V,cAAe,EACzBC,GAAAA,GAAM/7B,OAAOg8B,QAAQ7V,GAAAA,IACrB4V,GAAAA,GAAME,UAAUD,QAAQ7V,GAAAA,IACxB4V,GAAAA,GAAM37B,OAAO47B,QAAQ7V,GAAAA,IACrBA,GAAAA,GAAU2V,cAAe,CAC7B,CACAjK,SAAAA,GACSl9B,KAAKwjC,kBACNxjC,KAAKwjC,iBAAkB,EACvBzF,eAAe,IAAM/9B,KAAKqL,UAElC,CACAs4B,iBAAAA,GACI3jC,KAAK8jC,MAAMjqB,QAAQ0tB,IACnBvnC,KAAKwkC,YAAY3qB,QAAQ2tB,GAC7B,CACAC,wBAAAA,GACSznC,KAAKyjC,4BACNzjC,KAAKyjC,2BAA4B,EACjCtpB,GAAAA,GAAMmtB,UAAUtnC,KAAK4jC,kBAAkB,GAAO,GAEtD,CACAxF,yBAAAA,GAMIjkB,GAAAA,GAAMujB,WAAW,KACT19B,KAAK+gC,cACL/gC,KAAK6d,KAAKqf,YAGVl9B,KAAK6d,KAAK6lB,qBAGtB,CAIAoD,cAAAA,IACQ9mC,KAAK4gC,UAAa5gC,KAAKmM,WAE3BnM,KAAK4gC,SAAW5gC,KAAK04B,UACzB,CACAuC,YAAAA,GACI,IAAKj7B,KAAKmM,SACN,OAGJ,GADAnM,KAAKg7B,iBACCh7B,KAAKgS,QAAQ01B,sBAAuB1nC,KAAKi+B,YAC1Cj+B,KAAK+gC,cACN,OASJ,GAAI/gC,KAAK0gC,aAAe1gC,KAAK0gC,WAAWv0B,SACpC,IAAK,IAAIvL,EAAI,EAAGA,EAAIZ,KAAKykC,KAAK9jC,OAAQC,IAAK,CAC1BZ,KAAKykC,KAAK7jC,GAClBo6B,cACT,CAEJ,MAAM2M,EAAa3nC,KAAKiJ,OACxBjJ,KAAKiJ,OAASjJ,KAAK04B,SAAQ,GAC3B14B,KAAK4nC,gBtBxcC,CACd95B,EAFe,CAASmlB,IAAK,EAAGD,IAAK,GAGrCjlB,EAHe,CAASklB,IAAK,EAAGD,IAAK,IsB0c7BhzB,KAAK+gC,eAAgB,EACrB/gC,KAAKm8B,qBAAkBn0B,EACvBhI,KAAK0kC,gBAAgB,UAAW1kC,KAAKiJ,OAAOyuB,WAC5C,MAAM,cAAEjtB,GAAkBzK,KAAKgS,QAC/BvH,GACIA,EAAcnK,OAAO,gBAAiBN,KAAKiJ,OAAOyuB,UAAWiQ,EAAaA,EAAWjQ,eAAY1vB,EACzG,CACAgzB,YAAAA,GAAgC,IAAnB6M,EAAK3mC,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,GAAAA,UAAA,GAAG,UACb4mC,EAAmBljC,QAAQ5E,KAAKgS,QAAQ+1B,cAAgB/nC,KAAKmM,UAC7DnM,KAAKu5B,QACLv5B,KAAKu5B,OAAOqJ,cAAgB5iC,KAAK6d,KAAK+kB,aACtC5iC,KAAKu5B,OAAOsO,QAAUA,IACtBC,GAAmB,GAEnBA,IACA9nC,KAAKu5B,OAAS,CACVqJ,YAAa5iC,KAAK6d,KAAK+kB,YACvBiF,QACAG,OAAQtF,EAAkB1iC,KAAKmM,UAC/ByI,OAAQ6tB,EAAcziC,KAAKmM,WAGvC,CACAw2B,cAAAA,GACI,IAAKA,EACD,OACJ,MAAMsF,EAAmBjoC,KAAK+gC,eAAiB/gC,KAAKqjC,qBAC9C6E,EAAgBloC,KAAKm8B,kBAAoB2D,GAAY9/B,KAAKm8B,iBAC1DlqB,EAAoBjS,KAAK2mC,uBACzBwB,EAAyBl2B,EACzBA,EAAkBjS,KAAK+R,aAAc,SACrC/J,EACAogC,EAA8BD,IAA2BnoC,KAAK6mC,2BAChEoB,IACCC,GACG71B,GAAarS,KAAK+R,eAClBq2B,KACJzF,EAAe3iC,KAAKmM,SAAUg8B,GAC9BnoC,KAAKqjC,sBAAuB,EAC5BrjC,KAAKkgC,iBAEb,CACAxH,OAAAA,GAAgC,IAAxB2P,IAAennC,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,KAAAA,UAAA,GACnB,MAAMonC,EAAUtoC,KAAKw5B,iBACrB,IAAI9B,EAAY13B,KAAKuoC,oBAAoBD,GA+8BrD,IAAkBnT,EAr8BN,OAJIkT,IACA3Q,EAAY13B,KAAKqoC,gBAAgB3Q,IAy8B7C8Q,IADcrT,EAt8BGuC,GAu8BH5pB,GACd06B,GAAUrT,EAAIpnB,GAv8BC,CACH60B,YAAa5iC,KAAK6d,KAAK+kB,YACvB6F,YAAaH,EACb5Q,YACA3lB,aAAc,CAAC,EACflO,OAAQ7D,KAAKyM,GAErB,CACA+sB,cAAAA,GACI,MAAM,cAAE/uB,GAAkBzK,KAAKgS,QAC/B,IAAKvH,EACD,MtB1gBE,CACdqD,EAFe,CAASmlB,IAAK,EAAGD,IAAK,GAGrCjlB,EAHe,CAASklB,IAAK,EAAGD,IAAK,IsB4gB7B,MAAMmC,EAAM1qB,EAAcurB,sBAEpB,OAAEuD,GAAWv5B,KAAK6d,KAKxB,OAJI0b,IACAhE,GAAcJ,EAAIrnB,EAAGyrB,EAAO3kB,OAAO9G,GACnCynB,GAAcJ,EAAIpnB,EAAGwrB,EAAO3kB,OAAO7G,IAEhConB,CACX,CACAoT,mBAAAA,CAAoBpT,GAChB,MAAMuT,EtBrhBA,CACd56B,EAFe,CAASmlB,IAAK,EAAGD,IAAK,GAGrCjlB,EAHe,CAASklB,IAAK,EAAGD,IAAK,IsBuhB7BqM,GAAYqJ,EAAkBvT,GAK9B,IAAK,IAAIv0B,EAAI,EAAGA,EAAIZ,KAAKykC,KAAK9jC,OAAQC,IAAK,CACvC,MAAMwb,EAAOpc,KAAKykC,KAAK7jC,IACjB,OAAE24B,EAAM,QAAEvnB,GAAYoK,EAC5B,GAAIA,IAASpc,KAAK6d,MAAQ0b,GAAUvnB,EAAQ+1B,aAAc,CAKtD,GAAIxO,EAAOyO,OAAQ,CACf3I,GAAYqJ,EAAkBvT,GAC9B,MAAQoE,OAAQoP,GAAe3oC,KAAK6d,KAKhC8qB,IACApT,GAAcmT,EAAiB56B,GAAI66B,EAAW/zB,OAAO9G,GACrDynB,GAAcmT,EAAiB36B,GAAI46B,EAAW/zB,OAAO7G,GAE7D,CACAwnB,GAAcmT,EAAiB56B,EAAGyrB,EAAO3kB,OAAO9G,GAChDynB,GAAcmT,EAAiB36B,EAAGwrB,EAAO3kB,OAAO7G,EACpD,CACJ,CACA,OAAO26B,CACX,CACAE,cAAAA,CAAezT,GAA4B,IAAvB0T,EAAa3nC,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,IAAAA,UAAA,GAC7B,MAAM4nC,EtBtjBA,CACdh7B,EAFe,CAASmlB,IAAK,EAAGD,IAAK,GAGrCjlB,EAHe,CAASklB,IAAK,EAAGD,IAAK,IsBwjB7BqM,GAAYyJ,EAAgB3T,GAC5B,IAAK,IAAIv0B,EAAI,EAAGA,EAAIZ,KAAKykC,KAAK9jC,OAAQC,IAAK,CACvC,MAAMwb,EAAOpc,KAAKykC,KAAK7jC,IAClBioC,GACDzsB,EAAKpK,QAAQ+1B,cACb3rB,EAAKmd,QACLnd,IAASA,EAAKyB,MACdkY,GAAa+S,EAAgB,CACzBh7B,GAAIsO,EAAKmd,OAAO3kB,OAAO9G,EACvBC,GAAIqO,EAAKmd,OAAO3kB,OAAO7G,IAG1BsE,GAAa+J,EAAKrK,eAEvBgkB,GAAa+S,EAAgB1sB,EAAKrK,aACtC,CAIA,OAHIM,GAAarS,KAAK+R,eAClBgkB,GAAa+S,EAAgB9oC,KAAK+R,cAE/B+2B,CACX,CACAT,eAAAA,CAAgBlT,GACZ,MAAM4T,EtB7kBA,CACdj7B,EAFe,CAASmlB,IAAK,EAAGD,IAAK,GAGrCjlB,EAHe,CAASklB,IAAK,EAAGD,IAAK,IsB+kB7BqM,GAAY0J,EAAqB5T,GACjC,IAAK,IAAIv0B,EAAI,EAAGA,EAAIZ,KAAKykC,KAAK9jC,OAAQC,IAAK,CACvC,MAAMwb,EAAOpc,KAAKykC,KAAK7jC,GACvB,IAAKwb,EAAKjQ,SACN,SACJ,IAAKkG,GAAa+J,EAAKrK,cACnB,SACJ4iB,GAASvY,EAAKrK,eAAiBqK,EAAK0qB,iBACpC,MAAMlH,EAAYrL,KAElB8K,GAAYO,EADIxjB,EAAKod,kBAErBmG,GAAoBoJ,EAAqB3sB,EAAKrK,aAAcqK,EAAKwkB,SAAWxkB,EAAKwkB,SAASlJ,eAAY1vB,EAAW43B,EACrH,CAIA,OAHIvtB,GAAarS,KAAK+R,eAClB4tB,GAAoBoJ,EAAqB/oC,KAAK+R,cAE3Cg3B,CACX,CACAC,cAAAA,CAAexW,GACXxyB,KAAKipC,YAAczW,EACnBxyB,KAAK6d,KAAK4pB,2BACVznC,KAAK8iC,mBAAoB,CAC7B,CACA1F,UAAAA,CAAWprB,GACPhS,KAAKgS,SAAO9L,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACLlG,KAAKgS,SACLA,GAAO,IACVgvB,eAAiCh5B,IAAtBgK,EAAQgvB,WAA0BhvB,EAAQgvB,WAE7D,CACA+F,iBAAAA,GACI/mC,KAAKu5B,YAASvxB,EACdhI,KAAKiJ,YAASjB,EACdhI,KAAK4gC,cAAW54B,EAChBhI,KAAK6mC,gCAA6B7+B,EAClChI,KAAKipC,iBAAcjhC,EACnBhI,KAAKoT,YAASpL,EACdhI,KAAK+gC,eAAgB,CACzB,CACAmI,kCAAAA,GACSlpC,KAAKmpC,gBAQNnpC,KAAKmpC,eAAeC,2BACpB5X,GAAAA,GAAUD,WACVvxB,KAAKmpC,eAAenF,oBAAmB,EAE/C,CACAA,kBAAAA,GAA+C,IAA5BqF,EAAkBnoC,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,IAAAA,UAAA,GACjC,IAAIkD,EAMJ,MAAMg8B,EAAOpgC,KAAKspC,UAClBtpC,KAAK8iC,oBAAsB9iC,KAAK8iC,kBAAoB1C,EAAK0C,mBACzD9iC,KAAKgjC,mBAAqBhjC,KAAKgjC,iBAAmB5C,EAAK4C,kBACvDhjC,KAAK+iC,0BAA4B/iC,KAAK+iC,wBAA0B3C,EAAK2C,yBACrE,MAAMwG,EAAW3kC,QAAQ5E,KAAKmhC,eAAiBnhC,OAASogC,EAUxD,KALkBiJ,GACbE,GAAYvpC,KAAK+iC,yBAClB/iC,KAAK8iC,oBACmB,QAAtB1+B,EAAKpE,KAAK0K,cAA2B,IAAPtG,OAAgB,EAASA,EAAG0+B,oBAC5D9iC,KAAKwpC,gCAEL,OACJ,MAAM,OAAEvgC,EAAM,SAAEqB,GAAatK,KAAKgS,QAIlC,GAAKhS,KAAKiJ,SAAYA,GAAUqB,GAAhC,CASA,GAPAtK,KAAKopC,yBAA2B5X,GAAAA,GAAUD,WAOrCvxB,KAAKipC,cAAgBjpC,KAAK0lC,eAAgB,CAE3C,MAAMyD,EAAiBnpC,KAAKypC,6BACxBN,GACAA,EAAelgC,QACY,IAA3BjJ,KAAKukC,mBACLvkC,KAAKmpC,eAAiBA,EACtBnpC,KAAKkpC,qCACLlpC,KAAK0lC,etB/qBP,CACd53B,EAFe,CAASmlB,IAAK,EAAGD,IAAK,GAGrCjlB,EAHe,CAASklB,IAAK,EAAGD,IAAK,IsBirBrBhzB,KAAK0pC,qBtBhrBP,CACd57B,EAFe,CAASmlB,IAAK,EAAGD,IAAK,GAGrCjlB,EAHe,CAASklB,IAAK,EAAGD,IAAK,IsBkrBrBW,GAAqB3zB,KAAK0pC,qBAAsB1pC,KAAKiJ,OAAOyuB,UAAWyR,EAAelgC,OAAOyuB,WAC7F2H,GAAYr/B,KAAK0lC,eAAgB1lC,KAAK0pC,uBAGtC1pC,KAAKmpC,eAAiBnpC,KAAK0lC,oBAAiB19B,CAEpD,CAKA,GAAKhI,KAAK0lC,gBAAmB1lC,KAAKipC,YAAlC,CxB5qBZ,IAAyB71B,EAAQqgB,EAAU/oB,EwBqtB/B,GApCK1K,KAAKoT,SACNpT,KAAKoT,OtBlsBH,CACdtF,EAFe,CAASmlB,IAAK,EAAGD,IAAK,GAGrCjlB,EAHe,CAASklB,IAAK,EAAGD,IAAK,IsBosBzBhzB,KAAK2pC,qBtBnsBH,CACd77B,EAFe,CAASmlB,IAAK,EAAGD,IAAK,GAGrCjlB,EAHe,CAASklB,IAAK,EAAGD,IAAK,KsBysBzBhzB,KAAK0lC,gBACL1lC,KAAK0pC,sBACL1pC,KAAKmpC,gBACLnpC,KAAKmpC,eAAe/1B,QACpBpT,KAAKkpC,qCxB5rBI91B,EwB6rBOpT,KAAKoT,OxB7rBJqgB,EwB6rBYzzB,KAAK0lC,exB7rBPh7B,EwB6rBuB1K,KAAKmpC,eAAe/1B,OxB5rBlFogB,GAAiBpgB,EAAOtF,EAAG2lB,EAAS3lB,EAAGpD,EAAOoD,GAC9C0lB,GAAiBpgB,EAAOrF,EAAG0lB,EAAS1lB,EAAGrD,EAAOqD,IwBgsB7B/N,KAAKipC,aACNrkC,QAAQ5E,KAAKmhC,cAEbnhC,KAAKoT,OAASpT,KAAK4oC,eAAe5oC,KAAKiJ,OAAOyuB,WAG9C2H,GAAYr/B,KAAKoT,OAAQpT,KAAKiJ,OAAOyuB,WAEzCxC,GAAcl1B,KAAKoT,OAAQpT,KAAKipC,cAMhC5J,GAAYr/B,KAAKoT,OAAQpT,KAAKiJ,OAAOyuB,WAKrC13B,KAAKwpC,+BAAgC,CACrCxpC,KAAKwpC,gCAAiC,EACtC,MAAML,EAAiBnpC,KAAKypC,6BACxBN,GACAvkC,QAAQukC,EAAehI,gBACnBv8B,QAAQ5E,KAAKmhC,gBAChBgI,EAAen3B,QAAQ+1B,cACxBoB,EAAe/1B,QACY,IAA3BpT,KAAKukC,mBACLvkC,KAAKmpC,eAAiBA,EACtBnpC,KAAKkpC,qCACLlpC,KAAK0lC,etBhvBP,CACd53B,EAFe,CAASmlB,IAAK,EAAGD,IAAK,GAGrCjlB,EAHe,CAASklB,IAAK,EAAGD,IAAK,IsBkvBrBhzB,KAAK0pC,qBtBjvBP,CACd57B,EAFe,CAASmlB,IAAK,EAAGD,IAAK,GAGrCjlB,EAHe,CAASklB,IAAK,EAAGD,IAAK,IsBmvBrBW,GAAqB3zB,KAAK0pC,qBAAsB1pC,KAAKoT,OAAQ+1B,EAAe/1B,QAC5EisB,GAAYr/B,KAAK0lC,eAAgB1lC,KAAK0pC,uBAGtC1pC,KAAKmpC,eAAiBnpC,KAAK0lC,oBAAiB19B,CAEpD,CAIAk6B,GAAoBE,sBA/DV,CA9BA,CA8Fd,CACAqH,0BAAAA,GACI,GAAKzpC,KAAK0K,SACNiqB,GAAS30B,KAAK0K,OAAOqH,gBACrB6iB,GAAe50B,KAAK0K,OAAOqH,cAG/B,OAAI/R,KAAK0K,OAAOk/B,eACL5pC,KAAK0K,OAGL1K,KAAK0K,OAAO++B,4BAE3B,CACAG,YAAAA,GACI,OAAOhlC,SAAS5E,KAAK0lC,gBACjB1lC,KAAKipC,aACLjpC,KAAKgS,QAAQk0B,aACblmC,KAAKiJ,OACb,CACAg7B,cAAAA,GACI,IAAI7/B,EACJ,MAAMg8B,EAAOpgC,KAAKspC,UACZC,EAAW3kC,QAAQ5E,KAAKmhC,eAAiBnhC,OAASogC,EACxD,IAAI/T,GAAU,EAuBd,IAlBIrsB,KAAK8iC,oBAA6C,QAAtB1+B,EAAKpE,KAAK0K,cAA2B,IAAPtG,OAAgB,EAASA,EAAG0+B,sBACtFzW,GAAU,GAMVkd,IACCvpC,KAAK+iC,yBAA2B/iC,KAAKgjC,oBACtC3W,GAAU,GAMVrsB,KAAKopC,2BAA6B5X,GAAAA,GAAUD,YAC5ClF,GAAU,GAEVA,EACA,OACJ,MAAM,OAAEpjB,EAAM,SAAEqB,GAAatK,KAAKgS,QAWlC,GANAhS,KAAK6iC,gBAAkBj+B,QAAS5E,KAAK0K,QAAU1K,KAAK0K,OAAOm4B,iBACvD7iC,KAAKg+B,kBACLh+B,KAAK6pC,kBACJ7pC,KAAK6iC,kBACN7iC,KAAKipC,YAAcjpC,KAAK0lC,oBAAiB19B,IAExChI,KAAKiJ,SAAYA,IAAUqB,EAC5B,OAKJ+0B,GAAYr/B,KAAK4nC,gBAAiB5nC,KAAKiJ,OAAOyuB,WAI9C,MAAMoS,EAAiB9pC,KAAKk8B,UAAUpuB,EAChCi8B,EAAiB/pC,KAAKk8B,UAAUnuB,GlBvyBlD,SAAyBonB,EAAK+G,EAAW8N,GAAsC,IAA5BC,EAAkB/oC,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,IAAAA,UAAA,GACjE,MAAMgpC,EAAaF,EAASrpC,OAC5B,IAAKupC,EACD,OAGJ,IAAI9tB,EACAoW,EAFJ0J,EAAUpuB,EAAIouB,EAAUnuB,EAAI,EAG5B,IAAK,IAAInN,EAAI,EAAGA,EAAIspC,EAAYtpC,IAAK,CACjCwb,EAAO4tB,EAASppC,GAChB4xB,EAAQpW,EAAK+f,gBAKb,MAAMhwB,EAAWiQ,EAAKjQ,SAClBA,GACAA,EAAS+F,OACkB,aAA3B/F,EAAS+F,MAAMi4B,UAGfF,GACA7tB,EAAKpK,QAAQ+1B,cACb3rB,EAAKmd,QACLnd,IAASA,EAAKyB,MACdkY,GAAaZ,EAAK,CACdrnB,GAAIsO,EAAKmd,OAAO3kB,OAAO9G,EACvBC,GAAIqO,EAAKmd,OAAO3kB,OAAO7G,IAG3BykB,IAEA0J,EAAUpuB,GAAK0kB,EAAM1kB,EAAE2C,MACvByrB,EAAUnuB,GAAKykB,EAAMzkB,EAAE0C,MAEvBykB,GAAcC,EAAK3C,IAEnByX,GAAsB53B,GAAa+J,EAAKrK,eACxCgkB,GAAaZ,EAAK/Y,EAAKrK,cAE/B,CAKAmqB,EAAUpuB,EAAIsnB,GAAc8G,EAAUpuB,GACtCouB,EAAUnuB,EAAIqnB,GAAc8G,EAAUnuB,EAC1C,CkB6vBYq8B,CAAgBpqC,KAAK4nC,gBAAiB5nC,KAAKk8B,UAAWl8B,KAAKykC,KAAM8E,IAK7DnJ,EAAKn3B,QACJm3B,EAAKhtB,QACgB,IAArBpT,KAAKk8B,UAAUpuB,GAAgC,IAArB9N,KAAKk8B,UAAUnuB,IAC1CqyB,EAAKhtB,OAASgtB,EAAKn3B,OAAOyuB,WAE9B,MAAM,OAAEtkB,GAAWgtB,EACnB,IAAKhtB,EAWD,YALIpT,KAAKqqC,sBACLrqC,KAAKm8B,gBtBh2BL,CAChBruB,EAPoB,CACpBwlB,UAAW,EACX7iB,MAAO,EACPkE,OAAQ,EACR0e,YAAa,GAIbtlB,EARoB,CACpBulB,UAAW,EACX7iB,MAAO,EACPkE,OAAQ,EACR0e,YAAa,IsBm2BGrzB,KAAKqqC,oBAAsB,OAC3BrqC,KAAKkgC,mBAIRlgC,KAAKm8B,kBACNn8B,KAAKm8B,gBtBv2BD,CAChBruB,EAPoB,CACpBwlB,UAAW,EACX7iB,MAAO,EACPkE,OAAQ,EACR0e,YAAa,GAIbtlB,EARoB,CACpBulB,UAAW,EACX7iB,MAAO,EACPkE,OAAQ,EACR0e,YAAa,IsB02BDrzB,KAAKsqC,6BtBx2BD,CAChBx8B,EAPoB,CACpBwlB,UAAW,EACX7iB,MAAO,EACPkE,OAAQ,EACR0e,YAAa,GAIbtlB,EARoB,CACpBulB,UAAW,EACX7iB,MAAO,EACPkE,OAAQ,EACR0e,YAAa,KsB42BL,MAAMkX,EAA0BvqC,KAAKqqC,oBAUrC9W,GAAavzB,KAAKm8B,gBAAiBn8B,KAAK4nC,gBAAiBx0B,EAAQpT,KAAK+R,cACtE/R,KAAKqqC,oBAAsBhJ,GAAyBrhC,KAAKm8B,gBAAiBn8B,KAAKk8B,WAC3El8B,KAAKqqC,sBAAwBE,GAC7BvqC,KAAKk8B,UAAUpuB,IAAMg8B,GACrB9pC,KAAKk8B,UAAUnuB,IAAMg8B,IACrB/pC,KAAKqkC,cAAe,EACpBrkC,KAAKkgC,iBACLlgC,KAAK0kC,gBAAgB,mBAAoBtxB,IAK7C8uB,GAAoBG,wBACxB,CACApB,IAAAA,GACIjhC,KAAKskC,WAAY,CAErB,CACA7D,IAAAA,GACIzgC,KAAKskC,WAAY,CAErB,CACApE,cAAAA,GAAiC,IAAlBsK,IAAStpC,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,KAAAA,UAAA,GAEpB,GADAlB,KAAKgS,QAAQkuB,gBAAkBlgC,KAAKgS,QAAQkuB,iBACxCsK,EAAW,CACX,MAAM7M,EAAQ39B,KAAK49B,WACnBD,GAASA,EAAMuC,gBACnB,CACIlgC,KAAKmhC,eAAiBnhC,KAAKmhC,aAAah1B,WACxCnM,KAAKmhC,kBAAen5B,EAE5B,CACAm+B,kBAAAA,CAAmB3T,GAA6C,IAAtCyT,EAA4B/kC,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,IAAAA,UAAA,GAClD,MAAM0/B,EAAW5gC,KAAK4gC,SAChB6J,EAAuB7J,EACvBA,EAAS7uB,aACT,CAAC,EACD24B,GAAWxkC,EAAAA,EAAAA,GAAA,GAAQlG,KAAK+R,cACxBk3B,EtB15BE,CAChBn7B,EAPoB,CACpBwlB,UAAW,EACX7iB,MAAO,EACPkE,OAAQ,EACR0e,YAAa,GAIbtlB,EARoB,CACpBulB,UAAW,EACX7iB,MAAO,EACPkE,OAAQ,EACR0e,YAAa,IsB65BArzB,KAAKmpC,gBACLnpC,KAAKmpC,eAAen3B,QAAQk0B,aAC7BlmC,KAAK0lC,eAAiB1lC,KAAK0pC,0BAAuB1hC,GAEtDhI,KAAKwpC,gCAAkCvD,EACvC,MAAM0E,EtB35BA,CACd78B,EAFe,CAASmlB,IAAK,EAAGD,IAAK,GAGrCjlB,EAHe,CAASklB,IAAK,EAAGD,IAAK,IsB+5BvB4X,GAFiBhK,EAAWA,EAAS/8B,YAASmE,MAC/BhI,KAAKiJ,OAASjJ,KAAKiJ,OAAOpF,YAASmE,GAElD21B,EAAQ39B,KAAK49B,WACbiN,GAAgBlN,GAASA,EAAME,QAAQl9B,QAAU,EACjDmqC,EAAyBlmC,QAAQgmC,IAClCC,IAC0B,IAA3B7qC,KAAKgS,QAAQgvB,YACZhhC,KAAKykC,KAAKh9B,KAAKsjC,KAEpB,IAAIC,EADJhrC,KAAKukC,kBAAoB,EAEzBvkC,KAAKirC,eAAkBtQ,IACnB,MAAMG,EAAWH,EAAS,IL36B1C,IAAmBp6B,EAAGC,EK66CNuD,EAAQqlB,EAAM8hB,EAAIxpC,EAjgBlBypC,GAAalC,EAAYn7B,EAAG0kB,EAAM1kB,EAAGgtB,GACrCqQ,GAAalC,EAAYl7B,EAAGykB,EAAMzkB,EAAG+sB,GACrC96B,KAAKgpC,eAAeC,GAChBjpC,KAAK0lC,gBACL1lC,KAAK0pC,sBACL1pC,KAAKiJ,QACLjJ,KAAKmpC,gBACLnpC,KAAKmpC,eAAelgC,SACpB0qB,GAAqBgX,EAAgB3qC,KAAKiJ,OAAOyuB,UAAW13B,KAAKmpC,eAAelgC,OAAOyuB,WAyf3F3zB,EAxfW/D,KAAK0lC,eAwfRtc,EAxfwBppB,KAAK0pC,qBAwfvBwB,EAxf6CP,EAwfzCjpC,EAxfyDo5B,EAyfvFsQ,GAAQrnC,EAAO+J,EAAGsb,EAAKtb,EAAGo9B,EAAGp9B,EAAGpM,GAChC0pC,GAAQrnC,EAAOgK,EAAGqb,EAAKrb,EAAGm9B,EAAGn9B,EAAGrM,GArfZspC,IL17BLzqC,EK27BeP,KAAK0lC,eL37BjBllC,EK27BiCwqC,EL17B3CzqC,EAAEuN,EAAEmlB,MAAQzyB,EAAEsN,EAAEmlB,KACpB1yB,EAAEuN,EAAEklB,MAAQxyB,EAAEsN,EAAEklB,KAChBzyB,EAAEwN,EAAEklB,MAAQzyB,EAAEuN,EAAEklB,KAChB1yB,EAAEwN,EAAEilB,MAAQxyB,EAAEuN,EAAEilB,OKw7BAhzB,KAAK8iC,mBAAoB,GAExBkI,IACDA,EtB57BN,CACdl9B,EAFe,CAASmlB,IAAK,EAAGD,IAAK,GAGrCjlB,EAHe,CAASklB,IAAK,EAAGD,IAAK,KsB87BrBqM,GAAY2L,EAAoBhrC,KAAK0lC,iBAErCkF,IACA5qC,KAAK6gC,gBAAkB6J,ERj8B3C,SAAmBt3B,EAAQi4B,EAAQjL,EAAMtF,EAAUgQ,EAAwBD,GACnEC,GACA13B,EAAO/B,SAAUwH,EAAAA,GAAAA,GAAI,OAEJ7Q,IAAjBo4B,EAAK/uB,QAAwB+uB,EAAK/uB,QAAU,EAAG2tB,GAAgBlE,IAC/D1nB,EAAOk4B,aAAczyB,EAAAA,GAAAA,QAAuB7Q,IAAnBqjC,EAAOh6B,QAAwBg6B,EAAOh6B,QAAU,EAAG,EAAG6tB,GAAiBpE,KAE3F+P,IACLz3B,EAAO/B,SAAUwH,EAAAA,GAAAA,QAAuB7Q,IAAnBqjC,EAAOh6B,QAAwBg6B,EAAOh6B,QAAU,OAAoBrJ,IAAjBo4B,EAAK/uB,QAAwB+uB,EAAK/uB,QAAU,EAAGypB,IAK3H,IAAK,IAAIl6B,EAAI,EAAGA,EAAI+9B,GAAY/9B,IAAK,CACjC,MAAM2qC,EAAc,SAAH3lC,OAAY84B,GAAQ99B,GAAE,UACvC,IAAI4qC,EAAe1M,GAAUuM,EAAQE,GACjCE,EAAa3M,GAAUsB,EAAMmL,QACZvjC,IAAjBwjC,QAA6CxjC,IAAfyjC,IAElCD,IAAiBA,EAAe,GAChCC,IAAeA,EAAa,GACI,IAAjBD,GACI,IAAfC,GACA5M,GAAK2M,KAAkB3M,GAAK4M,IAE5Br4B,EAAOm4B,GAAe/rC,KAAKwzB,KAAIna,EAAAA,GAAAA,GAAI+lB,GAAS4M,GAAe5M,GAAS6M,GAAa3Q,GAAW,IACxFx1B,EAAAA,GAAQnB,KAAKsnC,IAAenmC,EAAAA,GAAQnB,KAAKqnC,MACzCp4B,EAAOm4B,IAAgB,MAI3Bn4B,EAAOm4B,GAAeE,EAE9B,EAIIJ,EAAOh7B,QAAU+vB,EAAK/vB,UACtB+C,EAAO/C,QAASwI,EAAAA,GAAAA,GAAIwyB,EAAOh7B,QAAU,EAAG+vB,EAAK/vB,QAAU,EAAGyqB,GAElE,CQ05BoB4Q,CAAUhB,EAAaD,EAAsBzqC,KAAK+R,aAAc+oB,EAAUgQ,EAAwBD,IAEtG7qC,KAAK6d,KAAK4pB,2BACVznC,KAAKkgC,iBACLlgC,KAAKukC,kBAAoBzJ,GAE7B96B,KAAKirC,eAAejrC,KAAKgS,QAAQk0B,WAAa,IAAO,EACzD,CACA/N,cAAAA,CAAenmB,GACXhS,KAAK0kC,gBAAgB,kBACrB1kC,KAAKg+B,kBAAoBh+B,KAAKg+B,iBAAiBtX,OAC3C1mB,KAAKmhC,cAAgBnhC,KAAKmhC,aAAanD,kBACvCh+B,KAAKmhC,aAAanD,iBAAiBtX,OAEnC1mB,KAAK6pC,oBACLrjB,EAAAA,GAAAA,IAAYxmB,KAAK6pC,kBACjB7pC,KAAK6pC,sBAAmB7hC,GAO5BhI,KAAK6pC,iBAAmB1vB,GAAAA,GAAM9O,OAAO,KACjCqwB,GAAsBC,wBAAyB,EAC/C37B,KAAKg+B,iBIj+BrB,SAA4B56B,EAAOghB,EAAWpS,GAC1C,MAAM25B,GAAgBhnC,EAAAA,EAAAA,GAAcvB,GAASA,GAAQ+nB,EAAAA,GAAAA,IAAY/nB,GAEjE,OADAuoC,EAAcxkC,MAAM4hB,GAAmB,GAAI4iB,EAAevnB,EAAWpS,IAC9D25B,EAAcljC,SACzB,CJ69BwCmjC,CAAmB,EAr8BnC,KAq8BqD1lC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACtD8L,GAAO,IACVwR,SAAWmX,IACP36B,KAAKirC,eAAetQ,GACpB3oB,EAAQwR,UAAYxR,EAAQwR,SAASmX,IAEzClX,WAAYA,KACRzR,EAAQyR,YAAczR,EAAQyR,aAC9BzjB,KAAK6rC,wBAGT7rC,KAAKmhC,eACLnhC,KAAKmhC,aAAanD,iBAAmBh+B,KAAKg+B,kBAE9Ch+B,KAAK6pC,sBAAmB7hC,GAEhC,CACA6jC,iBAAAA,GACQ7rC,KAAKmhC,eACLnhC,KAAKmhC,aAAanD,sBAAmBh2B,EACrChI,KAAKmhC,aAAaR,qBAAkB34B,GAExC,MAAM21B,EAAQ39B,KAAK49B,WACnBD,GAASA,EAAMuD,wBACflhC,KAAKmhC,aACDnhC,KAAKg+B,iBACDh+B,KAAK6gC,qBACD74B,EACZhI,KAAK0kC,gBAAgB,oBACzB,CACAW,eAAAA,GACQrlC,KAAKg+B,mBACLh+B,KAAKirC,gBAAkBjrC,KAAKirC,eAr+BpB,KAs+BRjrC,KAAKg+B,iBAAiBtX,QAE1B1mB,KAAK6rC,mBACT,CACAC,uBAAAA,GACI,MAAM1L,EAAOpgC,KAAKspC,UAClB,IAAI,qBAAEK,EAAoB,OAAEv2B,EAAM,OAAEnK,EAAM,aAAE8I,GAAiBquB,EAC7D,GAAKuJ,GAAyBv2B,GAAWnK,EAAzC,CAOA,GAAIjJ,OAASogC,GACTpgC,KAAKiJ,QACLA,GACA8iC,GAA0B/rC,KAAKgS,QAAQg6B,cAAehsC,KAAKiJ,OAAOyuB,UAAWzuB,EAAOyuB,WAAY,CAChGtkB,EAASpT,KAAKoT,QtB7gCZ,CACdtF,EAFe,CAASmlB,IAAK,EAAGD,IAAK,GAGrCjlB,EAHe,CAASklB,IAAK,EAAGD,IAAK,IsB+gCzB,MAAMiZ,EAAUnZ,GAAW9yB,KAAKiJ,OAAOyuB,UAAU5pB,GACjDsF,EAAOtF,EAAEmlB,IAAMmN,EAAKhtB,OAAOtF,EAAEmlB,IAC7B7f,EAAOtF,EAAEklB,IAAM5f,EAAOtF,EAAEmlB,IAAMgZ,EAC9B,MAAMC,EAAUpZ,GAAW9yB,KAAKiJ,OAAOyuB,UAAU3pB,GACjDqF,EAAOrF,EAAEklB,IAAMmN,EAAKhtB,OAAOrF,EAAEklB,IAC7B7f,EAAOrF,EAAEilB,IAAM5f,EAAOrF,EAAEklB,IAAMiZ,CAClC,CACA7M,GAAYsK,EAAsBv2B,GAMlC2iB,GAAa4T,EAAsB53B,GAOnCwhB,GAAavzB,KAAKsqC,6BAA8BtqC,KAAK4nC,gBAAiB+B,EAAsB53B,EA/BlF,CAgCd,CACAuzB,kBAAAA,CAAmBh7B,EAAU8R,GACpBpc,KAAKwkC,YAAYt3B,IAAI5C,IACtBtK,KAAKwkC,YAAYr3B,IAAI7C,EAAU,IAAI21B,IAEzBjgC,KAAKwkC,YAAYx3B,IAAI1C,GAC7BpK,IAAIkc,GACV,MAAMpD,EAASoD,EAAKpK,QAAQm6B,uBAC5B/vB,EAAKohB,QAAQ,CACTxjB,WAAYhB,EAASA,EAAOgB,gBAAahS,EACzCw4B,sBAAuBxnB,GAAUA,EAAOozB,4BAClCpzB,EAAOozB,4BAA4BhwB,QACnCpU,GAEd,CACAi2B,MAAAA,GACI,MAAMN,EAAQ39B,KAAK49B,WACnB,OAAOD,GAAQA,EAAMyC,OAASpgC,IAClC,CACAspC,OAAAA,GACI,IAAIllC,EACJ,MAAM,SAAEkG,GAAatK,KAAKgS,QAC1B,OAAO1H,IAAuC,QAA1BlG,EAAKpE,KAAK49B,kBAA+B,IAAPx5B,OAAgB,EAASA,EAAGg8B,OAAgBpgC,IACtG,CACAqsC,WAAAA,GACI,IAAIjoC,EACJ,MAAM,SAAEkG,GAAatK,KAAKgS,QAC1B,OAAO1H,EAAsC,QAA1BlG,EAAKpE,KAAK49B,kBAA+B,IAAPx5B,OAAgB,EAASA,EAAG+7B,cAAWn4B,CAChG,CACA41B,QAAAA,GACI,MAAM,SAAEtzB,GAAatK,KAAKgS,QAC1B,GAAI1H,EACA,OAAOtK,KAAK6d,KAAK2mB,YAAYx3B,IAAI1C,EACzC,CACAkzB,OAAAA,GAAiE,IAAzD,WAAE4F,EAAU,WAAEppB,EAAU,sBAAEwmB,GAAwBt/B,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC1D,MAAMy8B,EAAQ39B,KAAK49B,WACfD,GACAA,EAAMH,QAAQx9B,KAAMwgC,GACpB4C,IACApjC,KAAKm8B,qBAAkBn0B,EACvBhI,KAAKojC,YAAa,GAElBppB,GACAha,KAAKo9B,WAAW,CAAEpjB,cAC1B,CACAyjB,QAAAA,GACI,MAAME,EAAQ39B,KAAK49B,WACnB,QAAID,GACOA,EAAMF,SAASz9B,KAK9B,CACA0mC,aAAAA,GACI,MAAM,cAAEj8B,GAAkBzK,KAAKgS,QAC/B,IAAKvH,EACD,OAEJ,IAAI6hC,GAAY,EAKhB,MAAM,aAAEv6B,GAAiBtH,EAQzB,IAPIsH,EAAa1B,QACb0B,EAAazB,SACbyB,EAAaxB,SACbwB,EAAavB,WACb87B,GAAY,IAGXA,EACD,OACJ,MAAMC,EAAc,CAAC,EAErB,IAAK,IAAI3rC,EAAI,EAAGA,EAAImhC,GAAcphC,OAAQC,IAAK,CAC3C,MAAMuI,EAAM,SAAW44B,GAAcnhC,GAEjCmR,EAAa5I,KACbojC,EAAYpjC,GAAO4I,EAAa5I,GAChCsB,EAAc+hC,eAAerjC,EAAK,GAE1C,CAGAsB,EAAcgB,SAEd,IAAK,MAAMtC,KAAOojC,EACd9hC,EAAc+hC,eAAerjC,EAAKojC,EAAYpjC,IAIlDsB,EAAcy1B,gBAClB,CACA3oB,mBAAAA,CAAoBF,GAChB,IAAIjT,EAAIC,EACR,IAAKrE,KAAKmM,UAAYnM,KAAKmjC,MACvB,OACJ,IAAKnjC,KAAKskC,UACN,OAAOtC,GAEX,MAAMyK,EAAS,CACXxK,WAAY,IAEVhwB,EAAoBjS,KAAK2mC,uBAC/B,GAAI3mC,KAAKojC,WAQL,OAPApjC,KAAKojC,YAAa,EAClBqJ,EAAOp7B,QAAU,GACjBo7B,EAAOC,cACH/zB,GAAiC,OAAdtB,QAAoC,IAAdA,OAAuB,EAASA,EAAUq1B,gBAAkB,GACzGD,EAAOzoC,UAAYiO,EACbA,EAAkBjS,KAAK+R,aAAc,IACrC,OACC06B,EAEX,MAAMrM,EAAOpgC,KAAKspC,UAClB,IAAKtpC,KAAKm8B,kBAAoBn8B,KAAKiJ,SAAWm3B,EAAKhtB,OAAQ,CACvD,MAAMu5B,EAAc,CAAC,EAerB,OAdI3sC,KAAKgS,QAAQ1H,WACbqiC,EAAYt7B,aACsBrJ,IAA9BhI,KAAK+R,aAAaV,QACZrR,KAAK+R,aAAaV,QAClB,EACVs7B,EAAYD,cACR/zB,GAAiC,OAAdtB,QAAoC,IAAdA,OAAuB,EAASA,EAAUq1B,gBAAkB,IAEzG1sC,KAAKqkC,eAAiBhyB,GAAarS,KAAK+R,gBACxC46B,EAAY3oC,UAAYiO,EAClBA,EAAkB,CAAC,EAAG,IACtB,OACNjS,KAAKqkC,cAAe,GAEjBsI,CACX,CACA,MAAMC,EAAiBxM,EAAKS,iBAAmBT,EAAKruB,aACpD/R,KAAK8rC,0BACLW,EAAOzoC,UAAYq9B,GAAyBrhC,KAAKsqC,6BAA8BtqC,KAAKk8B,UAAW0Q,GAC3F36B,IACAw6B,EAAOzoC,UAAYiO,EAAkB26B,EAAgBH,EAAOzoC,YAEhE,MAAM,EAAE8J,EAAC,EAAEC,GAAM/N,KAAKm8B,gBACtBsQ,EAAOr6B,gBAAkB,GAAHxM,OAAiB,IAAXkI,EAAE6G,OAAY,MAAA/O,OAAgB,IAAXmI,EAAE4G,OAAY,OACzDyrB,EAAKS,gBAKL4L,EAAOp7B,QACH+uB,IAASpgC,KACiG,QAAnGqE,EAAuC,QAAjCD,EAAKwoC,EAAev7B,eAA4B,IAAPjN,EAAgBA,EAAKpE,KAAK+R,aAAaV,eAA4B,IAAPhN,EAAgBA,EAAK,EACjIrE,KAAK2gC,gBACD3gC,KAAK+R,aAAaV,QAClBu7B,EAAetB,YAO7BmB,EAAOp7B,QACH+uB,IAASpgC,UACwBgI,IAA3B4kC,EAAev7B,QACXu7B,EAAev7B,QACf,QAC2BrJ,IAA/B4kC,EAAetB,YACXsB,EAAetB,YACf,EAKlB,IAAK,MAAMniC,KAAOoE,EAAiB,CAC/B,QAA4BvF,IAAxB4kC,EAAezjC,GACf,SACJ,MAAM,QAAE6yB,EAAO,QAAEwC,GAAYjxB,EAAgBpE,GAOvC0jC,EAAiC,SAArBJ,EAAOzoC,UACnB4oC,EAAezjC,GACf6yB,EAAQ4Q,EAAezjC,GAAMi3B,GACnC,GAAI5B,EAAS,CACT,MAAMsO,EAAMtO,EAAQ79B,OACpB,IAAK,IAAIC,EAAI,EAAGA,EAAIksC,EAAKlsC,IACrB6rC,EAAOjO,EAAQ59B,IAAMisC,CAE7B,MAEIJ,EAAOtjC,GAAO0jC,CAEtB,CAYA,OANI7sC,KAAKgS,QAAQ1H,WACbmiC,EAAOC,cACHtM,IAASpgC,KACH2Y,GAAiC,OAAdtB,QAAoC,IAAdA,OAAuB,EAASA,EAAUq1B,gBAAkB,GACrG,QAEPD,CACX,CACAlF,aAAAA,GACIvnC,KAAK0gC,WAAa1gC,KAAK4gC,cAAW54B,CACtC,CAEA+kC,SAAAA,GACI/sC,KAAK6d,KAAKimB,MAAMjqB,QAASuC,IAAW,IAAIhY,EAAI,OAAwC,QAAhCA,EAAKgY,EAAK4hB,wBAAqC,IAAP55B,OAAgB,EAASA,EAAGsiB,SACxH1mB,KAAK6d,KAAKimB,MAAMjqB,QAAQktB,IACxB/mC,KAAK6d,KAAK2mB,YAAY1jC,OAC1B,EAER,CACA,SAASm6B,GAAa7e,GAClBA,EAAK6e,cACT,CACA,SAASiM,GAAmB9qB,GACxB,IAAIhY,EACJ,MAAMw8B,GAAuC,QAA1Bx8B,EAAKgY,EAAKskB,kBAA+B,IAAPt8B,OAAgB,EAASA,EAAGw8B,WAAaxkB,EAAKwkB,SACnG,GAAIxkB,EAAK6hB,UACL7hB,EAAKnT,QACL23B,GACAxkB,EAAKyoB,aAAa,aAAc,CAChC,MAAQnN,UAAWzuB,EAAQw/B,YAAauE,GAAmB5wB,EAAKnT,QAC1D,cAAE+iC,GAAkB5vB,EAAKpK,QACzBu3B,EAAW3I,EAAS/8B,SAAWuY,EAAKnT,OAAOpF,OAG3B,SAAlBmoC,EACAxX,GAAUzB,IACN,MAAMka,EAAe1D,EACf3I,EAAS6H,YAAY1V,GACrB6N,EAASlJ,UAAU3E,GACnBpyB,EAASmyB,GAAWma,GAC1BA,EAAaha,IAAMhqB,EAAO8pB,GAAME,IAChCga,EAAaja,IAAMia,EAAaha,IAAMtyB,IAGrCorC,GAA0BC,EAAepL,EAASlJ,UAAWzuB,IAClEurB,GAAUzB,IACN,MAAMka,EAAe1D,EACf3I,EAAS6H,YAAY1V,GACrB6N,EAASlJ,UAAU3E,GACnBpyB,EAASmyB,GAAW7pB,EAAO8pB,IACjCka,EAAaja,IAAMia,EAAaha,IAAMtyB,EAIlCyb,EAAKspB,iBAAmBtpB,EAAK4hB,mBAC7B5hB,EAAK0mB,mBAAoB,EACzB1mB,EAAKspB,eAAe3S,GAAMC,IACtB5W,EAAKspB,eAAe3S,GAAME,IAAMtyB,KAIhD,MAAMusC,EtB7yCM,CAChBp/B,EAPoB,CACpBwlB,UAAW,EACX7iB,MAAO,EACPkE,OAAQ,EACR0e,YAAa,GAIbtlB,EARoB,CACpBulB,UAAW,EACX7iB,MAAO,EACPkE,OAAQ,EACR0e,YAAa,IsBgzCTE,GAAa2Z,EAAajkC,EAAQ23B,EAASlJ,WAC3C,MAAMyV,EtB/yCM,CAChBr/B,EAPoB,CACpBwlB,UAAW,EACX7iB,MAAO,EACPkE,OAAQ,EACR0e,YAAa,GAIbtlB,EARoB,CACpBulB,UAAW,EACX7iB,MAAO,EACPkE,OAAQ,EACR0e,YAAa,IsBkzCLkW,EACAhW,GAAa4Z,EAAa/wB,EAAKwsB,eAAeoE,GAAgB,GAAOpM,EAAS6H,aAG9ElV,GAAa4Z,EAAalkC,EAAQ23B,EAASlJ,WAE/C,MAAM8D,GAAoBsE,GAAYoN,GACtC,IAAI3H,GAA2B,EAC/B,IAAKnpB,EAAKskB,WAAY,CAClB,MAAMyI,EAAiB/sB,EAAKqtB,6BAK5B,GAAIN,IAAmBA,EAAezI,WAAY,CAC9C,MAAQE,SAAUwM,EAAgBnkC,OAAQokC,GAAiBlE,EAC3D,GAAIiE,GAAkBC,EAAc,CAChC,MAAMC,EtB5zCR,CACdx/B,EAFe,CAASmlB,IAAK,EAAGD,IAAK,GAGrCjlB,EAHe,CAASklB,IAAK,EAAGD,IAAK,IsB8zCrBW,GAAqB2Z,EAAkB1M,EAASlJ,UAAW0V,EAAe1V,WAC1E,MAAMiT,EtB9zCR,CACd78B,EAFe,CAASmlB,IAAK,EAAGD,IAAK,GAGrCjlB,EAHe,CAASklB,IAAK,EAAGD,IAAK,IsBg0CrBW,GAAqBgX,EAAgB1hC,EAAQokC,EAAa3V,WACrDqI,GAAiBuN,EAAkB3C,KACpCpF,GAA2B,GAE3B4D,EAAen3B,QAAQk0B,aACvB9pB,EAAKspB,eAAiBiF,EACtBvuB,EAAKstB,qBAAuB4D,EAC5BlxB,EAAK+sB,eAAiBA,EAE9B,CACJ,CACJ,CACA/sB,EAAKsoB,gBAAgB,YAAa,CAC9Bz7B,SACA23B,WACApO,MAAO2a,EACPD,cACA1R,mBACA+J,4BAER,MACK,GAAInpB,EAAK6hB,SAAU,CACpB,MAAM,eAAE9N,GAAmB/T,EAAKpK,QAChCme,GAAkBA,GACtB,CAMA/T,EAAKpK,QAAQgI,gBAAahS,CAC9B,CACA,SAAS+7B,GAAoB3nB,GAIzB8lB,GAAoBC,aACf/lB,EAAK1R,SAQL0R,EAAKwtB,iBACNxtB,EAAK0mB,kBAAoB1mB,EAAK1R,OAAOo4B,mBAOzC1mB,EAAK2mB,0BAA4B3mB,EAAK2mB,wBAA0Bn+B,QAAQwX,EAAK0mB,mBACzE1mB,EAAK1R,OAAOo4B,mBACZ1mB,EAAK1R,OAAOq4B,0BAChB3mB,EAAK4mB,mBAAqB5mB,EAAK4mB,iBAAmB5mB,EAAK1R,OAAOs4B,kBAClE,CACA,SAASkB,GAAgB9nB,GACrBA,EAAK0mB,kBACD1mB,EAAK2mB,wBACD3mB,EAAK4mB,kBACD,CAChB,CACA,SAASuE,GAAcnrB,GACnBA,EAAKmrB,eACT,CACA,SAASR,GAAkB3qB,GACvBA,EAAK2qB,mBACT,CACA,SAASC,GAAmB5qB,GACxBA,EAAK2kB,eAAgB,CACzB,CACA,SAASkG,GAAoB7qB,GACzB,MAAM,cAAE3R,GAAkB2R,EAAKpK,QAC3BvH,GAAiBA,EAAciS,WAAW6wB,uBAC1C9iC,EAAcnK,OAAO,uBAEzB8b,EAAKumB,gBACT,CACA,SAAS0C,GAAgBjpB,GACrBA,EAAKipB,kBACLjpB,EAAK6sB,YAAc7sB,EAAKspB,eAAiBtpB,EAAKhJ,YAASpL,EACvDoU,EAAK0mB,mBAAoB,CAC7B,CACA,SAASkB,GAAmB5nB,GACxBA,EAAK4nB,oBACT,CACA,SAASC,GAAe7nB,GACpBA,EAAK6nB,gBACT,CACA,SAASyC,GAActqB,GACnBA,EAAKsqB,eACT,CACA,SAASc,GAAoB7J,GACzBA,EAAMyD,oBACV,CACA,SAAS+J,GAAapnC,EAAQyuB,EAAO9wB,GACjCqC,EAAOuvB,WAAYza,EAAAA,GAAAA,GAAI2Z,EAAMc,UAAW,EAAG5xB,GAC3CqC,EAAO0M,OAAQoI,EAAAA,GAAAA,GAAI2Z,EAAM/hB,MAAO,EAAG/O,GACnCqC,EAAO4Q,OAAS6d,EAAM7d,OACtB5Q,EAAOsvB,YAAcb,EAAMa,WAC/B,CACA,SAAS+X,GAAQrnC,EAAQqlB,EAAM8hB,EAAIxpC,GAC/BqC,EAAOkvB,KAAMpa,EAAAA,GAAAA,GAAIuQ,EAAK6J,IAAKiY,EAAGjY,IAAKvxB,GACnCqC,EAAOivB,KAAMna,EAAAA,GAAAA,GAAIuQ,EAAK4J,IAAKkY,EAAGlY,IAAKtxB,EACvC,CAKA,SAASqpC,GAAoB3uB,GACzB,OAAQA,EAAKykB,sBAAwD74B,IAArCoU,EAAKykB,gBAAgByK,WACzD,CACA,MAAM1F,GAA0B,CAC5BvhB,SAAU,IACV7B,KAAM,CAAC,GAAK,EAAG,GAAK,IAElBgrB,GAAqBC,GAAgC,qBAAdC,WACzCA,UAAUC,UAAUnnC,cAAc9C,SAAS+pC,GAMzCG,GAAaJ,GAAkB,kBAAoBA,GAAkB,WACrEhuC,KAAKC,MACLoC,GAAAA,EACN,SAAS2mC,GAAUzV,GAEfA,EAAKE,IAAM2a,GAAW7a,EAAKE,KAC3BF,EAAKC,IAAM4a,GAAW7a,EAAKC,IAC/B,CAKA,SAAS+Y,GAA0BC,EAAepL,EAAU33B,GACxD,MAA0B,aAAlB+iC,GACe,oBAAlBA,IACI9Y,GAAO8M,GAAYY,GAAWZ,GAAY/2B,GAAS,GAChE,CKp9CA,MAAM4kC,GAAyBvL,GAAqB,CAChDC,qBAAsBA,CAAC57B,EAAKrG,IAAWoa,GAAY/T,EAAK,SAAUrG,GAClEmiC,cAAeA,KAAA,CACX30B,EAAGiQ,SAAS+vB,gBAAgBC,YAAchwB,SAASiwB,KAAKD,WACxDhgC,EAAGgQ,SAAS+vB,gBAAgBG,WAAalwB,SAASiwB,KAAKC,YAE3DvL,kBAAmBA,KAAM,ICNvBrJ,GAAqB,CACvBnuB,aAASlD,GAEPkmC,GAAqB5L,GAAqB,CAC5CG,cAAgBt2B,IAAQ,CACpB2B,EAAG3B,EAAS4hC,WACZhgC,EAAG5B,EAAS8hC,YAEhBzL,cAAeA,KACX,IAAKnJ,GAAmBnuB,QAAS,CAC7B,MAAMijC,EAAe,IAAIN,GAAuB,CAAC,GACjDM,EAAa/hC,MAAMb,QACnB4iC,EAAa/Q,WAAW,CAAE2K,cAAc,IACxC1O,GAAmBnuB,QAAUijC,CACjC,CACA,OAAO9U,GAAmBnuB,SAE9By3B,eAAgBA,CAACx2B,EAAU/I,KACvB+I,EAAS+F,MAAMlO,eAAsBgE,IAAV5E,EAAsBA,EAAQ,QAE7Ds/B,kBAAoBv2B,GAAavH,QAAuD,UAA/C2G,OAAO6iC,iBAAiBjiC,GAAUkiC,YClBzE1lC,GAAO,CACTI,IAAK,CACDoT,QrBKR,cAAyBA,GACrBpc,WAAAA,GACI4e,SAASzd,WACTlB,KAAKsuC,0BAA4BzsC,GAAAA,CACrC,CACA0sC,aAAAA,CAAcC,GACVxuC,KAAKyuC,QAAU,IAAIhe,GAAW+d,EAAkBxuC,KAAK0uC,oBAAqB,CACtEjtC,mBAAoBzB,KAAKoc,KAAK8b,wBAC9BvH,cAAeyF,GAAiBp2B,KAAKoc,OAE7C,CACAsyB,iBAAAA,GACI,MAAM,kBAAEC,EAAiB,WAAEC,EAAU,MAAEC,EAAK,SAAEC,GAAa9uC,KAAKoc,KAAKM,WACrE,MAAO,CACH0V,eAAgBqJ,GAAakT,GAC7Bld,QAASgK,GAAamT,GACtBld,OAAQmd,EACR9c,MAAOA,CAAC/W,EAAOtY,YACJ1C,KAAKyuC,QACRK,GACA30B,GAAAA,GAAM9O,OAAO,IAAMyjC,EAAS9zB,EAAOtY,KAInD,CACA0J,KAAAA,GACIpM,KAAKsuC,0BAA4B/yB,GAAgBvb,KAAKoc,KAAKlR,QAAS,cAAgB8P,GAAUhb,KAAKuuC,cAAcvzB,GACrH,CACA3P,MAAAA,GACIrL,KAAKyuC,SAAWzuC,KAAKyuC,QAAQnc,eAAetyB,KAAK0uC,oBACrD,CACAriC,OAAAA,GACIrM,KAAKsuC,4BACLtuC,KAAKyuC,SAAWzuC,KAAKyuC,QAAQ3c,KACjC,IqBrCAnpB,KAAM,CACFwT,QCNR,cAA0BA,GACtBpc,WAAAA,CAAYqc,GACRuC,MAAMvC,GACNpc,KAAK+uC,oBAAsBltC,GAAAA,EAC3B7B,KAAKqyB,gBAAkBxwB,GAAAA,EACvB7B,KAAKgvC,SAAW,IAAIxY,GAA0Bpa,EAClD,CACAhQ,KAAAA,GAGI,MAAM,aAAE6iC,GAAiBjvC,KAAKoc,KAAKM,WAC/BuyB,IACAjvC,KAAK+uC,oBAAsBE,EAAajf,UAAUhwB,KAAKgvC,WAE3DhvC,KAAKqyB,gBAAkBryB,KAAKgvC,SAAS9T,gBAAkBr5B,GAAAA,CAC3D,CACAwK,OAAAA,GACIrM,KAAK+uC,sBACL/uC,KAAKqyB,iBACT,GDZI6c,eAAgBhB,GAChB9jC,cAAaA,KECrB,MAAM+kC,GAAwB,uDAS9B,SAASC,GAAiBlkC,EAASkM,GAAoB,IAAXwqB,EAAK1gC,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,GAAAA,UAAA,GAAG,GAChDi4B,EAAAA,GAAAA,GAAUyI,GAFG,EAEgB,yDAAFh8B,OAA2DsF,EAAO,yDAC7F,MAAO/I,EAAOktC,GAVlB,SAA0BnkC,GACtB,MAAMpI,EAAQqsC,GAAsBG,KAAKpkC,GACzC,IAAKpI,EACD,MAAO,CAAC,GACZ,MAAO,CAAEX,EAAOktC,GAAYvsC,EAC5B,MAAO,CAACX,EAAOktC,EACnB,CAI8BE,CAAiBrkC,GAE3C,IAAK/I,EACD,OAEJ,MAAM2X,EAAWvO,OAAO6iC,iBAAiBh3B,GAASo4B,iBAAiBrtC,GACnE,GAAI2X,EAAU,CACV,MAAM21B,EAAU31B,EAAS9G,OACzB,OAAOwX,GAAkBilB,GAAW9pC,WAAW8pC,GAAWA,CAC9D,CACK,OAAIC,EAAAA,EAAAA,IAAmBL,GAEjBD,GAAiBC,EAAUj4B,EAASwqB,EAAQ,GAG5CyN,CAEf,CAMA,SAASM,GAAoBllC,EAAa9H,EAAiBoX,GAAe,IAAzB3G,EAAMxM,OAAA0M,OAAA,IC/CvD,SAAmCwR,GACjC,GAAI,MAAQA,EAAG,MAAM,IAAI8qB,UAAU,sBAAwB9qB,EAC7D,CD6CuD+qB,CAAAltC,GAAAA,IACnD,MAAMyU,EAAU3M,EAAcS,QAC9B,KAAMkM,aAAmBgM,SACrB,MAAO,CAAEhQ,SAAQ2G,iBAGjBA,IACAA,GAAa7T,EAAAA,EAAAA,GAAA,GAAQ6T,IAGzBtP,EAAczH,OAAO6W,QAASzW,IAC1B,MAAM8H,EAAU9H,EAAM4J,MACtB,KAAK0iC,EAAAA,EAAAA,IAAmBxkC,GACpB,OACJ,MAAM4O,EAAWs1B,GAAiBlkC,EAASkM,GACvC0C,GACA1W,EAAM+J,IAAI2M,KAIlB,IAAK,MAAM3Q,KAAOiK,EAAQ,CACtB,MAAMlI,EAAUkI,EAAOjK,GACvB,KAAKumC,EAAAA,EAAAA,IAAmBxkC,GACpB,SACJ,MAAM4O,EAAWs1B,GAAiBlkC,EAASkM,GACtC0C,IAGL1G,EAAOjK,GAAO2Q,EACTC,IACDA,EAAgB,CAAC,QAIM/R,IAAvB+R,EAAc5Q,KACd4Q,EAAc5Q,GAAO+B,GAE7B,CACA,MAAO,CAAEkI,SAAQ2G,gBACrB,CE9EA,MAAM+1B,GAAiB,IAAIpiC,IAAI,CAC3B,QACA,SACA,MACA,OACA,QACA,SACA,IACA,IACA,aACA,eAEEqiC,GAAmB5mC,GAAQ2mC,GAAe5iC,IAAI/D,GAI9C6mC,GAAiBzwC,GAAMA,IAAMiD,EAAAA,IAAUjD,IAAMuG,EAAAA,GAC7CmqC,GAAmBA,CAACC,EAAQC,IAAQxqC,WAAWuqC,EAAOxqC,MAAM,MAAMyqC,IAClEC,GAAyBA,CAACC,EAAMC,IAAS,CAACC,EAAK5tC,KAAoB,IAAlB,UAAEqB,GAAWrB,EAChE,GAAkB,SAAdqB,IAAyBA,EACzB,OAAO,EACX,MAAMwsC,EAAWxsC,EAAUlB,MAAM,sBACjC,GAAI0tC,EACA,OAAOP,GAAiBO,EAAS,GAAIF,GAEpC,CACD,MAAMJ,EAASlsC,EAAUlB,MAAM,oBAC/B,OAAIotC,EACOD,GAAiBC,EAAO,GAAIG,GAG5B,CAEf,GAEEI,GAAgB,IAAI/iC,IAAI,CAAC,IAAK,IAAK,MACnCgjC,GAAgCljC,EAAmBqa,OAAQ1e,IAASsnC,GAAcvjC,IAAI/D,IAe5F,MAAMwnC,GAAmB,CAErBzhC,MAAOA,CAAA3C,EAAAqkC,KAAA,IAAC,EAAE9iC,GAAGvB,GAAE,YAAEwD,EAAc,IAAG,aAAEF,EAAe,KAAK+gC,EAAA,OAAK9iC,EAAEklB,IAAMllB,EAAEmlB,IAAMttB,WAAWoK,GAAepK,WAAWkK,IAClHT,OAAQA,CAAAyhC,EAAAC,KAAA,IAAC,EAAE/iC,GAAG8iC,GAAE,WAAEjhC,EAAa,IAAG,cAAEE,EAAgB,KAAKghC,EAAA,OAAK/iC,EAAEilB,IAAMjlB,EAAEklB,IAAMttB,WAAWiK,GAAcjK,WAAWmK,IAClHP,IAAKA,CAACghC,EAAKQ,KAAA,IAAE,IAAExhC,GAAKwhC,EAAA,OAAKprC,WAAW4J,IACpCG,KAAMA,CAAC6gC,EAAKS,KAAA,IAAE,KAAEthC,GAAMshC,EAAA,OAAKrrC,WAAW+J,IACtCD,OAAQA,CAAAwhC,EAAAC,KAAA,IAAC,EAAEnjC,GAAGkjC,GAAE,IAAE1hC,GAAK2hC,EAAA,OAAKvrC,WAAW4J,IAAQxB,EAAEilB,IAAMjlB,EAAEklB,MACzDzjB,MAAOA,CAAA2hC,EAAAC,KAAA,IAAC,EAAEtjC,GAAGqjC,GAAE,KAAEzhC,GAAM0hC,EAAA,OAAKzrC,WAAW+J,IAAS5B,EAAEklB,IAAMllB,EAAEmlB,MAE1DnlB,EAAGsiC,GAAuB,EAAG,IAC7BriC,EAAGqiC,GAAuB,EAAG,KAGjCO,GAAiB1/B,WAAa0/B,GAAiB7iC,EAC/C6iC,GAAiBz/B,WAAay/B,GAAiB5iC,EAC/C,MA6BMsjC,GAAmC,SAAC5mC,EAAe2I,GAA4C,IAApCuB,EAAMzT,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAG6Y,EAAa7Y,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC3FkS,GAAMlN,EAAAA,EAAAA,GAAA,GAAQkN,GACd2G,GAAa7T,EAAAA,EAAAA,GAAA,GAAQ6T,GACrB,MAAMu3B,EAAuB1qC,OAAOsP,KAAK9C,GAAQyU,OAAOkoB,IAGxD,IAAIwB,EAAyB,GACzBC,GAAsC,EAC1C,MAAMC,EAAuB,GAkF7B,GAjFAH,EAAqBz3B,QAAS1Q,IAC1B,MAAM/F,EAAQqH,EAAcwgB,SAAS9hB,GACrC,IAAKsB,EAAcugB,SAAS7hB,GACxB,OACJ,IAAIigB,EAAOzU,EAAOxL,GACduoC,EAAW/mB,GAAuBvB,GACtC,MAAM8hB,EAAK93B,EAAOjK,GAClB,IAAIwoC,EAKJ,GAAIl5B,GAAkByyB,GAAK,CACvB,MAAM0G,EAAe1G,EAAGvqC,OAClBkxC,EAAsB,OAAV3G,EAAG,GAAc,EAAI,EACvC9hB,EAAO8hB,EAAG2G,GACVH,EAAW/mB,GAAuBvB,GAClC,IAAK,IAAIxoB,EAAIixC,EAAWjxC,EAAIgxC,GAKV,OAAV1G,EAAGtqC,GAL+BA,IAOjC+wC,GAMDxY,EAAAA,GAAAA,GAAUxO,GAAuBugB,EAAGtqC,MAAQ+wC,EAAQ,2CALpDA,EAAShnB,GAAuBugB,EAAGtqC,KACnCu4B,EAAAA,GAAAA,GAAUwY,IAAWD,GAChB1B,GAAc0B,IAAa1B,GAAc2B,GAAU,gEAMpE,MAEIA,EAAShnB,GAAuBugB,GAEpC,GAAIwG,IAAaC,EAGb,GAAI3B,GAAc0B,IAAa1B,GAAc2B,GAAS,CAClD,MAAMzmC,EAAU9H,EAAM4J,MACC,kBAAZ9B,GACP9H,EAAM+J,IAAIxH,WAAWuF,IAEP,kBAAPggC,EACP93B,EAAOjK,GAAOxD,WAAWulC,GAEpB9pC,MAAM6F,QAAQikC,IAAOyG,IAAW7rC,EAAAA,KACrCsN,EAAOjK,GAAO+hC,EAAGhoC,IAAIyC,YAE7B,MACuB,OAAb+rC,QAAkC,IAAbA,OAAsB,EAASA,EAAS1tC,aACvD,OAAX2tC,QAA8B,IAAXA,OAAoB,EAASA,EAAO3tC,aAC9C,IAATolB,GAAqB,IAAP8hB,GAGF,IAAT9hB,EACAhmB,EAAM+J,IAAIwkC,EAAO3tC,UAAUolB,IAG3BhW,EAAOjK,GAAOuoC,EAAS1tC,UAAUknC,IAMhCsG,IACDD,EAvIpB,SAAyC9mC,GACrC,MAAMqnC,EAAoB,GAW1B,OAVApB,GAA8B72B,QAAS1Q,IACnC,MAAM/F,EAAQqH,EAAcwgB,SAAS9hB,QACvBnB,IAAV5E,IACA0uC,EAAkB7uC,KAAK,CAACkG,EAAK/F,EAAM4J,QACnC5J,EAAM+J,IAAIhE,EAAIyE,WAAW,SAAW,EAAI,MAI5CkkC,EAAkBnxC,QAClB8J,EAAcgB,SACXqmC,CACX,CA2HwBC,CAAgCtnC,GACpC+mC,GAAsC,GAE1CC,EAAqBxuC,KAAKkG,GAC1B4Q,EAAc5Q,QACanB,IAAvB+R,EAAc5Q,GACR4Q,EAAc5Q,GACdiK,EAAOjK,GACjB/F,EAAM4uC,KAAK9G,MAInBuG,EAAqB9wC,OAAQ,CAC7B,MAAMsxC,EAAUR,EAAqBnkC,QAAQ,WAAa,EACpD/B,OAAO2mC,YACP,KACAC,EA3HmBC,EAACh/B,EAAQ3I,EAAe4nC,KACrD,MAAMC,EAAa7nC,EAAcurB,qBAC3B5e,EAAU3M,EAAcS,QACxBqnC,EAAuBnE,iBAAiBh3B,IACxC,QAAE+yB,GAAYoI,EACd59B,EAAS,CAAC,EAGA,SAAZw1B,GACA1/B,EAAc+hC,eAAe,UAAWp5B,EAAO+2B,SAAW,SAK9DkI,EAAYx4B,QAAS1Q,IACjBwL,EAAOxL,GAAOwnC,GAAiBxnC,GAAKmpC,EAAYC,KAGpD9nC,EAAcgB,SACd,MAAM+mC,EAAa/nC,EAAcurB,qBAQjC,OAPAqc,EAAYx4B,QAAS1Q,IAGjB,MAAM/F,EAAQqH,EAAcwgB,SAAS9hB,GACrC/F,GAASA,EAAM4uC,KAAKr9B,EAAOxL,IAC3BiK,EAAOjK,GAAOwnC,GAAiBxnC,GAAKqpC,EAAYD,KAE7Cn/B,GAgGqBg/B,CAAyBh/B,EAAQ3I,EAAegnC,GAaxE,OAXIF,EAAuB5wC,QACvB4wC,EAAuB13B,QAAQ44B,IAAkB,IAAhBtpC,EAAK/F,GAAMqvC,EACxChoC,EAAcwgB,SAAS9hB,GAAKgE,IAAI/J,KAIxCqH,EAAcgB,SAEVtM,EAAAA,GAAyB,OAAZ8yC,GACb1mC,OAAOmnC,SAAS,CAAEnjC,IAAK0iC,IAEpB,CAAE7+B,OAAQ++B,EAAiBp4B,gBACtC,CAEI,MAAO,CAAE3G,SAAQ2G,gBAEzB,EAQA,SAAS44B,GAAeloC,EAAe2I,EAAQuB,EAAQoF,GACnD,MA3MsB3G,IACfxM,OAAOsP,KAAK9C,GAAQ3L,KAAKsoC,IA0MzB6C,CAAiBx/B,GAClBi+B,GAAiC5mC,EAAe2I,EAAQuB,EAAQoF,GAChE,CAAE3G,SAAQ2G,gBACpB,CC5NA,MCNM84B,GAAuB,CAAE3nC,QAAS,MAClC4nC,GAA2B,CAAE5nC,SAAS,GCF5C,MAAM6nC,GAAqB,IAAI31B,Q,kCCoBzB41B,GAAepsC,OAAOsP,KAAKhN,GAC3B+pC,GAAcD,GAAaryC,OAC3BuyC,GAAoB,CACtB,iBACA,oBACA,SACA,sBACA,gBACA,uBACA,2BAEEC,GAAkB9rC,EAAa1G,OAKrC,MAAMyyC,GACFrzC,WAAAA,CAAW4C,GAAsF,IAArF,OAAE+H,EAAM,MAAEnD,EAAK,gBAAEqD,EAAe,oBAAEE,EAAmB,YAAEN,GAAc7H,EAAEqP,EAAO9Q,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,GAAAA,UAAA,GAAG,CAAC,EAK1FlB,KAAKkL,QAAU,KAIflL,KAAKgX,SAAW,IAAItJ,IAIpB1N,KAAK2H,eAAgB,EACrB3H,KAAKsH,uBAAwB,EAQ7BtH,KAAKssB,mBAAqB,KAM1BtsB,KAAKgD,OAAS,IAAI+J,IAIlB/M,KAAK+J,SAAW,CAAC,EAKjB/J,KAAKqzC,mBAAqB,IAAItmC,IAM9B/M,KAAKszC,iBAAmB,CAAC,EAIzBtzC,KAAKuzC,OAAS,CAAC,EAMfvzC,KAAKwzC,uBAAyB,CAAC,EAC/BxzC,KAAKyzC,aAAe,IAAMzzC,KAAKM,OAAO,SAAUN,KAAK+R,cACrD/R,KAAKyL,OAAS,KACLzL,KAAKkL,UAEVlL,KAAK0zC,eACL1zC,KAAK2zC,eAAe3zC,KAAKkL,QAASlL,KAAK2X,YAAa3X,KAAKuH,MAAM2K,MAAOlS,KAAKsX,cAE/EtX,KAAKkgC,eAAiB,IAAM/lB,GAAAA,GAAM1O,OAAOzL,KAAKyL,QAAQ,GAAO,GAC7D,MAAM,aAAEsG,EAAY,YAAE4F,GAAgBnN,EACtCxK,KAAK+R,aAAeA,EACpB/R,KAAK4zC,YAAU1tC,EAAAA,EAAAA,GAAA,GAAQ6L,GACvB/R,KAAK6zC,cAAgBtsC,EAAMO,SAAO5B,EAAAA,EAAAA,GAAA,GAAQ6L,GAAiB,CAAC,EAC5D/R,KAAK2X,YAAcA,EACnB3X,KAAK0K,OAASA,EACd1K,KAAKuH,MAAQA,EACbvH,KAAK4K,gBAAkBA,EACvB5K,KAAK4hC,MAAQl3B,EAASA,EAAOk3B,MAAQ,EAAI,EACzC5hC,KAAK8K,oBAAsBA,EAC3B9K,KAAKgS,QAAUA,EACfhS,KAAKsH,sBAAwBA,EAAsBC,GACnDvH,KAAK2H,cAAgBA,EAAcJ,GAC/BvH,KAAK2H,gBACL3H,KAAK4sB,gBAAkB,IAAIlf,KAE/B1N,KAAK8uB,uBAAyBlqB,QAAQ8F,GAAUA,EAAOQ,SAWvD,MAAA4oC,EAA+C9zC,KAAK8X,4BAA4BvQ,EAAO,CAAC,IAAlF,WAAEwkB,GAAoC+nB,EAArBC,GAAmBv+B,EAAAA,GAAAA,GAAAs+B,EAAAr+B,IAC1C,IAAK,MAAMtM,KAAO4qC,EAAqB,CACnC,MAAM3wC,EAAQ2wC,EAAoB5qC,QACRnB,IAAtB+J,EAAa5I,KAAsBxE,EAAAA,EAAAA,GAAcvB,KACjDA,EAAM+J,IAAI4E,EAAa5I,IAAM,GACzBohB,GAAwBwB,IACxBA,EAAW7rB,IAAIiJ,GAG3B,CACJ,CAQA2O,2BAAAA,CAA4Bk8B,EAAQC,GAChC,MAAO,CAAC,CACZ,CACA7nC,KAAAA,CAAMD,GACFnM,KAAKkL,QAAUiB,EACf4mC,GAAmB5lC,IAAIhB,EAAUnM,MAC7BA,KAAKsX,aAAetX,KAAKsX,WAAWnL,UACpCnM,KAAKsX,WAAWlL,MAAMD,GAEtBnM,KAAK0K,QAAU1K,KAAK2H,gBAAkB3H,KAAKsH,wBAC3CtH,KAAKk0C,sBAAwBl0C,KAAK0K,OAAOypC,gBAAgBn0C,OAE7DA,KAAKgD,OAAO6W,QAAQ,CAACzW,EAAO+F,IAAQnJ,KAAKo0C,kBAAkBjrC,EAAK/F,IAC3D0vC,GAAyB5nC,SC1JtC,WAEI,GADA4nC,GAAyB5nC,SAAU,EAC9B/L,EAAAA,EAEL,GAAIoM,OAAO8oC,WAAY,CACnB,MAAMC,EAAmB/oC,OAAO8oC,WAAW,4BACrCE,EAA8BA,IAAO1B,GAAqB3nC,QAAUopC,EAAiB1xC,QAC3F0xC,EAAiBE,YAAYD,GAC7BA,GACJ,MAEI1B,GAAqB3nC,SAAU,CAEvC,CD8IYupC,GAEJz0C,KAAKssB,mBAC4B,UAA7BtsB,KAAK8K,sBAE8B,WAA7B9K,KAAK8K,qBAED+nC,GAAqB3nC,SAI/BlL,KAAK0K,QACL1K,KAAK0K,OAAOsM,SAAS9W,IAAIF,MAC7BA,KAAKqL,OAAOrL,KAAKuH,MAAOvH,KAAK4K,gBACjC,CACAyB,OAAAA,GACI0mC,GAAmBz0B,OAAOte,KAAKkL,SAC/BlL,KAAKsX,YAActX,KAAKsX,WAAWjL,WACnCma,EAAAA,GAAAA,IAAYxmB,KAAKyzC,eACjBjtB,EAAAA,GAAAA,IAAYxmB,KAAKyL,QACjBzL,KAAKqzC,mBAAmBx5B,QAAS0S,GAAWA,KAC5CvsB,KAAKk0C,uBAAyBl0C,KAAKk0C,wBACnCl0C,KAAK0K,QAAU1K,KAAK0K,OAAOsM,SAASsH,OAAOte,MAC3C,IAAK,MAAMmJ,KAAOnJ,KAAKuzC,OACnBvzC,KAAKuzC,OAAOpqC,GAAKrI,QAErB,IAAK,MAAMqI,KAAOnJ,KAAK+J,SACnB/J,KAAK+J,SAASZ,GAAKkD,UAEvBrM,KAAKkL,QAAU,IACnB,CACAkpC,iBAAAA,CAAkBjrC,EAAK/F,GACnB,MAAMsxC,EAAmBjnC,EAAeP,IAAI/D,GACtCwrC,EAAiBvxC,EAAMwxC,GAAG,SAAWC,IACvC70C,KAAK+R,aAAa5I,GAAO0rC,EACzB70C,KAAKuH,MAAMic,UACPrJ,GAAAA,GAAM9O,OAAOrL,KAAKyzC,cAAc,GAAO,GACvCiB,GAAoB10C,KAAKsX,aACzBtX,KAAKsX,WAAW0rB,kBAAmB,KAGrC8R,EAAwB1xC,EAAMwxC,GAAG,gBAAiB50C,KAAKkgC,gBAC7DlgC,KAAKqzC,mBAAmBlmC,IAAIhE,EAAK,KAC7BwrC,IACAG,KAER,CACAznB,gBAAAA,CAAiB0nB,GAIb,OAAK/0C,KAAKkL,SACLlL,KAAKg1C,0BACNh1C,KAAKoO,OAAS2mC,EAAM3mC,KAGjBpO,KAAKg1C,yBAAyBh1C,KAAKkL,QAAS6pC,EAAM7pC,SAF9C,CAGf,CACAlB,YAAAA,CAAYuC,EAAiCR,EAAUrC,EAAmBoC,GAA0B,IAC5FmpC,EACA7qC,GAFK,SAAE4M,GAA4BzK,EAAf2oC,GAAa1/B,EAAAA,GAAAA,GAAAjJ,EAAA4oC,IAerC,IAAK,IAAIv0C,EAAI,EAAGA,EAAIqyC,GAAaryC,IAAK,CAClC,MAAM8G,EAAOsrC,GAAapyC,IACpB,UAAEwI,EAAW+S,QAASi5B,EAAkB,eAAElG,EAAgB9kC,cAAeirC,GAA4BnsC,EAAmBxB,GAC1HwnC,IACA+F,EAA4B/F,GAC5B9lC,EAAU8rC,MACLl1C,KAAK+J,SAASrC,IAAS0tC,IACxBp1C,KAAK+J,SAASrC,GAAQ,IAAI0tC,EAAmBp1C,OAE7Cq1C,IACAjrC,EAAgBirC,GAG5B,CACA,IAAmB,SAAdr1C,KAAKoO,MAAiC,QAAdpO,KAAKoO,QAC7BpO,KAAKsX,YACN29B,EAA2B,CAC3Bj1C,KAAKsX,WAAa,IAAI29B,EAA0Bj1C,KAAK+R,aAAc/R,KAAK0K,QAAU1K,KAAK0K,OAAO4M,YAC9F,MAAM,SAAEhN,EAAQ,OAAErB,EAAM,KAAEN,EAAI,gBAAE8vB,EAAe,aAAEsP,EAAY,WAAE7B,GAAgBgP,EAC/El1C,KAAKsX,WAAW8lB,WAAW,CACvB9yB,WACArB,SACAy+B,oBAAqB9iC,QAAQ+D,IACxB8vB,GAAmB/xB,EAAY+xB,GACpChuB,cAAezK,KACfkgC,eAAgBA,IAAMlgC,KAAKkgC,iBAQ3B8L,cAAiC,kBAAX/iC,EAAsBA,EAAS,OACrDkjC,uBAAwBrgC,EACxBi8B,eACA7B,cAER,CACA,OAAO97B,CACX,CACAwB,cAAAA,GACI,IAAK,MAAMzC,KAAOnJ,KAAK+J,SAAU,CAC7B,MAAMurC,EAAUt1C,KAAK+J,SAASZ,GAC1BmsC,EAAQj5B,UACRi5B,EAAQjqC,UAGRiqC,EAAQlpC,QACRkpC,EAAQj5B,WAAY,EAE5B,CACJ,CACAq3B,YAAAA,GACI1zC,KAAKu1C,MAAMv1C,KAAK2X,YAAa3X,KAAK+R,aAAc/R,KAAKgS,QAAShS,KAAKuH,MACvE,CAMAyuB,kBAAAA,GACI,OAAOh2B,KAAKkL,QACNlL,KAAKw1C,2BAA2Bx1C,KAAKkL,QAASlL,KAAKuH,OrC3R/C,CACduG,EAFe,CAASmlB,IAAK,EAAGD,IAAK,GAGrCjlB,EAHe,CAASklB,IAAK,EAAGD,IAAK,GqC8RrC,CACAyiB,cAAAA,CAAetsC,GACX,OAAOnJ,KAAK+R,aAAa5I,EAC7B,CACAqjC,cAAAA,CAAerjC,EAAK/F,GAChBpD,KAAK+R,aAAa5I,GAAO/F,CAC7B,CAQAioB,oBAAAA,CAAqBjY,GAA0B,IAAlBsiC,IAASx0C,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,KAAAA,UAAA,GAClC,OAAOlB,KAAK21C,iCAAiCviC,EAAQpT,KAAKuH,MAAOmuC,EACrE,CAKArqC,MAAAA,CAAO9D,EAAOqD,IACNrD,EAAM0K,mBAAqBjS,KAAKuH,MAAM0K,oBACtCjS,KAAKkgC,iBAETlgC,KAAK+X,UAAY/X,KAAKuH,MACtBvH,KAAKuH,MAAQA,EACbvH,KAAKqwB,oBAAsBrwB,KAAK4K,gBAChC5K,KAAK4K,gBAAkBA,EAIvB,IAAK,IAAIhK,EAAI,EAAGA,EAAIsyC,GAAkBvyC,OAAQC,IAAK,CAC/C,MAAMuI,EAAM+pC,GAAkBtyC,GAC1BZ,KAAKwzC,uBAAuBrqC,KAC5BnJ,KAAKwzC,uBAAuBrqC,YACrBnJ,KAAKwzC,uBAAuBrqC,IAEvC,MAAMysC,EAAWruC,EAAM,KAAO4B,GAC1BysC,IACA51C,KAAKwzC,uBAAuBrqC,GAAOnJ,KAAK40C,GAAGzrC,EAAKysC,GAExD,CACA51C,KAAKszC,iBE9Ub,SAAqCl8B,EAASqK,EAAMC,GAChD,MAAM,WAAEqK,GAAetK,EACvB,IAAK,MAAMtY,KAAOsY,EAAM,CACpB,MAAMo0B,EAAYp0B,EAAKtY,GACjB2sC,EAAYp0B,EAAKvY,GACvB,IAAIxE,EAAAA,EAAAA,GAAckxC,GAKdz+B,EAAQ8T,SAAS/hB,EAAK0sC,GAClBtrB,GAAwBwB,IACxBA,EAAW7rB,IAAIiJ,QAUlB,IAAIxE,EAAAA,EAAAA,GAAcmxC,GAKnB1+B,EAAQ8T,SAAS/hB,GAAKgiB,EAAAA,GAAAA,IAAY0qB,EAAW,CAAExwB,MAAOjO,KAClDmT,GAAwBwB,IACxBA,EAAWQ,OAAOpjB,QAGrB,GAAI2sC,IAAcD,EAMnB,GAAIz+B,EAAQ4T,SAAS7hB,GAAM,CACvB,MAAM4sC,EAAgB3+B,EAAQ6T,SAAS9hB,IAEtC4sC,EAAcC,aAAeD,EAAc5oC,IAAI0oC,EACpD,KACK,CACD,MAAMhB,EAAcz9B,EAAQq+B,eAAetsC,GAC3CiO,EAAQ8T,SAAS/hB,GAAKgiB,EAAAA,GAAAA,SAA4BnjB,IAAhB6sC,EAA4BA,EAAcgB,EAAW,CAAExwB,MAAOjO,IACpG,CAER,CAEA,IAAK,MAAMjO,KAAOuY,OACI1Z,IAAdyZ,EAAKtY,IACLiO,EAAQ6+B,YAAY9sC,GAE5B,OAAOsY,CACX,CFuRgCy0B,CAA4Bl2C,KAAMA,KAAK8X,4BAA4BvQ,EAAOvH,KAAK+X,WAAY/X,KAAKszC,kBACpHtzC,KAAKm2C,wBACLn2C,KAAKm2C,wBAEb,CACAz5B,QAAAA,GACI,OAAO1c,KAAKuH,KAChB,CAIA6uC,UAAAA,CAAW1uC,GACP,OAAO1H,KAAKuH,MAAMK,SAAW5H,KAAKuH,MAAMK,SAASF,QAAQM,CAC7D,CAIAof,oBAAAA,GACI,OAAOpnB,KAAKuH,MAAMyS,UACtB,CACAke,qBAAAA,GACI,OAAOl4B,KAAKuH,MAAM9F,kBACtB,CACA40C,qBAAAA,GACI,OAAOr2C,KAAK2H,cACN3H,KACAA,KAAK0K,OACD1K,KAAK0K,OAAO2rC,6BACZruC,CACd,CACAqmB,iBAAAA,GACI,GAD2BntB,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,IAAAA,UAAA,GAEvB,OAAOlB,KAAK0K,OAAS1K,KAAK0K,OAAO2jB,yBAAsBrmB,EAE3D,IAAKhI,KAAKsH,sBAAuB,CAC7B,MAAMS,EAAU/H,KAAK0K,QACf1K,KAAK0K,OAAO2jB,qBACZ,CAAC,EAIP,YAH2BrmB,IAAvBhI,KAAKuH,MAAMO,UACXC,EAAQD,QAAU9H,KAAKuH,MAAMO,SAE1BC,CACX,CACA,MAAMA,EAAU,CAAC,EACjB,IAAK,IAAInH,EAAI,EAAGA,EAAIuyC,GAAiBvyC,IAAK,CACtC,MAAM8G,EAAOL,EAAazG,GACpB0H,EAAOtI,KAAKuH,MAAMG,IACpBV,EAAesB,KAAkB,IAATA,KACxBP,EAAQL,GAAQY,EAExB,CACA,OAAOP,CACX,CAIAosC,eAAAA,CAAgBr3B,GACZ,MAAMw5B,EAAqBt2C,KAAKq2C,wBAChC,GAAIC,EAGA,OAFAA,EAAmB1pB,iBACf0pB,EAAmB1pB,gBAAgB1sB,IAAI4c,GACpC,IAAMw5B,EAAmB1pB,gBAAgBtO,OAAOxB,EAE/D,CAIAoO,QAAAA,CAAS/hB,EAAK/F,GAENA,IAAUpD,KAAKgD,OAAOgK,IAAI7D,KAC1BnJ,KAAKi2C,YAAY9sC,GACjBnJ,KAAKo0C,kBAAkBjrC,EAAK/F,IAEhCpD,KAAKgD,OAAOmK,IAAIhE,EAAK/F,GACrBpD,KAAK+R,aAAa5I,GAAO/F,EAAM4J,KACnC,CAIAipC,WAAAA,CAAY9sC,GACRnJ,KAAKgD,OAAOsb,OAAOnV,GACnB,MAAMotC,EAAcv2C,KAAKqzC,mBAAmBrmC,IAAI7D,GAC5CotC,IACAA,IACAv2C,KAAKqzC,mBAAmB/0B,OAAOnV,WAE5BnJ,KAAK+R,aAAa5I,GACzBnJ,KAAKw2C,2BAA2BrtC,EAAKnJ,KAAK2X,YAC9C,CAIAqT,QAAAA,CAAS7hB,GACL,OAAOnJ,KAAKgD,OAAOkK,IAAI/D,EAC3B,CACA8hB,QAAAA,CAAS9hB,EAAKwe,GACV,GAAI3nB,KAAKuH,MAAMvE,QAAUhD,KAAKuH,MAAMvE,OAAOmG,GACvC,OAAOnJ,KAAKuH,MAAMvE,OAAOmG,GAE7B,IAAI/F,EAAQpD,KAAKgD,OAAOgK,IAAI7D,GAK5B,YAJcnB,IAAV5E,QAAwC4E,IAAjB2f,IACvBvkB,GAAQ+nB,EAAAA,GAAAA,IAAYxD,EAAc,CAAEtC,MAAOrlB,OAC3CA,KAAKkrB,SAAS/hB,EAAK/F,IAEhBA,CACX,CAMAqzC,SAAAA,CAAUttC,GACN,IAAI/E,EACJ,YAAkC4D,IAA3BhI,KAAK+R,aAAa5I,IAAuBnJ,KAAKkL,QAES,QAAvD9G,EAAKpE,KAAK02C,uBAAuB12C,KAAKuH,MAAO4B,UAAyB,IAAP/E,EAAgBA,EAAKpE,KAAK22C,sBAAsB32C,KAAKkL,QAAS/B,EAAKnJ,KAAKgS,SADxIhS,KAAK+R,aAAa5I,EAE5B,CAKAytC,aAAAA,CAAcztC,EAAK/F,GACfpD,KAAK4zC,WAAWzqC,GAAO/F,CAC3B,CAKAusB,aAAAA,CAAcxmB,GACV,IAAI/E,EACJ,MAAM,QAAE0D,GAAY9H,KAAKuH,MACnBsvC,EAAsC,kBAAZ/uC,GAA2C,kBAAZA,EACD,QAAvD1D,EAAKiU,GAAwBrY,KAAKuH,MAAOO,UAA6B,IAAP1D,OAAgB,EAASA,EAAG+E,QAC5FnB,EAIN,GAAIF,QAAgCE,IAArB6uC,EACX,OAAOA,EAMX,MAAMzjC,EAASpT,KAAK02C,uBAAuB12C,KAAKuH,MAAO4B,GACvD,YAAenB,IAAXoL,IAAyBzO,EAAAA,EAAAA,GAAcyO,QAMRpL,IAA5BhI,KAAK6zC,cAAc1qC,SACDnB,IAArB6uC,OACE7uC,EACAhI,KAAK4zC,WAAWzqC,GARXiK,CASf,CACAwhC,EAAAA,CAAGj6B,EAAW6C,GAIV,OAHKxd,KAAKuzC,OAAO54B,KACb3a,KAAKuzC,OAAO54B,GAAa,IAAI7a,GAAAA,GAE1BE,KAAKuzC,OAAO54B,GAAWza,IAAIsd,EACtC,CACAld,MAAAA,CAAOqa,GACH,GAAI3a,KAAKuzC,OAAO54B,GAAY,SAAA1Z,EAAAC,UAAAP,OADXikC,EAAI,IAAAxjC,MAAAH,EAAA,EAAAA,EAAA,KAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAJujC,EAAIvjC,EAAA,GAAAH,UAAAG,GAEjBrB,KAAKuzC,OAAO54B,GAAWra,UAAUskC,EACrC,CACJ,E,wCGrfJ,MAAMkS,WAAyB1D,GAC3B4B,wBAAAA,CAAyBz0C,EAAGC,GAMxB,OAAsC,EAA/BD,EAAEw2C,wBAAwBv2C,GAAS,GAAK,CACnD,CACAk2C,sBAAAA,CAAuBnvC,EAAO4B,GAC1B,OAAO5B,EAAM2K,MAAQ3K,EAAM2K,MAAM/I,QAAOnB,CAC5C,CACAwuC,0BAAAA,CAA2BrtC,EAAGxG,GAAmB,IAAjB,KAAEwP,EAAI,MAAED,GAAOvP,SACpCwP,EAAKhJ,UACL+I,EAAM/I,EACjB,CACAwsC,gCAAAA,CAAgCppC,EAAAqkC,EAAgEv0B,GAAW,IAA1E,WAAErC,EAAU,cAAED,GAA0BxN,EAAR6G,GAAMoC,EAAAA,GAAAA,GAAAjJ,EAAAkJ,KAAI,gBAAEjC,GAAiBo9B,EACtFj8B,EpDqFZ,SAAmBvB,EAAQ4G,EAAYvP,GACnC,MAAMkK,EAAS,CAAC,EAChB,IAAK,MAAMxL,KAAOiK,EAAQ,CACtB,MAAM4jC,EAAmB1rB,GAAwBniB,EAAK6Q,GACtD,QAAyBhS,IAArBgvC,EACAriC,EAAOxL,GAAO6tC,MAEb,CACD,MAAM5zC,EAAQqH,EAAcwgB,SAAS9hB,GACjC/F,IACAuR,EAAOxL,GAAO/F,EAAM4J,MAE5B,CACJ,CACA,OAAO2H,CACX,CoDpGqBsiC,CAAU7jC,EAAQ4G,GAAc,CAAC,EAAGha,MAYjD,GARIwT,IACIuG,IACAA,EAAgBvG,EAAgBuG,IAChC3G,IACAA,EAASI,EAAgBJ,IACzBuB,IACAA,EAASnB,EAAgBmB,KAE7B0H,EAAW,EpDoBvB,SAAiC5R,EAAe2I,EAAQuB,GACpD,IAAIvQ,EAAIC,EACR,MAAM6yC,EAAetwC,OAAOsP,KAAK9C,GAAQyU,OAAQ1e,IAASsB,EAAcugB,SAAS7hB,IAC3EguC,EAAeD,EAAav2C,OAClC,GAAKw2C,EAEL,IAAK,IAAIv2C,EAAI,EAAGA,EAAIu2C,EAAcv2C,IAAK,CACnC,MAAMuI,EAAM+tC,EAAat2C,GACnBw2C,EAAchkC,EAAOjK,GAC3B,IAAI/F,EAAQ,KAKRhC,MAAM6F,QAAQmwC,KACdh0C,EAAQg0C,EAAY,IAOV,OAAVh0C,IACAA,EAAoG,QAA3FiB,EAA4B,QAAtBD,EAAKuQ,EAAOxL,UAAyB,IAAP/E,EAAgBA,EAAKqG,EAAcgsC,UAAUttC,UAAyB,IAAP9E,EAAgBA,EAAK+O,EAAOjK,SAM9HnB,IAAV5E,GAAiC,OAAVA,IAEN,kBAAVA,IACNonB,GAAkBpnB,IAAUulB,GAAkBvlB,IAE/CA,EAAQuC,WAAWvC,IAEb0nB,GAAc1nB,IAAUc,GAAAA,EAAQC,KAAKizC,KAC3Ch0C,EAAQmB,GAAkB4E,EAAKiuC,IAEnC3sC,EAAcygB,SAAS/hB,GAAKgiB,EAAAA,GAAAA,IAAY/nB,EAAO,CAAEiiB,MAAO5a,UACpCzC,IAAhB2M,EAAOxL,KACPwL,EAAOxL,GAAO/F,GAEJ,OAAVA,GACAqH,EAAcmsC,cAAcztC,EAAK/F,GACzC,CACJ,CoDjEYi0C,CAAwBr3C,KAAMoT,EAAQuB,GACtC,MAAMnQ,EN5BM8yC,EAAC7sC,EAAe2I,EAAQuB,EAAQoF,KACpD,MAAMD,EAAW61B,GAAoBllC,EAAe2I,EAAQ2G,GAG5D,OAAO44B,GAAeloC,EAFtB2I,EAAS0G,EAAS1G,OAE2BuB,EAD7CoF,EAAgBD,EAASC,gBMyBFu9B,CAAgBt3C,KAAMoT,EAAQuB,EAAQoF,GACrDA,EAAgBvV,EAAOuV,cACvB3G,EAAS5O,EAAO4O,MACpB,CACA,OAAAlN,EAAAA,EAAAA,GAAA,CACI8T,aACAD,iBACG3G,EAEX,EC/BJ,MAAMmkC,WAA0BT,GAC5B/2C,WAAAA,GACI4e,SAASzd,WACTlB,KAAKoO,KAAO,MAChB,CACAuoC,qBAAAA,CAAsBxqC,EAAUhD,GAC5B,GAAIsE,EAAeP,IAAI/D,GAAM,CACzB,MAAMquC,EAAc/uB,GAAoBtf,GACxC,OAAOquC,GAAcA,EAAY7kC,SAAe,CACpD,CACK,CACD,MAAM8kC,GAdQrgC,EAcyBjL,EAbxCZ,OAAO6iC,iBAAiBh3B,IAcjBhU,IAASoP,EAAAA,EAAAA,IAAkBrJ,GAC3BsuC,EAAcjI,iBAAiBrmC,GAC/BsuC,EAActuC,KAAS,EAC7B,MAAwB,kBAAV/F,EAAqBA,EAAM4P,OAAS5P,CACtD,CAnBR,IAA0BgU,CAoBtB,CACAo+B,0BAAAA,CAA2BrpC,EAAQxJ,GAA0B,IAAxB,mBAAElB,GAAoBkB,EACvD,OAAOqzB,GAAmB7pB,EAAU1K,EACxC,CACA8zC,KAAAA,CAAM59B,EAAa5F,EAAcC,EAASzK,GACtCsK,EAAgB8F,EAAa5F,EAAcC,EAASzK,EAAM0K,kBAC9D,CACA6F,2BAAAA,CAA4BvQ,EAAOwQ,GAC/B,OAAOD,GAA4BvQ,EAAOwQ,EAC9C,CACAo+B,sBAAAA,GACQn2C,KAAK03C,oBACL13C,KAAK03C,2BACE13C,KAAK03C,mBAEhB,MAAM,SAAE1gC,GAAahX,KAAKuH,OACtB5C,EAAAA,EAAAA,GAAcqS,KACdhX,KAAK03C,kBAAoB1gC,EAAS49B,GAAG,SAAWja,IACxC36B,KAAKkL,UACLlL,KAAKkL,QAAQysC,YAAc,GAAH/xC,OAAM+0B,MAG9C,CACAgZ,cAAAA,CAAexnC,EAAUwL,EAAaN,EAAWC,GAC7CH,GAAWhL,EAAUwL,EAAaN,EAAWC,EACjD,EC5CJ,MAAMsgC,WAAyBd,GAC3B/2C,WAAAA,GACI4e,SAASzd,WACTlB,KAAKoO,KAAO,MACZpO,KAAKiV,UAAW,CACpB,CACAyhC,sBAAAA,CAAuBnvC,EAAO4B,GAC1B,OAAO5B,EAAM4B,EACjB,CACAwtC,qBAAAA,CAAsBxqC,EAAUhD,GAC5B,GAAIsE,EAAeP,IAAI/D,GAAM,CACzB,MAAMquC,EAAc/uB,GAAoBtf,GACxC,OAAOquC,GAAcA,EAAY7kC,SAAe,CACpD,CAEA,OADAxJ,EAAOsO,GAAoBvK,IAAI/D,GAA0BA,EAAnB7C,EAAY6C,GAC3CgD,EAAS0rC,aAAa1uC,EACjC,CACAqsC,0BAAAA,GACI,M1ClBU,CACd1nC,EAFe,CAASmlB,IAAK,EAAGD,IAAK,GAGrCjlB,EAHe,CAASklB,IAAK,EAAGD,IAAK,G0CoBrC,CACAlb,2BAAAA,CAA4BvQ,EAAOwQ,GAC/B,OAAOD,GAA4BvQ,EAAOwQ,EAC9C,CACAw9B,KAAAA,CAAM59B,EAAa5F,EAAcC,EAASzK,GACtCyN,GAAc2C,EAAa5F,EAAcC,EAAShS,KAAKiV,SAAU1N,EAAM0K,kBAC3E,CACA0hC,cAAAA,CAAexnC,EAAUwL,EAAaN,EAAWC,GAC7CI,GAAUvL,EAAUwL,EAAaN,EAAWC,EAChD,CACAlL,KAAAA,CAAMD,GACFnM,KAAKiV,SAAWA,GAAS9I,EAASqO,SAClCmE,MAAMvS,MAAMD,EAChB,ECvCJ,MAAM2rC,GAAyBA,CAAChuC,EAAWkI,IAChC3E,EAAevD,GAChB,IAAI8tC,GAAiB5lC,EAAS,CAAEa,4BAA4B,IAC5D,IAAI0kC,GAAkBvlC,EAAS,CAAEa,4BAA4B,ICJjE5J,GAAS,CACXA,OAAQ,CACJimC,eAAgBhB,GAChB9jC,cAAaA,KCGfV,IAAiBxD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChB8lB,IACAtN,IACA/V,IACAM,IAQD8uC,GAAuBrrC,EAAkB,CAAC5C,EAAWkP,IChB3D,SAA+BlP,EAASnH,EAAkC+G,EAAmBC,GAAqB,IAAxE,mBAAEgN,GAAqB,GAAOhU,EACpE,MAAMq1C,EAAa3qC,EAAevD,GAC5BoQ,GACAO,GACN,OAAAvU,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACO8xC,GAAU,IACbtuC,oBACAE,UAAW8M,GAAgBC,GAC3BhN,sBACAG,aAER,CDKsEmuC,CAAsBnuC,EAAWkP,EAAQtP,GAAmBouC,I,uDEflI,MAAM/yC,EAAgBA,CAACqJ,EAAM8pC,IAAc34C,GAChCqF,SAAS/E,EAAAA,EAAAA,IAASN,IAAMK,EAAAA,GAAiBuE,KAAK5E,IAAMA,EAAEqO,WAAWQ,IACnE8pC,GAAYtxC,OAAOC,UAAUC,eAAeC,KAAKxH,EAAG24C,IAEvDlzC,EAAaA,CAACmzC,EAAOC,EAAOC,IAAW94C,IACzC,KAAKM,EAAAA,EAAAA,IAASN,GACV,OAAOA,EACX,MAAOgB,EAAGC,EAAGC,EAAG2E,GAAS7F,EAAEuD,MAAMpD,EAAAA,IACjC,MAAO,CACH,CAACy4C,GAAQxyC,WAAWpF,GACpB,CAAC63C,GAAQzyC,WAAWnF,GACpB,CAAC63C,GAAQ1yC,WAAWlF,GACpB2E,WAAiB4C,IAAV5C,EAAsBO,WAAWP,GAAS,G,oEClB1CkzC,EAAA,CACbC,MAAO,6BACPrpC,MAAO,GACPE,OAAQ,GACRsG,QAAS,YACTuP,KAAM,OACNiD,OAAQ,eACRswB,YAAa,EACbC,cAAe,QACfC,eAAgB,S,wEC4ClB,IAAAC,EA7ByBC,CAACC,EAAkBC,KAC1C,MAAMhvC,GAAYI,EAAAA,EAAAA,YAChB,CAAAvH,EAAiGgE,KAC/F,IADD,MAAErE,EAAQ,oBAAgBgN,EAAO,eAAIkpC,EAAc,sBAAGO,EAAqB/hC,SAAAA,GAAkBrU,EAALq2C,GAAKxjC,EAAAA,EAAAA,GAAA7S,EAAA8S,GAAA,OAC5FyB,EAAAA,EAAAA,eACE,OAAAhR,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAEES,OACG2xC,GAAA,IACHppC,MAAOI,EACPF,OAAQE,EACR4Y,OAAQ5lB,EACRk2C,YAAaO,EAA4C,GAAtB1jB,OAAOmjB,GAAoBnjB,OAAO/lB,GAAQkpC,EAC7ES,UAAA,iBAAArzC,QAdkB6nC,EAcsBoL,EAdHpL,EAAO1qC,QAAQ,qBAAsB,SAASyD,iBAehFwyC,GAEL,IACKF,EAAS51C,IAAIqJ,IAAA,IAAE8J,EAAKV,GAAWpJ,EAAA,OAAA2K,EAAAA,EAAAA,eAAcb,EAAKV,SAElDvU,MAAM6F,QAAQ+P,GAAYA,EAAW,CAACA,KAAc,KApBrCy2B,QA4BnB,OAFP3jC,EAAUovC,YAAA,GAAAtzC,OAAiBizC,GAEpB/uC,E,wFCjDT,SAASqvC,EAASz3C,EAAG03C,EAAGt0B,GAKpB,OAJIA,EAAI,IACJA,GAAK,GACLA,EAAI,IACJA,GAAK,GACLA,EAAI,EAAI,EACDpjB,EAAc,GAAT03C,EAAI13C,GAASojB,EACzBA,EAAI,GACGs0B,EACPt0B,EAAI,EAAI,EACDpjB,GAAK03C,EAAI13C,IAAM,EAAI,EAAIojB,GAAK,EAChCpjB,CACX,C,kCCHA,MAAM23C,EAAiBA,CAACjwB,EAAM8hB,EAAI3rC,KAC9B,MAAM+5C,EAAWlwB,EAAOA,EACxB,OAAO5pB,KAAK8nB,KAAK9nB,KAAKwzB,IAAI,EAAGzzB,GAAK2rC,EAAKA,EAAKoO,GAAYA,KAEtDC,EAAa,CAACC,EAAAA,EAAKC,EAAAA,EAAM30C,EAAAA,GAE/B,SAAS40C,EAAOp3C,GACZ,MAAM8L,GAFY7O,EAEQ+C,EAFFi3C,EAAW3uB,KAAMxc,GAASA,EAAKjK,KAAK5E,KAA1CA,OAGlB45B,EAAAA,EAAAA,GAAUv0B,QAAQwJ,GAAO,IAAFxI,OAAMtD,EAAK,yEAClC,IAAIq3C,EAAQvrC,EAAKhM,MAAME,GAKvB,OAJI8L,IAAStJ,EAAAA,IAET60C,EDRR,SAAmBh3C,GAAwC,IAAvC,IAAEsC,EAAG,WAAEC,EAAU,UAAEC,EAAS,MAAEC,GAAOzC,EACrDsC,GAAO,IACPC,GAAc,IACdC,GAAa,IACb,IAAIy0C,EAAM,EACNC,EAAQ,EACRC,EAAO,EACX,GAAK50C,EAGA,CACD,MAAMk0C,EAAIj0C,EAAY,GAChBA,GAAa,EAAID,GACjBC,EAAYD,EAAaC,EAAYD,EACrCxD,EAAI,EAAIyD,EAAYi0C,EAC1BQ,EAAMT,EAASz3C,EAAG03C,EAAGn0C,EAAM,EAAI,GAC/B40C,EAAQV,EAASz3C,EAAG03C,EAAGn0C,GACvB60C,EAAOX,EAASz3C,EAAG03C,EAAGn0C,EAAM,EAAI,EACpC,MAVI20C,EAAMC,EAAQC,EAAO30C,EAWzB,MAAO,CACHy0C,IAAKp6C,KAAKC,MAAY,IAANm6C,GAChBC,MAAOr6C,KAAKC,MAAc,IAARo6C,GAClBC,KAAMt6C,KAAKC,MAAa,IAAPq6C,GACjB10C,QAER,CCjBgB20C,CAAWJ,IAEhBA,CACX,CACA,MAAMK,EAAWA,CAAC5wB,EAAM8hB,KACpB,MAAM+O,EAAWP,EAAOtwB,GAClB8wB,EAASR,EAAOxO,GAChBiP,GAAOj0C,EAAAA,EAAAA,GAAA,GAAQ+zC,GACrB,OAAQ16C,IACJ46C,EAAQP,IAAMP,EAAeY,EAASL,IAAKM,EAAON,IAAKr6C,GACvD46C,EAAQN,MAAQR,EAAeY,EAASJ,MAAOK,EAAOL,MAAOt6C,GAC7D46C,EAAQL,KAAOT,EAAeY,EAASH,KAAMI,EAAOJ,KAAMv6C,GAC1D46C,EAAQ/0C,OAAQyT,EAAAA,EAAAA,GAAIohC,EAAS70C,MAAO80C,EAAO90C,MAAO7F,GAC3Ck6C,EAAAA,EAAKz1C,UAAUm2C,K,uBC5B9B,MAAMC,EAAeA,CAACzlC,EAAQvB,IAAY1R,GAAC,GAAAkE,OAAQlE,EAAI,EAAI0R,EAASuB,GACpE,SAAS0lC,EAAS1lC,EAAQvB,GACtB,MAAsB,kBAAXuB,EACCpV,IAAMsZ,EAAAA,EAAAA,GAAIlE,EAAQvB,EAAQ7T,GAE7B+C,EAAAA,EAAM6B,KAAKwQ,GACTqlC,EAASrlC,EAAQvB,GAGjBuB,EAAO/G,WAAW,QACnBwsC,EAAazlC,EAAQvB,GACrBknC,EAAW3lC,EAAQvB,EAEjC,CACA,MAAMmnC,EAAWA,CAACnxB,EAAM8hB,KACpB,MAAMnnC,EAAS,IAAIqlB,GACbtlB,EAAYC,EAAOpD,OACnB65C,EAAapxB,EAAKlmB,IAAI,CAACu3C,EAAU75C,IAAMy5C,EAASI,EAAUvP,EAAGtqC,KACnE,OAAQrB,IACJ,IAAK,IAAIqB,EAAI,EAAGA,EAAIkD,EAAWlD,IAC3BmD,EAAOnD,GAAK45C,EAAW55C,GAAGrB,GAE9B,OAAOwE,IAGT22C,EAAYA,CAAC/lC,EAAQvB,KACvB,MAAMrP,GAAMmC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQyO,GAAWvB,GACzBonC,EAAa,CAAC,EACpB,IAAK,MAAMrxC,KAAOpF,OACMiE,IAAhB2M,EAAOxL,SAAsCnB,IAAhBoL,EAAOjK,KACpCqxC,EAAWrxC,GAAOkxC,EAAS1lC,EAAOxL,GAAMiK,EAAOjK,KAGvD,OAAQ5J,IACJ,IAAK,MAAM4J,KAAOqxC,EACdz2C,EAAOoF,GAAOqxC,EAAWrxC,GAAK5J,GAElC,OAAOwE,IAGTu2C,EAAaA,CAAC3lC,EAAQvB,KACxB,MAAMkpB,EAAWp4B,EAAAA,EAAQN,kBAAkBwP,GACrCunC,GAAcx3C,EAAAA,EAAAA,GAAoBwR,GAClCimC,GAAcz3C,EAAAA,EAAAA,GAAoBiQ,GAIxC,OAHuBunC,EAAYp3C,UAAYq3C,EAAYr3C,SACvDo3C,EAAYn3C,YAAco3C,EAAYp3C,WACtCm3C,EAAYl3C,YAAcm3C,EAAYn3C,YAE/BzC,EAAAA,EAAAA,GAAKu5C,EAASI,EAAY33C,OAAQ43C,EAAY53C,QAASs5B,KAG9D3S,EAAAA,EAAAA,IAAQ,EAAM,mBAAF/jB,OAAqB+O,EAAM,WAAA/O,OAAUwN,EAAM,6KAChDgnC,EAAazlC,EAAQvB,K,wBCjDpC,MAAMynC,EAAYA,CAACzxB,EAAM8hB,IAAQxpC,IAAMmX,EAAAA,EAAAA,GAAIuQ,EAAM8hB,EAAIxpC,GAgBrD,SAASo5C,EAAa/2C,EAAQye,EAAMu4B,GAChC,MAAMC,EAAS,GACTC,EAAeF,IAhBJ,kBADOx7C,EAiB+BwE,EAAO,IAfnD82C,EAEW,kBAANt7C,EACL+C,EAAAA,EAAM6B,KAAK5E,GAAKy6C,EAAWM,EAE7Bl5C,MAAM6F,QAAQ1H,GACZg7C,EAEW,kBAANh7C,EACLm7C,EAEJG,GAbX,IAA4Bt7C,EAkBxB,MAAM27C,EAAYn3C,EAAOpD,OAAS,EAClC,IAAK,IAAIC,EAAI,EAAGA,EAAIs6C,EAAWt6C,IAAK,CAChC,IAAIu6C,EAAQF,EAAal3C,EAAOnD,GAAImD,EAAOnD,EAAI,IAC/C,GAAI4hB,EAAM,CACN,MAAM44B,EAAiBh6C,MAAM6F,QAAQub,GAAQA,EAAK5hB,IAAMiB,EAAAA,EAAO2gB,EAC/D24B,GAAQn6C,EAAAA,EAAAA,GAAKo6C,EAAgBD,EACjC,CACAH,EAAO/3C,KAAKk4C,EAChB,CACA,OAAOH,CACX,CAoBA,SAASK,EAAYC,EAAOv3C,GAAqD,IAA3Cg3B,MAAOwgB,GAAU,EAAI,KAAE/4B,EAAI,MAAE24B,GAAOj6C,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC1E,MAAMs6C,EAAcF,EAAM36C,OAM1B,IALAw4B,EAAAA,EAAAA,GAAUqiB,IAAgBz3C,EAAOpD,OAAQ,wDAKrB,IAAhB66C,EACA,MAAO,IAAMz3C,EAAO,GAEpBu3C,EAAM,GAAKA,EAAME,EAAc,KAC/BF,EAAQ,IAAIA,GAAO/tB,UACnBxpB,EAAS,IAAIA,GAAQwpB,WAEzB,MAAMytB,EAASF,EAAa/2C,EAAQye,EAAM24B,GACpCD,EAAYF,EAAOr6C,OACnB86C,EAAgBl8C,IAClB,IAAIqB,EAAI,EACR,GAAIs6C,EAAY,EACZ,KAAOt6C,EAAI06C,EAAM36C,OAAS,KAClBpB,EAAI+7C,EAAM16C,EAAI,IADOA,KAKjC,MAAM86C,GAAkB5gB,EAAAA,EAAAA,GAASwgB,EAAM16C,GAAI06C,EAAM16C,EAAI,GAAIrB,GACzD,OAAOy7C,EAAOp6C,GAAG86C,IAErB,OAAOH,EACAh8C,GAAMk8C,GAAa1gB,EAAAA,EAAAA,GAAMugB,EAAM,GAAIA,EAAME,EAAc,GAAIj8C,IAC5Dk8C,CACV,C,6ECtFA,MAAM74B,EAAUlhB,GAAM,EAAIlC,KAAKm8C,IAAIn8C,KAAKo8C,KAAKl6C,IACvCmhB,GAAUg5B,EAAAA,EAAAA,GAAcj5B,GACxBk5B,GAAYC,EAAAA,EAAAA,GAAan5B,E,kCCL/B,MAAMzjB,EAAgC,qBAAb4e,Q,kCCAzB,MAAMgd,EAAQA,CAAC9H,EAAKD,EAAKzzB,IAAMC,KAAKyzB,IAAIzzB,KAAKwzB,IAAIzzB,EAAG0zB,GAAMD,E,gDCS1D,SAAS1Z,EAAY0iC,GACjB,MAAMr1C,GAAMqE,EAAAA,EAAAA,QAAO,MAInB,OAHoB,OAAhBrE,EAAIuE,UACJvE,EAAIuE,QAAU8wC,KAEXr1C,EAAIuE,OACf,C,gDCkBA,MAAMsuC,EAAM,CACRr1C,MAAMY,E,QAAAA,GAAc,KACpB3C,MAhCJ,SAAkB7C,GACd,IAAI08C,EAAI,GACJC,EAAI,GACJ17C,EAAI,GACJD,EAAI,GAmBR,OAjBIhB,EAAEoB,OAAS,GACXs7C,EAAI18C,EAAE6Y,UAAU,EAAG,GACnB8jC,EAAI38C,EAAE6Y,UAAU,EAAG,GACnB5X,EAAIjB,EAAE6Y,UAAU,EAAG,GACnB7X,EAAIhB,EAAE6Y,UAAU,EAAG,KAInB6jC,EAAI18C,EAAE6Y,UAAU,EAAG,GACnB8jC,EAAI38C,EAAE6Y,UAAU,EAAG,GACnB5X,EAAIjB,EAAE6Y,UAAU,EAAG,GACnB7X,EAAIhB,EAAE6Y,UAAU,EAAG,GACnB6jC,GAAKA,EACLC,GAAKA,EACL17C,GAAKA,EACLD,GAAKA,GAEF,CACHq5C,IAAKuC,SAASF,EAAG,IACjBpC,MAAOsC,SAASD,EAAG,IACnBpC,KAAMqC,SAAS37C,EAAG,IAClB4E,MAAO7E,EAAI47C,SAAS57C,EAAG,IAAM,IAAM,EAE3C,EAIIyD,UAAWy1C,EAAAA,EAAKz1C,U,iBCpCpB,SAAS5D,EAAcg8C,EAAKC,IACG,IAAvBD,EAAI9uC,QAAQ+uC,IACZD,EAAIn5C,KAAKo5C,EACjB,CACA,SAASh8C,EAAW+7C,EAAKC,GACrB,MAAMC,EAAQF,EAAI9uC,QAAQ+uC,GACtBC,GAAS,GACTF,EAAIG,OAAOD,EAAO,EAC1B,C,4DCNA,MAAMP,EAAgB95B,GAAYvgB,GAAMA,GAAK,GAAMugB,EAAO,EAAIvgB,GAAK,GAAK,EAAIugB,EAAO,GAAK,EAAIvgB,KAAO,C,kCCUnG,MAAMo5B,EAAWA,CAAC1R,EAAM8hB,EAAI9nC,KACxB,MAAMo5C,EAAmBtR,EAAK9hB,EAC9B,OAA4B,IAArBozB,EAAyB,GAAKp5C,EAAQgmB,GAAQozB,E,oECMzD,MAAMC,EAAaA,CAAC33B,EAAG43B,EAAIC,OAAU,EAAM,EAAMA,EAAK,EAAMD,GAAM53B,GAAK,EAAM63B,EAAK,EAAMD,IAAO53B,EAAI,EAAM43B,GACrG53B,EAoBJ,SAAS83B,EAAYC,EAAKC,EAAKC,EAAKC,GAEhC,GAAIH,IAAQC,GAAOC,IAAQC,EACvB,OAAOn7C,EAAAA,EACX,MAAMo7C,EAAYC,GArBtB,SAAyBpvC,EAAGqvC,EAAYC,EAAYP,EAAKE,GACrD,IAAIM,EACAC,EACA18C,EAAI,EACR,GACI08C,EAAWH,GAAcC,EAAaD,GAAc,EACpDE,EAAWZ,EAAWa,EAAUT,EAAKE,GAAOjvC,EACxCuvC,EAAW,EACXD,EAAaE,EAGbH,EAAaG,QAEZ99C,KAAKgxB,IAAI6sB,GAfO,QAgBnBz8C,EAfuB,IAgB7B,OAAO08C,CACX,CAK6BC,CAAgBL,EAAI,EAAG,EAAGL,EAAKE,GAExD,OAAQj4B,GAAY,IAANA,GAAiB,IAANA,EAAUA,EAAI23B,EAAWQ,EAASn4B,GAAIg4B,EAAKE,EACxE,CC9CA,MAAMv6B,EAASm6B,EAAY,IAAM,EAAG,EAAG,GACjCl6B,EAAUk6B,EAAY,EAAG,EAAG,IAAM,GAClCj6B,EAAYi6B,EAAY,IAAM,EAAG,IAAM,GCJvCY,EAAiBh7B,GACZphB,MAAM6F,QAAQub,IAA4B,kBAAZA,EAAK,G,4CCG9C,MAAMO,EAAU65B,EAAY,IAAM,KAAM,IAAM,KACxC95B,GAAS+4B,EAAAA,EAAAA,GAAc94B,GACvB06B,GAAY1B,EAAAA,EAAAA,GAAaj5B,GCEzB46B,EAAe,CACjBn7B,OAAQ1gB,EAAAA,EACR4gB,OAAM,EACNE,UAAS,EACTD,QAAO,EACPE,OAAM,KACNk5B,UAAS,KACTj5B,QAAO,KACPC,OAAM,EACN26B,UAAS,EACT16B,QAAO,EACP46B,WCjBgBj8C,IAAOA,GAAK,GAAK,EAAI,GAAMohB,EAAOphB,GAAK,IAAO,EAAIlC,KAAKo+C,IAAI,GAAI,IAAMl8C,EAAI,MDmBvFm8C,EAA8BvlC,IAChC,GAAIlX,MAAM6F,QAAQqR,GAAa,EAE3B6gB,EAAAA,EAAAA,GAAgC,IAAtB7gB,EAAW3X,OAAc,2DACnC,MAAOm9C,EAAIC,EAAIC,EAAIC,GAAM3lC,EACzB,OAAOskC,EAAYkB,EAAIC,EAAIC,EAAIC,EACnC,CACK,MAA0B,kBAAf3lC,IAEZ6gB,EAAAA,EAAAA,QAAuCnxB,IAA7B01C,EAAaplC,GAA2B,wBAAF1S,OAA0B0S,EAAU,MAC7EolC,EAAaplC,IAEjBA,G,wBEvBX,SAAS8L,EAASzhB,GAA4E,IAA3E,SAAE0hB,EAAW,IAAKD,UAAW85B,EAAc,MAAE55B,EAAK,KAAE9B,EAAO,aAAc7f,EAKxF,MAAMw7C,EAAkBX,EAAch7B,GAChCA,EAAKtf,IAAI26C,GACTA,EAA2Br7B,GAK3B1Q,EAAQ,CACV8S,MAAM,EACNxhB,MAAO86C,EAAe,IAKpBE,EC7BV,SAA8BxpC,EAAQyP,GAClC,OAAOzP,EAAO1R,IAAKm7C,GAAMA,EAAIh6B,EACjC,CD2B0Bi6B,CAGtBh6B,GAASA,EAAM3jB,SAAWu9C,EAAev9C,OACnC2jB,GACAi6B,EAAAA,EAAAA,GAAcL,GAAiB75B,GAC/Bm6B,GAAoBnD,EAAAA,EAAAA,GAAY+C,EAAeF,EAAgB,CACjE17B,KAAMphB,MAAM6F,QAAQk3C,GACdA,GA9BSn7C,EA+BKk7C,EA/BGj8B,EA+Bak8B,EA9BjCn7C,EAAOE,IAAI,IAAM+e,GAAUU,GAAW45B,OAAO,EAAGv5C,EAAOrC,OAAS,MAD3E,IAAuBqC,EAAQif,EAiC3B,MAAO,CACHw8B,mBAAoBp6B,EACpB5C,KAAOqD,IACHhT,EAAM1O,MAAQo7C,EAAkB15B,GAChChT,EAAM8S,KAAOE,GAAKT,EACXvS,GAGnB,C,wBE7CA,SAAS4sC,EAAsBC,EAAc75B,EAAG5Z,GAC5C,MAAM0zC,EAAQp/C,KAAKwzB,IAAIlO,EAFI,EAEwB,GACnD,OAAO+5B,EAAAA,EAAAA,GAAkB3zC,EAAUyzC,EAAaC,GAAQ95B,EAAI85B,EAChE,C,cCFA,MAAME,EAAU,KAKhB,SAASC,EAAUp8C,GAA6D,IACxEq8C,EACAC,GAFY,SAAE56B,EAAW,IAAG,OAAE66B,EAAS,IAAI,SAAEp9B,EAAW,EAAC,KAAEq9B,EAAO,GAAIx8C,GAG1EgnB,EAAAA,EAAAA,GAAQtF,IAAY8B,EAAAA,EAAAA,GANJ,IAMwC,8CACxD,IAAIi5B,EAAe,EAAIF,EAIvBE,GAAerkB,EAAAA,EAAAA,GAVA,IACA,EAS8BqkB,GAC7C/6B,GAAW0W,EAAAA,EAAAA,GAbK,IACA,IAY2B/U,EAAAA,EAAAA,GAAsB3B,IAC7D+6B,EAAe,GAIfJ,EAAYK,IACR,MAAMC,EAAmBD,EAAeD,EAClC5sB,EAAQ8sB,EAAmBj7B,EAC3B9jB,EAAI++C,EAAmBx9B,EACvBthB,EAAI++C,EAAgBF,EAAcD,GAClC3+C,EAAIjB,KAAKggD,KAAKhtB,GACpB,OAAOssB,EAAWv+C,EAAIC,EAAKC,GAE/Bw+C,EAAcI,IACV,MACM7sB,EADmB6sB,EAAeD,EACP/6B,EAC3B/B,EAAIkQ,EAAQ1Q,EAAWA,EACvBvH,EAAI/a,KAAKo+C,IAAIwB,EAAc,GAAK5/C,KAAKo+C,IAAIyB,EAAc,GAAKh7B,EAC5Do7B,EAAIjgD,KAAKggD,KAAKhtB,GACd0pB,EAAIqD,EAAgB//C,KAAKo+C,IAAIyB,EAAc,GAAID,GAErD,QADgBJ,EAASK,GAAgBP,EAAU,GAAK,EAAI,KACzCx8B,EAAI/H,GAAKklC,GAAMvD,KAOtC8C,EAAYK,GACE7/C,KAAKggD,KAAKH,EAAeh7B,KACxBg7B,EAAev9B,GAAYuC,EAAW,GAC1C,KAEX46B,EAAcI,GACA7/C,KAAKggD,KAAKH,EAAeh7B,IACIA,EAAWA,GAAvCvC,EAAWu9B,KAI9B,MACMA,EAmBV,SAAyBL,EAAUC,EAAYS,GAC3C,IAAIx8B,EAASw8B,EACb,IAAK,IAAI9+C,EAAI,EAAGA,EAAI++C,EAAgB/+C,IAChCsiB,GAAkB87B,EAAS97B,GAAU+7B,EAAW/7B,GAEpD,OAAOA,CACX,CAzByB08B,CAAgBZ,EAAUC,EAD1B,EAAI56B,GAGzB,GADAA,GAAW8B,EAAAA,EAAAA,GAAsB9B,GAC7B/f,MAAM+6C,GACN,MAAO,CACHp4B,UAAW,IACXrD,QAAS,GACTS,YAGH,CACD,MAAM4C,EAAYznB,KAAKo+C,IAAIyB,EAAc,GAAKF,EAC9C,MAAO,CACHl4B,YACArD,QAAwB,EAAfw7B,EAAmB5/C,KAAK8nB,KAAK63B,EAAOl4B,GAC7C5C,WAER,CACJ,CACA,MAAMs7B,EAAiB,GAQvB,SAASJ,EAAgBF,EAAcD,GACnC,OAAOC,EAAe7/C,KAAK8nB,KAAK,EAAI83B,EAAeA,EACvD,C,8CClFMS,EAAe,CAAC,WAAY,UAC5BC,EAAc,CAAC,YAAa,UAAW,QAC7C,SAASC,EAAa/tC,EAASkE,GAC3B,OAAOA,EAAKzO,KAAM0B,QAAyBnB,IAAjBgK,EAAQ7I,GACtC,CAuBA,SAAS62C,EAAMr9C,GAAkD,IAAjD,UAAEyhB,EAAS,UAAEiW,EAAS,UAAEnT,GAAuBvkB,EAATqP,GAAOwD,EAAAA,EAAAA,GAAA7S,EAAA8S,GACzD,MAAMd,EAASyP,EAAU,GACnBhR,EAASgR,EAAUA,EAAUzjB,OAAS,GAKtCmR,EAAQ,CAAE8S,MAAM,EAAOxhB,MAAOuR,IAC9B,UAAEsS,EAAS,QAAErD,EAAO,KAAEu7B,EAAI,SAAE96B,EAAQ,SAAEvC,EAAQ,uBAAEm+B,GA9B1D,SAA0BjuC,GACtB,IAAIkuC,GAAah6C,EAAAA,EAAAA,GAAA,CACb4b,SAAU,EACVmF,UAAW,IACXrD,QAAS,GACTu7B,KAAM,EACNc,wBAAwB,GACrBjuC,GAGP,IAAK+tC,EAAa/tC,EAAS8tC,IACvBC,EAAa/tC,EAAS6tC,GAAe,CACrC,MAAMM,EAAUpB,EAAW/sC,GAC3BkuC,GAAah6C,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACNg6C,GACAC,GAAO,IACVhB,KAAM,IAEVe,EAAcD,wBAAyB,CAC3C,CACA,OAAOC,CACX,CASsFE,EAAgBl6C,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAC7F8L,GAAO,IACV8P,WAAWkE,EAAAA,EAAAA,GAAsBhU,EAAQ8P,UAAY,MAEnDu+B,EAAkBv+B,GAAY,EAC9Bs9B,EAAex7B,GAAW,EAAIpkB,KAAK8nB,KAAKL,EAAYk4B,IACpDmB,EAAeltC,EAASuB,EACxB4rC,GAAsBv6B,EAAAA,EAAAA,GAAsBxmB,KAAK8nB,KAAKL,EAAYk4B,IAQlEqB,EAAkBhhD,KAAKgxB,IAAI8vB,GAAgB,EAGjD,IAAIG,EACJ,GAHAv5B,IAAcA,EAAYs5B,EAAkB,IAAO,GACnDnmB,IAAcA,EAAYmmB,EAAkB,KAAQ,IAEhDpB,EAAe,EAAG,CAClB,MAAMsB,EAAcnB,EAAgBgB,EAAqBnB,GAEzDqB,EAAiB37B,IACb,MAAMk6B,EAAWx/C,KAAKggD,KAAKJ,EAAemB,EAAsBz7B,GAChE,OAAQ1R,EACJ4rC,IACOqB,EACCjB,EAAemB,EAAsBD,GACrCI,EACAlhD,KAAKm8C,IAAI+E,EAAc57B,GACvBw7B,EAAe9gD,KAAKmhD,IAAID,EAAc57B,IAE1D,MACK,GAAqB,IAAjBs6B,EAELqB,EAAiB37B,GAAM1R,EACnB5T,KAAKggD,KAAKe,EAAsBz7B,IAC3Bw7B,GACID,EAAkBE,EAAsBD,GAAgBx7B,OAEpE,CAED,MAAM87B,EAAoBL,EAAsB/gD,KAAK8nB,KAAK83B,EAAeA,EAAe,GACxFqB,EAAiB37B,IACb,MAAMk6B,EAAWx/C,KAAKggD,KAAKJ,EAAemB,EAAsBz7B,GAE1D+7B,EAAWrhD,KAAKyzB,IAAI2tB,EAAoB97B,EAAG,KACjD,OAAQ1R,EACH4rC,IACKqB,EACEjB,EAAemB,EAAsBD,GACrC9gD,KAAKshD,KAAKD,GACVD,EACIN,EACA9gD,KAAKuhD,KAAKF,IAClBD,EAEhB,CACA,MAAO,CACHnC,mBAAoBwB,GAAyB57B,GAAmB,KAChE5C,KAAOqD,IACH,MAAM5Z,EAAUu1C,EAAc37B,GAC9B,GAAKm7B,EAqBDnuC,EAAM8S,KAAOE,GAAKT,MArBO,CACzB,IAAI7L,EAAkB6nC,EACZ,IAANv7B,IAOItM,EADA4mC,EAAe,EACGV,EAAsB+B,EAAe37B,EAAG5Z,GAGxC,GAG1B,MAAM81C,EAA2BxhD,KAAKgxB,IAAIhY,IAAoB0O,EACxD+5B,EAA+BzhD,KAAKgxB,IAAIpd,EAASlI,IAAYmvB,EACnEvoB,EAAM8S,KACFo8B,GAA4BC,CACpC,CAKA,OADAnvC,EAAM1O,MAAQ0O,EAAM8S,KAAOxR,EAASlI,EAC7B4G,GAGnB,CC7HA,SAASqoB,EAAOx3B,GAAiK,IAAhK,UAAEyhB,EAAS,SAAEtC,EAAW,EAAG,MAAEo/B,EAAQ,GAAG,aAAE9mB,EAAe,IAAG,cAAEF,EAAgB,GAAE,gBAAED,EAAkB,IAAG,aAAEknB,EAAY,IAAEluB,EAAG,IAAED,EAAG,UAAEqH,EAAY,GAAG,UAAEnT,GAAYvkB,EAC3K,MAAMgS,EAASyP,EAAU,GACnBtS,EAAQ,CACV8S,MAAM,EACNxhB,MAAOuR,GAGLysC,EAAmB7hD,QACTyI,IAARirB,EACOD,OACChrB,IAARgrB,GAEGxzB,KAAKgxB,IAAIyC,EAAM1zB,GAAKC,KAAKgxB,IAAIwC,EAAMzzB,GAD/B0zB,EAC0CD,EAEzD,IAAIquB,EAAYH,EAAQp/B,EACxB,MAAMw/B,EAAQ3sC,EAAS0sC,EACjBjuC,OAA0BpL,IAAjBm5C,EAA6BG,EAAQH,EAAaG,GAK7DluC,IAAWkuC,IACXD,EAAYjuC,EAASuB,GACzB,MAAM4sC,EAAaz8B,IAAOu8B,EAAY7hD,KAAKggD,KAAK16B,EAAIsV,GAC9ConB,EAAc18B,GAAM1R,EAASmuC,EAAUz8B,GACvC28B,EAAiB38B,IACnB,MAAM0N,EAAQ+uB,EAAUz8B,GAClB6V,EAAS6mB,EAAW18B,GAC1BhT,EAAM8S,KAAOplB,KAAKgxB,IAAIgC,IAAU6H,EAChCvoB,EAAM1O,MAAQ0O,EAAM8S,KAAOxR,EAASunB,GAQxC,IAAI+mB,EACAC,EACJ,MAAMC,EAAsB98B,IAjCLvlB,SAkCAuS,EAAM1O,WAlCS4E,IAARirB,GAAqB1zB,EAAI0zB,QAAiBjrB,IAARgrB,GAAqBzzB,EAAIyzB,KAoCrF0uB,EAAsB58B,EACtB68B,EAAW3B,EAAO,CACd57B,UAAW,CAACtS,EAAM1O,MAAOg+C,EAAgBtvC,EAAM1O,QAC/C0e,SAAU48B,EAAsB8C,EAAY18B,EAAGhT,EAAM1O,OACrDwgB,QAASsW,EACTjT,UAAWgT,EACXI,YACAnT,gBAIR,OADA06B,EAAmB,GACZ,CACHnD,mBAAoB,KACpBh9B,KAAOqD,IAOH,IAAI+8B,GAAkB,EAUtB,OATKF,QAAoC35C,IAAxB05C,IACbG,GAAkB,EAClBJ,EAAc38B,GACd88B,EAAmB98B,SAMK9c,IAAxB05C,GAAqC58B,EAAI48B,EAClCC,EAASlgC,KAAKqD,EAAI48B,KAGxBG,GAAmBJ,EAAc38B,GAC3BhT,IAIvB,C,cClFA,MAAMgwC,EAAmBz2C,IACrB,MAAM02C,EAAgBp/C,IAAA,IAAC,UAAE4uB,GAAW5uB,EAAA,OAAK0I,EAAOkmB,IAChD,MAAO,CACHpqB,MAAOA,IAAMgT,EAAAA,GAAM9O,OAAO02C,GAAe,GACzCr7B,KAAMA,KAAMF,EAAAA,EAAAA,IAAYu7B,GAKxB5c,IAAKA,IAAM3T,EAAAA,GAAU2V,aAAe3V,EAAAA,GAAUD,UAAY2T,YAAYC,QCPxE6c,EAAuB,IAC7B,SAASC,EAAsBC,GAC3B,IAAI79B,EAAW,EAEf,IAAIvS,EAAQowC,EAAUzgC,KAAK4C,GAC3B,MAAQvS,EAAM8S,MAAQP,EAAW29B,GAC7B39B,GAHa,GAIbvS,EAAQowC,EAAUzgC,KAAK4C,GAE3B,OAAOA,GAAY29B,EAAuBvzB,IAAWpK,CACzD,C,uICJM89B,EAAQ,CACVC,MAAOjoB,EACPA,QAAO,EACPkoB,MAAOj+B,EACPA,UAAWA,EACX47B,OAAMA,GASV,SAASv7B,EAAY9hB,GAA2M,IAGxNkhB,EACAC,GAJc,SAAE8C,GAAW,EAAI,MAAEjC,EAAQ,EAAC,OAAE29B,EAASR,EAAiB19B,UAAWm+B,EAAW,KAAEn0C,EAAO,YAAW,OAAEsW,EAAS,EAAC,YAAEhB,EAAc,EAAC,WAAEC,EAAa,OAAM,OAAE0iB,EAAM,OAAEmc,EAAM,WAAE/+B,EAAU,SAAED,GAAsB7gB,EAATqP,GAAOwD,EAAAA,EAAAA,GAAA7S,EAAA8S,GACpN2Q,EAAQ,EACRrC,GAAa,EAOjB,MAAME,EAAwBA,KAC1BH,EAAyB,IAAII,QAASC,IAClCN,EAAyBM,KAKjC,IAAIs+B,EADJx+B,IAEA,MAAMy+B,EAAmBP,EAAM/zC,IAASgW,EAKxC,IAAIu+B,EACAD,IAAqBt+B,GACK,kBAAnBm+B,EAAY,KAInBI,GAAwBtH,EAAAA,EAAAA,GAAY,CAAC,EAAG,KAAMkH,EAAa,CACvDxnB,OAAO,IAEXwnB,EAAc,CAAC,EAAG,MAEtB,MAAML,EAAYQ,GAAgBx8C,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAI8L,GAAO,IAAEoS,UAAWm+B,KAC5D,IAAIK,EACe,WAAfj/B,IACAi/B,EAAoBF,GAAgBx8C,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAC/B8L,GAAO,IACVoS,UAAW,IAAIm+B,GAAah1B,UAC5BzL,WAAY9P,EAAQ8P,UAAY,OAGxC,IAAI6E,EAAY,OACZk8B,EAAW,KACXC,EAAY,KACZC,EAAa,KASoB,OAAjCb,EAAUzD,oBAA+B/5B,IACzCw9B,EAAUzD,mBAAqBwD,EAAsBC,IAEzD,MAAM,mBAAEzD,GAAuByD,EAC/B,IAAIc,EAAmBv0B,IACnBw0B,EAAgBx0B,IACO,OAAvBgwB,IACAuE,EAAmBvE,EAAqB/6B,EACxCu/B,EAAgBD,GAAoBt+B,EAAS,GAAKhB,GAEtD,IAAIuC,EAAc,EAClB,MAAMi9B,EAAQ3xB,IACV,GAAkB,OAAduxB,EACA,OAOA18B,EAAQ,IACR08B,EAAYtjD,KAAKyzB,IAAI6vB,EAAWvxB,IAChCnL,EAAQ,IACR08B,EAAYtjD,KAAKyzB,IAAI1B,EAAY0xB,EAAgB78B,EAAO08B,IAExD78B,EADa,OAAb48B,EACcA,EAMArjD,KAAKC,MAAM8xB,EAAYuxB,GAAa18B,EAGtD,MAAM+8B,EAAmBl9B,EAActB,GAASyB,GAAS,EAAI,GAAK,GAC5Dg9B,EAAiBh9B,GAAS,EAAI+8B,EAAmB,EAAIA,EAAmBF,EAC9Eh9B,EAAczmB,KAAKwzB,IAAImwB,EAAkB,GAKvB,aAAdx8B,GAAyC,OAAbk8B,IAC5B58B,EAAcg9B,GAElB,IAAIh6B,EAAUhD,EACVo9B,EAAiBnB,EACrB,GAAIx9B,EAAQ,CAMR,MAAMoW,EAAWt7B,KAAKyzB,IAAIhN,EAAag9B,GAAiBD,EAKxD,IAAIM,EAAmB9jD,KAAK+jD,MAAMzoB,GAK9B0oB,EAAoB1oB,EAAW,GAK9B0oB,GAAqB1oB,GAAY,IAClC0oB,EAAoB,GAEF,IAAtBA,GAA2BF,IAC3BA,EAAmB9jD,KAAKyzB,IAAIqwB,EAAkB5+B,EAAS,GAIhC9f,QAAQ0+C,EAAmB,KAE3B,YAAf3/B,GACA6/B,EAAoB,EAAIA,EACpB9/B,IACA8/B,GAAqB9/B,EAAcs/B,IAGnB,WAAfr/B,IACL0/B,EAAiBT,IAGzB35B,GAAU8R,EAAAA,EAAAA,GAAM,EAAG,EAAGyoB,GAAqBR,CAC/C,CAMA,MAAMlxC,EAAQsxC,EACR,CAAEx+B,MAAM,EAAOxhB,MAAOm/C,EAAY,IAClCc,EAAe5hC,KAAKwH,GACtB05B,IACA7wC,EAAM1O,MAAQu/C,EAAsB7wC,EAAM1O,QAE9C,IAAI,KAAEwhB,GAAS9S,EACVsxC,GAAyC,OAAvB3E,IACnB75B,EAAOwB,GAAS,EAAIH,GAAeg9B,EAAgBh9B,GAAe,GAEtE,MAAMw9B,EAAmC,OAAbZ,IACT,aAAdl8B,GAA2C,YAAdA,GAA2B/B,GAO7D,OANIpB,GACAA,EAAS1R,EAAM1O,OAEfqgD,GACA18B,IAEGjV,GAEL4xC,EAAsBA,KACxBjB,GAAmBA,EAAgB/7B,OACnC+7B,OAAkBz6C,GAEhBud,EAASA,KACXoB,EAAY,OACZ+8B,IACA7/B,IACAI,IACA6+B,EAAYC,EAAa,MAEvBh8B,EAASA,KACXJ,EAAY,WACZlD,GAAcA,IACdigC,IACA7/B,KAEE0C,EAAOA,KACT,GAAIxC,EACA,OACC0+B,IACDA,EAAkBH,EAAOY,IAC7B,MAAM/d,EAAMsd,EAAgBtd,MAC5BkB,GAAUA,IACO,OAAbwc,EACAC,EAAY3d,EAAM0d,EAEZC,GAA2B,aAAdn8B,IACnBm8B,EAAY3d,GAEE,aAAdxe,GACA1C,IAEJ8+B,EAAaD,EACbD,EAAW,KAKXl8B,EAAY,UACZ87B,EAAgBt7C,SAEhByf,GACAL,IAEJ,MAAMyoB,EAAW,CACbrpB,KAAIA,CAACxB,EAASyB,IACH9B,EAAuB6B,KAAKxB,EAASyB,GAEhD,QAAIG,GACA,OAAOC,EAAAA,EAAAA,GAAsBC,EACjC,EACA,QAAIF,CAAKG,GACLA,GAAUC,EAAAA,EAAAA,GAAsBD,GAChCD,EAAcC,EACG,OAAb28B,GAAsBJ,GAA6B,IAAVr8B,EAIzC08B,EAAYL,EAAgBtd,MAAQjf,EAAUE,EAH9Cy8B,EAAW38B,CAKnB,EACA,YAAI7B,GACA,MAAMA,EAA4C,OAAjC69B,EAAUzD,mBACrBwD,EAAsBC,GACtBA,EAAUzD,mBAChB,OAAOz4B,EAAAA,EAAAA,GAAsB3B,EACjC,EACA,SAAI+B,GACA,OAAOA,CACX,EACA,SAAIA,CAAME,GACFA,IAAaF,GAAUq8B,IAE3Br8B,EAAQE,EACR0oB,EAASjpB,MAAOC,EAAAA,EAAAA,GAAsBC,GAC1C,EACA,SAAInU,GACA,OAAO6U,CACX,EACAJ,OACAE,MAAOA,KACHE,EAAY,SACZk8B,EAAW58B,GAEfS,KAAMA,KACF3C,GAAa,EACK,SAAd4C,IAEJA,EAAY,OACZ67B,GAAUA,IACVj9B,MAEJA,OAAQA,KACe,OAAfw9B,GACAG,EAAKH,GACTx9B,KAEJuB,SAAUA,KACNH,EAAY,YAEhB5B,OAASkE,IACL65B,EAAY,EACLI,EAAKj6B,KAGpB,OAAO+lB,CACX,C,4EC3SA,MAAM2U,EACF5jD,WAAAA,GACIC,KAAK4jD,MAAQ,GACb5jD,KAAK6jD,UAAY,IAAIn2C,GACzB,CACAxN,GAAAA,CAAImnC,GACA,IAAKrnC,KAAK6jD,UAAU32C,IAAIm6B,GAGpB,OAFArnC,KAAK6jD,UAAU3jD,IAAImnC,GACnBrnC,KAAK4jD,MAAM3gD,KAAKokC,IACT,CAEf,CACA9a,MAAAA,CAAO8a,GACH,MAAMiV,EAAQt8C,KAAK4jD,MAAMt2C,QAAQ+5B,IAClB,IAAXiV,IACAt8C,KAAK4jD,MAAMrH,OAAOD,EAAO,GACzBt8C,KAAK6jD,UAAUvlC,OAAO+oB,GAE9B,CACAvmC,KAAAA,GACId,KAAK4jD,MAAMjjD,OAAS,EACpBX,KAAK6jD,UAAU/iD,OACnB,ECpBJ,MAAMgjD,EAAa,CACf,UACA,OACA,SACA,YACA,SACA,cCLJ,MAAQC,SAAU5pC,EAAOoL,OAAQiB,EAAa1U,MAAO0f,EAAS,MAAE4V,GDQhE,SAA6B4c,EAAmBC,GAC5C,IAAIC,GAAe,EACfC,GAAoB,EACxB,MAAMryC,EAAQ,CACV0gB,MAAO,EACPjB,UAAW,EACX4V,cAAc,GAEZC,EAAQ0c,EAAWxiD,OAAO,CAAC6sB,EAAKhlB,KAClCglB,EAAIhlB,GDIZ,SAA0B+6C,GAKtB,IAAIE,EAAY,IAAIT,EAChBU,EAAY,IAAIV,EAChBW,EAAW,EAKXnd,GAAe,EACfod,GAAiB,EAIrB,MAAMC,EAAc,IAAIC,QAClBC,EAAO,CAITX,SAAU,SAACvmC,GACP,MAAMmnC,EADuCzjD,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,IAAAA,UAAA,IACNimC,EACjCyd,EAAQD,EAAoBP,EAAYC,EAO9C,OAT0BnjD,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,IAAAA,UAAA,IAItBsjD,EAAYtkD,IAAIsd,GAChBonC,EAAM1kD,IAAIsd,IAAamnC,GAAqBxd,IAE5Cmd,EAAWF,EAAUR,MAAMjjD,QAExB6c,CACX,EAIA+H,OAAS/H,IACL6mC,EAAU93B,OAAO/O,GACjBgnC,EAAYlmC,OAAOd,IAKvB6pB,QAAU7V,IAMN,GAAI2V,EACAod,GAAiB,MADrB,CAUA,GANApd,GAAe,GACdid,EAAWC,GAAa,CAACA,EAAWD,GAErCC,EAAUvjD,QAEVwjD,EAAWF,EAAUR,MAAMjjD,OACvB2jD,EACA,IAAK,IAAI1jD,EAAI,EAAGA,EAAI0jD,EAAU1jD,IAAK,CAC/B,MAAM4c,EAAW4mC,EAAUR,MAAMhjD,GACjC4c,EAASgU,GACLgzB,EAAYt3C,IAAIsQ,KAChBknC,EAAKX,SAASvmC,GACd0mC,IAER,CAEJ/c,GAAe,EACXod,IACAA,GAAiB,EACjBG,EAAKrd,QAAQ7V,GApBjB,IAwBR,OAAOkzB,CACX,CCjFmBG,CAAiB,IAAOX,GAAe,GAC3C/1B,GACR,CAAC,GACE22B,EAAeC,GAAW3d,EAAM2d,GAAQ1d,QAAQv1B,GAChDkzC,EAAeA,KACjB,MAAMzzB,EAAY2T,YAAYC,MAC9B+e,GAAe,EACfpyC,EAAM0gB,MAAQ2xB,EACR,IAAO,GACP3kD,KAAKwzB,IAAIxzB,KAAKyzB,IAAI1B,EAAYzf,EAAMyf,UAnB/B,IAmBuD,GAClEzf,EAAMyf,UAAYA,EAClBzf,EAAMq1B,cAAe,EACrB2c,EAAWjqC,QAAQirC,GACnBhzC,EAAMq1B,cAAe,EACjB+c,GAAgBD,IAChBE,GAAoB,EACpBH,EAAkBgB,KAUpBjB,EAAWD,EAAWxiD,OAAO,CAAC6sB,EAAKhlB,KACrC,MAAMu7C,EAAOtd,EAAMj+B,GAMnB,OALAglB,EAAIhlB,GAAO,SAACk+B,GAAkD,IAAzC4d,EAAS/jD,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,IAAAA,UAAA,GAAUgkD,EAAShkD,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,IAAAA,UAAA,GAG7C,OAFKgjD,IATTA,GAAe,EACfC,GAAoB,EACfryC,EAAMq1B,cACP6c,EAAkBgB,IAQXN,EAAKX,SAAS1c,EAAS4d,EAAWC,EAC7C,EACO/2B,GACR,CAAC,GAEJ,MAAO,CAAE41B,WAAUx+B,OADH8hB,GAAYyc,EAAWjqC,QAAS1Q,GAAQi+B,EAAMj+B,GAAKoc,OAAO8hB,IAC/Cv1B,QAAOs1B,QACtC,CCtD2E+d,CAAqD,qBAA1BC,sBAAwCA,sBAAwBvjD,EAAAA,GAAM,E,0DCD5K,SAAS08C,EAAcnC,GACnB,MAAMxnC,EAAS,CAAC,GAEhB,OCFJ,SAAoBA,EAAQywC,GACxB,MAAMpyB,EAAMre,EAAOA,EAAOjU,OAAS,GACnC,IAAK,IAAIC,EAAI,EAAGA,GAAKykD,EAAWzkD,IAAK,CACjC,MAAM0kD,GAAiBxqB,EAAAA,EAAAA,GAAS,EAAGuqB,EAAWzkD,GAC9CgU,EAAO3R,MAAK4V,EAAAA,EAAAA,GAAIoa,EAAK,EAAGqyB,GAC5B,CACJ,CDLIC,CAAW3wC,EAAQwnC,EAAIz7C,OAAS,GACzBiU,CACX,C,qDENA,MAAM4wC,EAAyBrjD,GAAWgH,GAAuB,kBAARA,GAAoBA,EAAIyE,WAAWzL,GACtFqQ,EAAoBgzC,EAAsB,MAC1C9V,EAAqB8V,EAAsB,UAC3CvjD,EAAmB,+E,iBCGzB,SAAS48C,EAAkB/8B,EAAU2jC,GACjC,OAAOA,EAAgB3jC,GAAY,IAAO2jC,GAAiB,CAC/D,C,6FCHA,MAAMnjD,EAAQ,CACV6B,KAAO5E,GAAMk6C,EAAAA,EAAKt1C,KAAK5E,IAAMi6C,EAAAA,EAAIr1C,KAAK5E,IAAMuF,EAAAA,EAAKX,KAAK5E,GACtD6C,MAAQ7C,GACAk6C,EAAAA,EAAKt1C,KAAK5E,GACHk6C,EAAAA,EAAKr3C,MAAM7C,GAEbuF,EAAAA,EAAKX,KAAK5E,GACRuF,EAAAA,EAAK1C,MAAM7C,GAGXi6C,EAAAA,EAAIp3C,MAAM7C,GAGzByE,UAAYzE,IACDM,EAAAA,EAAAA,IAASN,GACVA,EACAA,EAAEuH,eAAe,OACb2yC,EAAAA,EAAKz1C,UAAUzE,GACfuF,EAAAA,EAAKd,UAAUzE,G,wDCrBjC,IAAIoqB,EAAU9nB,EAAAA,EACVs3B,EAAYt3B,EAAAA,C,6ECEhB,MAGM6jD,EAAsB,CACxBx6C,aAASlD,GAOb,MAAM29C,EASF5lD,WAAAA,CAAYi8C,GAAoB,IAAA4J,EAAA,SAAd5zC,EAAO9Q,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,GAAAA,UAAA,GAAG,CAAC,EApBhBkC,MAyBTpD,KAAK6lD,QAAU,UAMf7lD,KAAK2yB,UAAY,EAMjB3yB,KAAK8lD,YAAc,EAQnB9lD,KAAK+lD,kBAAmB,EAIxB/lD,KAAKuzC,OAAS,CAAC,EACfvzC,KAAKgmD,gBAAkB,SAACzmD,GAAqB,IAAlBkM,IAAMvK,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,KAAAA,UAAA,GAC7B0kD,EAAKlkC,KAAOkkC,EAAK16C,QACjB06C,EAAK16C,QAAU3L,EAEf,MAAM,MAAEizB,EAAK,UAAEjB,GAAcC,EAAAA,GACzBo0B,EAAKE,cAAgBv0B,IACrBq0B,EAAKjzB,UAAYH,EACjBozB,EAAKE,YAAcv0B,EACnBpX,EAAAA,GAAMujB,WAAWkoB,EAAKK,wBAGtBL,EAAKlkC,OAASkkC,EAAK16C,SAAW06C,EAAKrS,OAAO2S,QAC1CN,EAAKrS,OAAO2S,OAAO5lD,OAAOslD,EAAK16C,SAG/B06C,EAAKrS,OAAO4S,gBACZP,EAAKrS,OAAO4S,eAAe7lD,OAAOslD,EAAK/gD,eAGvC4G,GAAUm6C,EAAKrS,OAAO6S,eACtBR,EAAKrS,OAAO6S,cAAc9lD,OAAOslD,EAAK16C,QAE9C,EASAlL,KAAKimD,sBAAwB,IAAM9rC,EAAAA,GAAMujB,WAAW19B,KAAKqmD,eAUzDrmD,KAAKqmD,cAAgB1jD,IAAmB,IAAlB,UAAE4uB,GAAW5uB,EAC3B4uB,IAAcvxB,KAAK8lD,cACnB9lD,KAAK0hB,KAAO1hB,KAAKkL,QACblL,KAAKuzC,OAAO4S,gBACZnmD,KAAKuzC,OAAO4S,eAAe7lD,OAAON,KAAK6E,iBAInD7E,KAAKg2C,aAAc,EACnBh2C,KAAK0hB,KAAO1hB,KAAKkL,QAAU8wC,EAC3Bh8C,KAAK+lD,kBArGI3iD,EAqGuBpD,KAAKkL,SApGjC5G,MAAMqB,WAAWvC,KAqGrBpD,KAAKqlB,MAAQrT,EAAQqT,KACzB,CAyCAihC,QAAAA,CAASC,GAIL,OAAOvmD,KAAK40C,GAAG,SAAU2R,EAC7B,CACA3R,EAAAA,CAAGj6B,EAAW6C,GACLxd,KAAKuzC,OAAO54B,KACb3a,KAAKuzC,OAAO54B,GAAa,IAAI7a,EAAAA,GAEjC,MAAMy2C,EAAcv2C,KAAKuzC,OAAO54B,GAAWza,IAAIsd,GAC/C,MAAkB,WAAd7C,EACO,KACH47B,IAKAp8B,EAAAA,GAAMC,KAAK,KACFpa,KAAKuzC,OAAO2S,OAAOrlD,WACpBb,KAAK0mB,UAKd6vB,CACX,CACAiQ,cAAAA,GACI,IAAK,MAAMC,KAAiBzmD,KAAKuzC,OAC7BvzC,KAAKuzC,OAAOkT,GAAe3lD,OAEnC,CAMA4lD,MAAAA,CAAOC,EAAeC,GAClB5mD,KAAK2mD,cAAgBA,EACrB3mD,KAAK4mD,kBAAoBA,CAC7B,CAgBAz5C,GAAAA,CAAI5N,GAAkB,IAAfkM,IAAMvK,UAAAP,OAAA,QAAAqH,IAAA9G,UAAA,KAAAA,UAAA,GACJuK,GAAWzL,KAAK2mD,cAIjB3mD,KAAK2mD,cAAcpnD,EAAGS,KAAKgmD,iBAH3BhmD,KAAKgmD,gBAAgBzmD,EAAGkM,EAKhC,CACAob,eAAAA,CAAgBnF,EAAMxW,EAASsnB,GAC3BxyB,KAAKmN,IAAIjC,GACTlL,KAAK0hB,KAAOA,EACZ1hB,KAAK2yB,UAAYH,CACrB,CAKAwf,IAAAA,CAAKzyC,GACDS,KAAKgmD,gBAAgBzmD,GACrBS,KAAK0hB,KAAOniB,EACZS,KAAK0mB,OACD1mB,KAAK4mD,mBACL5mD,KAAK4mD,mBACb,CAQA55C,GAAAA,GAII,OAHI04C,EAAoBx6C,SACpBw6C,EAAoBx6C,QAAQjI,KAAKjD,MAE9BA,KAAKkL,OAChB,CAIA27C,WAAAA,GACI,OAAO7mD,KAAK0hB,IAChB,CAQA7c,WAAAA,GAEI,OAAO7E,KAAK+lD,kBAEJlH,EAAAA,EAAAA,GAAkBl5C,WAAW3F,KAAKkL,SAC9BvF,WAAW3F,KAAK0hB,MAAO1hB,KAAK2yB,WAClC,CACV,CAaAxrB,KAAAA,CAAMgxB,GAEF,OADAn4B,KAAK0mB,OACE,IAAIxC,QAASC,IAChBnkB,KAAKg2C,aAAc,EACnBh2C,KAAKyI,UAAY0vB,EAAehU,GAC5BnkB,KAAKuzC,OAAOuT,gBACZ9mD,KAAKuzC,OAAOuT,eAAexmD,WAEhCqlB,KAAK,KACA3lB,KAAKuzC,OAAOwT,mBACZ/mD,KAAKuzC,OAAOwT,kBAAkBzmD,SAElCN,KAAKgnD,kBAEb,CAMAtgC,IAAAA,GACQ1mB,KAAKyI,YACLzI,KAAKyI,UAAUie,OACX1mB,KAAKuzC,OAAO0T,iBACZjnD,KAAKuzC,OAAO0T,gBAAgB3mD,UAGpCN,KAAKgnD,gBACT,CAMAE,WAAAA,GACI,QAASlnD,KAAKyI,SAClB,CACAu+C,cAAAA,UACWhnD,KAAKyI,SAChB,CAUA0+C,OAAAA,GACInnD,KAAKwmD,iBACLxmD,KAAK0mB,OACD1mB,KAAK4mD,mBACL5mD,KAAK4mD,mBAEb,EAEJ,SAASz7B,EAAY6wB,EAAMhqC,GACvB,OAAO,IAAI2zC,EAAY3J,EAAMhqC,EACjC,C,6EC5UA,MAAMxP,EAAS,CACX2B,KAAO5E,GAAmB,kBAANA,EACpB6C,MAAOuD,WACP3B,UAAYzE,GAAMA,GAEhB6F,GAAKc,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACJ1D,GAAM,IACTwB,UAAYzE,IAAMw7B,EAAAA,EAAAA,GAAM,EAAG,EAAGx7B,KAE5BkR,GAAKvK,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACJ1D,GAAM,IACTmQ,QAAS,G,uFCRb,MACMy0C,GAAOlhD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACN1D,EAAAA,IAAM,IACTwB,UAAYzE,GAAMC,KAAKC,MAHLF,KAAMw7B,EAAAA,EAAAA,GAAM,EAAG,IAAKx7B,GAGT8nD,CAAa9nD,MAExCk6C,EAAO,CACTt1C,MAAMY,EAAAA,EAAAA,GAAc,MAAO,OAC3B3C,OAAO4C,EAAAA,EAAAA,GAAW,MAAO,QAAS,QAClChB,UAAWrB,IAAA,IAAC,IAAEi3C,EAAG,MAAEC,EAAK,KAAEC,EAAM10C,MAAOC,EAAU,GAAG1C,EAAA,MAAK,QACrDykD,EAAQpjD,UAAU41C,GAClB,KACAwN,EAAQpjD,UAAU61C,GAClB,KACAuN,EAAQpjD,UAAU81C,GAClB,MACAx6C,EAAAA,EAAAA,IAAS8F,EAAAA,GAAMpB,UAAUqB,IACzB,K,kCCAR,MAAMwT,EAAMA,CAACuQ,EAAM8hB,EAAIpQ,KAAcA,EAAW1R,EAAO0R,EAAWoQ,EAAK9hB,C,kCCnBvE,MAAMyyB,EAAiB55B,GAAYvgB,GAAM,EAAIugB,EAAO,EAAIvgB,E,0CCIxD,MAAMykB,EAAyBmhC,GAAsB,IAAVA,EACrCthC,EAAyBuhC,GAAiBA,EAAe,G,kCCF/D,MAAM18C,GAAkBrJ,E,QAAAA,eAAc,K","sources":["../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/lucide-react/src/defaultAttributes.ts","../node_modules/lucide-react/src/createLucideIcon.ts","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs"],"sourcesContent":["import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","const noop = (any) => any;\n\nexport { noop };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] && !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.render();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !globalTapTarget &&\n                        !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Cancelling an animation will write to the DOM. For safety we want to defer\n     * this until the next `update` frame lifecycle. This flag tracks whether we\n     * have a pending cancel, if so we shouldn't allow animations to finish.\n     */\n    let pendingCancel = false;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => {\n        pendingCancel = false;\n        animation.cancel();\n    };\n    const safeCancel = () => {\n        pendingCancel = true;\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        if (pendingCancel)\n            return;\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => {\n            if (pendingCancel)\n                return;\n            animation.finish();\n        },\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n};\n\nexport { MotionGlobalConfig };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false ||\n            MotionGlobalConfig.skipAnimations) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (\n        /**\n         * If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        !transition.isHandoff &&\n            value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction hasKeyframesChanged(value, target) {\n    const current = value.get();\n    if (Array.isArray(target)) {\n        for (let i = 0; i < target.length; i++) {\n            if (target[i] !== current)\n                return true;\n        }\n    }\n    else {\n        return current !== target;\n    }\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    valueTransition.isHandoff = true;\n                }\n            }\n        }\n        let canSkip = !valueTransition.isHandoff &&\n            !hasKeyframesChanged(value, valueTarget);\n        if (valueTransition.type === \"spring\" &&\n            (value.getVelocity() || valueTransition.velocity)) {\n            canSkip = false;\n        }\n        /**\n         * Temporarily disable skipping animations if there's an animation in\n         * progress. Better would be to track the current target of a value\n         * and compare that against valueTarget.\n         */\n        if (value.animation) {\n            canSkip = false;\n        }\n        if (canSkip)\n            continue;\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","function _objectDestructuringEmpty(t) {\n  if (null == t) throw new TypeError(\"Cannot destructure \" + t);\n}\nexport { _objectDestructuringEmpty as default };","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.18.0\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.18.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","export default {\n  xmlns: 'http://www.w3.org/2000/svg',\n  width: 24,\n  height: 24,\n  viewBox: '0 0 24 24',\n  fill: 'none',\n  stroke: 'currentColor',\n  strokeWidth: 2,\n  strokeLinecap: 'round',\n  strokeLinejoin: 'round',\n};\n","import { forwardRef, createElement, ReactSVG, SVGProps, ForwardRefExoticComponent, RefAttributes } from 'react';\nimport defaultAttributes from './defaultAttributes';\n\nexport type IconNode = [elementName: keyof ReactSVG, attrs: Record<string, string>][]\n\nexport type SVGAttributes = Partial<SVGProps<SVGSVGElement>>\ntype ComponentAttributes = RefAttributes<SVGSVGElement> & SVGAttributes\n\nexport interface LucideProps extends ComponentAttributes {\n  size?: string | number\n  absoluteStrokeWidth?: boolean\n}\n\nexport type LucideIcon = ForwardRefExoticComponent<LucideProps>;\n/**\n * Converts string to KebabCase\n * Copied from scripts/helper. If anyone knows how to properly import it here\n * then please fix it.\n *\n * @param {string} string\n * @returns {string} A kebabized string\n */\nexport const toKebabCase = (string: string) => string.replace(/([a-z0-9])([A-Z])/g, '$1-$2').toLowerCase();\n\nconst createLucideIcon = (iconName: string, iconNode: IconNode): LucideIcon => {\n  const Component = forwardRef<SVGSVGElement, LucideProps>(\n    ({ color = 'currentColor', size = 24, strokeWidth = 2, absoluteStrokeWidth, children, ...rest }, ref) =>\n      createElement(\n        'svg',\n        {\n          ref,\n          ...defaultAttributes,\n          width: size,\n          height: size,\n          stroke: color,\n          strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,\n          className: `lucide lucide-${toKebabCase(iconName)}`,\n          ...rest,\n        },\n        [\n          ...iconNode.map(([tag, attrs]) => createElement(tag, attrs)),\n          ...(\n            (Array.isArray(children) ? children : [children]) || []\n          )\n        ],\n      ),\n  );\n\n  Component.displayName = `${iconName}`;\n\n  return Component;\n};\n\nexport default createLucideIcon\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        if (process.env.NODE_ENV !== \"production\") {\n            invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => steps[stepId].process(state);\n    const processBatch = () => {\n        const timestamp = performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.18.0\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n"],"names":["useIsomorphicLayoutEffect","isBrowser","useLayoutEffect","useEffect","sanitize","v","Math","round","floatRegex","colorRegex","singleColorRegex","isString","SubscriptionManager","constructor","this","subscriptions","add","handler","addUniqueItem","removeItem","notify","a","b","c","numSubscriptions","length","i","getSize","clear","combineFunctions","pipe","_len","arguments","transformers","Array","_key","reduce","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","noop","any","cssVarTokeniser","regex","cssVariableRegex","countKey","token","parse","colorTokeniser","color","numberTokeniser","number","tokenise","info","_ref","matches","tokenised","match","replace","values","push","map","analyseComplexValue","value","originalValue","toString","numVars","numColors","numNumbers","includes","parseComplexValue","createTransformer","source","numValues","output","transform","convertNumbersToZero","complex","test","_a","_b","isNaN","getAnimatableNone","parsed","transformer","LayoutGroupContext","isMotionValue","Boolean","getVelocity","hsla","isColorString","splitColor","hue","saturation","lightness","alpha","alpha$1","percent","createUnitType","unit","endsWith","split","parseFloat","concat","degrees","px","vh","vw","progressPercentage","_objectSpread","MotionContext","LazyContext","strict","camelToDash","str","toLowerCase","optimizedAppearDataAttribute","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","variants","useCreateMotionContext","initial","context","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","key","isEnabled","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","presenceContext","PresenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","wantsHandoff","window","HandoffComplete","render","animationState","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","id","createMotionProxy","createConfig","custom","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","indexOf","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","translateAlias","x","y","z","transformPerspective","numTransforms","getValueAsType","type","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scale","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","isCSSVariableName","valueType","valueAsType","default","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","_objectWithoutProperties","_excluded","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","children","renderedChildren","createElement","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","frame","read","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","handleEvent","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","callback","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","gestureAnimations","super","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","removePointerListener","removeFocusListener","onFocus","isFocusVisible","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","supportsWaapi","result","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","onUpdate","onComplete","repeatDelay","repeatType","damping","resolveFinishedPromise","currentFinishedPromise","hasStopped","pendingCancel","updateFinishedPromise","Promise","resolve","keyframes","duration","times","requiresPregeneratedKeyframes","sampleAnimation","animateValue","repeat","delay","done","pregeneratedKeyframes","t","sample","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","cancel","safeCancel","onfinish","getFinalKeyframe","then","reject","attachTimeline","timeline","time","millisecondsToSeconds","currentTime","newTime","secondsToMilliseconds","speed","playbackRate","newSpeed","play","cancelFrame","pause","stop","playState","autoplay","setWithVelocity","complete","finish","underDampedSpring","stiffness","restSpeed","keyframesTransition","getDefaultTransition","valueKey","sqrt","isAnimatable","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","MotionGlobalConfig","animateMotionValue","valueTransition","elapsed","isTargetAnimatable","defaultOrigin","from","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","warning","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","isHandoff","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isNumericalString","testValueType","dimensionValueTypes","findDimensionValueType","find","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","motionValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","hasKeyframesChanged","animateTarget","transitionOverride","_visualElement$makeTa","willChange","animations","animationTypeState","getState","HandoffAppearAnimations","appearId","canSkip","shouldReduceMotion","remove","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","reverse","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","acc","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","Infinity","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","abs","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","timestamp","frameData","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","delta","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","max","min","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","startAnimation","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","invariant","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","bounceStiffness","bounceDamping","inertia","timeConstant","restDelta","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","latest","sourceLength","targetLength","progress","clamp","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","template","xScale","yScale","averageScale","MeasureLayoutWithContext","React__default","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","postRender","stack","getStack","members","componentDidUpdate","queueMicrotask","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","performance","now","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","onPlay","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","isProcessing","steps","process","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","to","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","ProjectionNode","splitCSSVariableRegex","getVariableValue","fallback","exec","parseCSSVariable","getPropertyValue","trimmed","isCSSVariableToken","resolveCSSVariables","TypeError","_objectDestructuringEmpty","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref0","_ref1","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","_ref10","scrollTo","unitConversion","hasPositionalKey","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","on","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_excluded2","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","hasAnimated","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","unsubscribe","removeValueFromRenderState","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","parseDomVariant","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","baseConfig","createDomMotionConfig","testProp","aName","bName","cName","defaultAttributes","xmlns","strokeWidth","strokeLinecap","strokeLinejoin","createLucideIcon$1","createLucideIcon","iconName","iconNode","absoluteStrokeWidth","rest","className","displayName","hueToRgb","q","mixLinearColor","fromExpo","colorTypes","hex","rgba","asRGBA","model","red","green","blue","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","originStats","targetStats","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","interpolator","progressInRange","sin","acos","reverseEasing","circInOut","mirrorEasing","init","r","g","parseInt","arr","item","index","splice","toFromDifference","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","isEasingArray","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","x1","y1","x2","y2","keyframeValues","easingFunctions","absoluteTimes","o","convertOffsetToTimes","defaultOffset","mapTimeToKeyframe","calculatedDuration","calcGeneratorVelocity","resolveValue","prevT","velocityPerSecond","safeMin","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","spring","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","power","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","maxGeneratorDuration","calcGeneratorDuration","generator","types","decay","tween","driver","keyframes$1","onStop","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","tick","timeWithoutDelay","isInDelayPhase","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","stopAnimationDriver","Queue","order","scheduled","stepsOrder","schedule","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","addToCurrentFrame","queue","createRenderStep","processStep","stepId","processBatch","keepAlive","immediate","createRenderBatcher","requestAnimationFrame","remaining","offsetProgress","fillOffset","checkStringStartsWith","frameDuration","collectMotionValues","MotionValue","_this","version","lastUpdated","canTrackVelocity","updateAndNotify","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","onChange","subscription","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","getPrevious","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","rgbUnit","clampRgbUnit","seconds","milliseconds"],"sourceRoot":""}